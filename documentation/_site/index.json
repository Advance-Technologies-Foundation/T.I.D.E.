{
  "BusinessProcess/AtfProcess_LoadWorkspaceFromGit.html": {
    "href": "BusinessProcess/AtfProcess_LoadWorkspaceFromGit.html",
    "title": "Load workspace from Git | AtfTide",
    "summary": "Load workspace from Git Business process to load workspace from git, and then installs is on Creatio."
  },
  "UserTask/AtfProcessUserTask_CloneRepository.html": {
    "href": "UserTask/AtfProcessUserTask_CloneRepository.html",
    "title": "Clone Repository UserTask | AtfTide",
    "summary": "Clone Repository UserTask This UserTask is part of the Load workspace from Git and is used to clone a repository."
  },
  "api/AtfTIDE.AppEventListener.html": {
    "href": "api/AtfTIDE.AppEventListener.html",
    "title": "Class AppEventListener | AtfTide",
    "summary": "Class AppEventListener Namespace AtfTIDE Assembly AtfTIDE.dll public class AppEventListener : IAppEventListener Inheritance object AppEventListener Implements IAppEventListener Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnAppEnd(AppEventContext) Handles application end: stops the schema monitor thread safely. public void OnAppEnd(AppEventContext context) Parameters context AppEventContext OnAppStart(AppEventContext) Handles application startup: starts schema monitor, ensures Clio is installed, checks for Clio and AtfTide updates, and updates related system settings. public void OnAppStart(AppEventContext context) Parameters context AppEventContext Remarks Updates system settings: TideConsts.SysSettingClioPath - absolute path to installed clio.dll. AtfTideUpdateAvailable - whether a newer NuGet version of AtfTide exists. AtfClioUpdateAvailable - whether a newer NuGet version of Clio exists. OnSessionEnd(AppEventContext) public void OnSessionEnd(AppEventContext context) Parameters context AppEventContext OnSessionStart(AppEventContext) public void OnSessionStart(AppEventContext context) Parameters context AppEventContext"
  },
  "api/AtfTIDE.ClioInstaller.Dto.Context.html": {
    "href": "api/AtfTIDE.ClioInstaller.Dto.Context.html",
    "title": "Class Context | AtfTide",
    "summary": "Class Context Namespace AtfTIDE.ClioInstaller.Dto Assembly AtfTIDE.dll public class Context Inheritance object Context Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Base [JsonPropertyName(\"@base\")] public string Base { get; set; } Property Value string Vocab [JsonPropertyName(\"@vocab\")] public string Vocab { get; set; } Property Value string"
  },
  "api/AtfTIDE.ClioInstaller.Dto.Data.html": {
    "href": "api/AtfTIDE.ClioInstaller.Dto.Data.html",
    "title": "Class Data | AtfTide",
    "summary": "Class Data Namespace AtfTIDE.ClioInstaller.Dto Assembly AtfTIDE.dll public class Data Inheritance object Data Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id [JsonPropertyName(\"@id\")] public string Id { get; set; } Property Value string LicenseUrl [JsonPropertyName(\"licenseUrl\")] public string LicenseUrl { get; set; } Property Value string Owners [JsonPropertyName(\"owners\")] public IEnumerable<string> Owners { get; set; } Property Value IEnumerable<string> PackageIdId [JsonPropertyName(\"id\")] public string PackageIdId { get; set; } Property Value string PackageTypes [JsonPropertyName(\"packageTypes\")] public IEnumerable<PackageType> PackageTypes { get; set; } Property Value IEnumerable<PackageType> ProjectUrl [JsonPropertyName(\"projectUrl\")] public Uri ProjectUrl { get; set; } Property Value Uri Registration [JsonPropertyName(\"registration\")] public Uri Registration { get; set; } Property Value Uri Summary [JsonPropertyName(\"summary\")] public string Summary { get; set; } Property Value string Tags [JsonPropertyName(\"tags\")] public IEnumerable<string> Tags { get; set; } Property Value IEnumerable<string> Title [JsonPropertyName(\"title\")] public string Title { get; set; } Property Value string TotalDownloads [JsonPropertyName(\"totalDownloads\")] public int TotalDownloads { get; set; } Property Value int Type [JsonPropertyName(\"@type\")] public string Type { get; set; } Property Value string Verified [JsonPropertyName(\"verified\")] public bool Verified { get; set; } Property Value bool Version [JsonPropertyName(\"version\")] public string Version { get; set; } Property Value string Versions [JsonPropertyName(\"versions\")] public IEnumerable<Version> Versions { get; set; } Property Value IEnumerable<Version> Vulnerabilities [JsonPropertyName(\"vulnerabilities\")] public object[] Vulnerabilities { get; set; } Property Value object[] authors [JsonPropertyName(\"authors\")] public string[] authors { get; set; } Property Value string[] description [JsonPropertyName(\"description\")] public string description { get; set; } Property Value string"
  },
  "api/AtfTIDE.ClioInstaller.Dto.PackageType.html": {
    "href": "api/AtfTIDE.ClioInstaller.Dto.PackageType.html",
    "title": "Class PackageType | AtfTide",
    "summary": "Class PackageType Namespace AtfTIDE.ClioInstaller.Dto Assembly AtfTIDE.dll public class PackageType Inheritance object PackageType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string"
  },
  "api/AtfTIDE.ClioInstaller.Dto.SearchResponse.html": {
    "href": "api/AtfTIDE.ClioInstaller.Dto.SearchResponse.html",
    "title": "Class SearchResponse | AtfTide",
    "summary": "Class SearchResponse Namespace AtfTIDE.ClioInstaller.Dto Assembly AtfTIDE.dll public class SearchResponse Inheritance object SearchResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Context [JsonPropertyName(\"@context\")] public Context Context { get; set; } Property Value Context Data [JsonPropertyName(\"data\")] public IEnumerable<Data> Data { get; set; } Property Value IEnumerable<Data> TotalHits [JsonPropertyName(\"totalHits\")] public int TotalHits { get; set; } Property Value int"
  },
  "api/AtfTIDE.ClioInstaller.Dto.Version.html": {
    "href": "api/AtfTIDE.ClioInstaller.Dto.Version.html",
    "title": "Class Version | AtfTide",
    "summary": "Class Version Namespace AtfTIDE.ClioInstaller.Dto Assembly AtfTIDE.dll public class Version Inheritance object Version Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Downloads [JsonPropertyName(\"downloads\")] public int Downloads { get; set; } Property Value int Id [JsonPropertyName(\"@id\")] public string Id { get; set; } Property Value string VVersion [JsonPropertyName(\"version\")] public string VVersion { get; set; } Property Value string"
  },
  "api/AtfTIDE.ClioInstaller.Dto.html": {
    "href": "api/AtfTIDE.ClioInstaller.Dto.html",
    "title": "Namespace AtfTIDE.ClioInstaller.Dto | AtfTide",
    "summary": "Namespace AtfTIDE.ClioInstaller.Dto Classes Context Data PackageType SearchResponse Version"
  },
  "api/AtfTIDE.ClioInstaller.IInstaller.html": {
    "href": "api/AtfTIDE.ClioInstaller.IInstaller.html",
    "title": "Interface IInstaller | AtfTide",
    "summary": "Interface IInstaller Namespace AtfTIDE.ClioInstaller Assembly AtfTIDE.dll public interface IInstaller Methods CheckIsClioInstalled() IErrorOr<bool> CheckIsClioInstalled() Returns IErrorOr<bool> GetClioVersion() IErrorOr<Version> GetClioVersion() Returns IErrorOr<Version> InstallClio() IErrorOr<Success> InstallClio() Returns IErrorOr<Success> UpdateClio() IErrorOr<Success> UpdateClio() Returns IErrorOr<Success>"
  },
  "api/AtfTIDE.ClioInstaller.INugetClient.html": {
    "href": "api/AtfTIDE.ClioInstaller.INugetClient.html",
    "title": "Interface INugetClient | AtfTide",
    "summary": "Interface INugetClient Namespace AtfTIDE.ClioInstaller Assembly AtfTIDE.dll public interface INugetClient Methods DownloadClioAsync(string) Downloads the latest Clio package asynchronously. Task<ErrorOr<Success>> DownloadClioAsync(string clioDirectory) Parameters clioDirectory string Directory where clio is to be installed Returns Task<ErrorOr<Success>> An ErrorOr.ErrorOr<TValue> indicating the result of the download operation. Remarks This method constructs the request URI based on the specified version or retrieves the latest version if not specified. It then sends an HTTP GET request to download the package and saves it to a file. DownloadClioAsync(string, string) Downloads the specific version of Clio package asynchronously. Task<ErrorOr<Success>> DownloadClioAsync(string clioDirectory, string version) Parameters clioDirectory string Directory where clio is to be installed version string The version of the Clio package to download. If not specified, the latest version will be downloaded. Returns Task<ErrorOr<Success>> An ErrorOr.ErrorOr<TValue> indicating the result of the download operation. Remarks This method constructs the request URI based on the specified version or retrieves the latest version if not specified. It then sends an HTTP GET request to download the package and saves it to a file. GetMaxVersionAsync(string) Retrieves the maximum version of the specified NuGet package asynchronously. Task<ErrorOr<string>> GetMaxVersionAsync(string packageName) Parameters packageName string The name of the NuGet package. Returns Task<ErrorOr<string>> A task that represents the asynchronous operation. The task result contains the maximum version of the specified package. SearchAsync() Searches for the Clio package asynchronously. Task<ErrorOr<SearchResponse>> SearchAsync() Returns Task<ErrorOr<SearchResponse>> A task that represents the asynchronous operation. The task result contains an ErrorOr.ErrorOr<TValue> indicating the result of the search operation."
  },
  "api/AtfTIDE.ClioInstaller.Installer.html": {
    "href": "api/AtfTIDE.ClioInstaller.Installer.html",
    "title": "Class Installer | AtfTide",
    "summary": "Class Installer Namespace AtfTIDE.ClioInstaller Assembly AtfTIDE.dll public class Installer : IInstaller Inheritance object Installer Implements IInstaller Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Installer(INugetClient, IFileSystem) public Installer(INugetClient nugetClient, IFileSystem fileSystem) Parameters nugetClient INugetClient fileSystem IFileSystem Methods CheckIsClioInstalled() public IErrorOr<bool> CheckIsClioInstalled() Returns IErrorOr<bool> GetClioVersion() public IErrorOr<Version> GetClioVersion() Returns IErrorOr<Version> InstallClio() public IErrorOr<Success> InstallClio() Returns IErrorOr<Success> UpdateClio() public IErrorOr<Success> UpdateClio() Returns IErrorOr<Success>"
  },
  "api/AtfTIDE.ClioInstaller.NugetClient.html": {
    "href": "api/AtfTIDE.ClioInstaller.NugetClient.html",
    "title": "Class NugetClient | AtfTide",
    "summary": "Class NugetClient Namespace AtfTIDE.ClioInstaller Assembly AtfTIDE.dll public class NugetClient : INugetClient Inheritance object NugetClient Implements INugetClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NugetClient(HttpClient, IFileSystem, ILog, ILiveLogger) public NugetClient(HttpClient client, IFileSystem fileSystem, ILog logger, ILiveLogger liveLogger) Parameters client HttpClient fileSystem IFileSystem logger ILog liveLogger ILiveLogger Methods DownloadClioAsync(string) Downloads the latest Clio package asynchronously. public Task<ErrorOr<Success>> DownloadClioAsync(string clioDirectory) Parameters clioDirectory string Directory where clio is to be installed Returns Task<ErrorOr<Success>> An ErrorOr.ErrorOr<TValue> indicating the result of the download operation. Remarks This method constructs the request URI based on the specified version or retrieves the latest version if not specified. It then sends an HTTP GET request to download the package and saves it to a file. DownloadClioAsync(string, string) Downloads the Clio package asynchronously, and unzips it to clio folder. public Task<ErrorOr<Success>> DownloadClioAsync(string clioDirectory, string version) Parameters clioDirectory string Directory where clio is to be installed version string The version of the Clio package to download. If not specified, the latest version will be downloaded. Returns Task<ErrorOr<Success>> An ErrorOr.ErrorOr<TValue> indicating the result of the download operation. GetMaxVersionAsync(string) Retrieves the maximum version of the specified NuGet package asynchronously. public Task<ErrorOr<string>> GetMaxVersionAsync(string packageName) Parameters packageName string The name of the NuGet package. Returns Task<ErrorOr<string>> A task that represents the asynchronous operation. The task result contains the maximum version of the specified package. SearchAsync() Searches for the Clio package asynchronously. public Task<ErrorOr<SearchResponse>> SearchAsync() Returns Task<ErrorOr<SearchResponse>> A task that represents the asynchronous operation. The task result contains an ErrorOr.ErrorOr<TValue> indicating the result of the search operation."
  },
  "api/AtfTIDE.ClioInstaller.html": {
    "href": "api/AtfTIDE.ClioInstaller.html",
    "title": "Namespace AtfTIDE.ClioInstaller | AtfTide",
    "summary": "Namespace AtfTIDE.ClioInstaller Classes Installer NugetClient Interfaces IInstaller INugetClient"
  },
  "api/AtfTIDE.Commands.html": {
    "href": "api/AtfTIDE.Commands.html",
    "title": "Enum Commands | AtfTide",
    "summary": "Enum Commands Namespace AtfTIDE Assembly AtfTIDE.dll Defines supported git operations public enum Commands Fields AddAll = 1 Checkout = 6 Clone = 0 Commit = 4 DiscardFiles = 10 DownloadPackages = 5 GetBranches = 7 GetChangedFiles = 9 GetDiff = 8 Pull = 3 Push = 2"
  },
  "api/AtfTIDE.ConsoleGit.html": {
    "href": "api/AtfTIDE.ConsoleGit.html",
    "title": "Class ConsoleGit | AtfTide",
    "summary": "Class ConsoleGit Namespace AtfTIDE Assembly AtfTIDE.dll [DefaultBinding(typeof(IConsoleGit), Name = \"AtfTIDE.ConsoleGit\")] public class ConsoleGit : IConsoleGit Inheritance object ConsoleGit Implements IConsoleGit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Execute(ConsoleGitArgs) Executes a git command with the specified arguments public ConsoleGitResult Execute(ConsoleGitArgs args) Parameters args ConsoleGitArgs Git command arguments and configuration Returns ConsoleGitResult Result containing exit code and command output or error message"
  },
  "api/AtfTIDE.ConsoleGitArgs.html": {
    "href": "api/AtfTIDE.ConsoleGitArgs.html",
    "title": "Class ConsoleGitArgs | AtfTide",
    "summary": "Class ConsoleGitArgs Namespace AtfTIDE Assembly AtfTIDE.dll Represents configuration and arguments for git operations public class ConsoleGitArgs Inheritance object ConsoleGitArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Environment Variables Generated: Command: Git command to execute GitUrl: Repository URL UserName: Git username Password: Git password/token RepoDir: Repository directory CommitMessage: Commit message ProcessTimeoutMs: Process timeout in milliseconds Properties BranchName public string BranchName { get; set; } Property Value string Command Git command to execute public Commands Command { get; set; } Property Value Commands Remarks Supported commands are defined in the Commands enum CommitAuthorEmail Email of the author to be used in the commit public string CommitAuthorEmail { get; set; } Property Value string Remarks Required for Commit operations. Should match the git config user.email format Must be a valid email address CommitAuthorName Name of the author to be used in the commit public string CommitAuthorName { get; set; } Property Value string Remarks Required for Commit operations. Should match the git config user.name format CommitMessage Git commit message public string CommitMessage { get; set; } Property Value string CreatioPassword public string CreatioPassword { get; } Property Value string CreatioUrl public Uri CreatioUrl { get; } Property Value Uri CreatioUserName public string CreatioUserName { get; } Property Value string Files public string Files { get; set; } Property Value string GitUrl Repository URL (HTTPS or SSH) public string GitUrl { get; set; } Property Value string IsFramework public bool IsFramework { get; } Property Value bool Password Repository password or access token public string Password { get; set; } Property Value string Remarks For security, prefer using access tokens over passwords Token should have minimal required permissions ProcessTimeoutMs Maximum time to wait for the process to complete public int ProcessTimeoutMs { get; set; } Property Value int RepoDir Repository Folder path public string RepoDir { get; set; } Property Value string Silent public bool Silent { get; set; } Property Value bool UserName Repository User name public string UserName { get; set; } Property Value string Methods ToDictionary() Converts all public properties to environment variables dictionary public Dictionary<string, string> ToDictionary() Returns Dictionary<string, string> Dictionary of environment variables Remarks Skips null values Formats dates as ISO 8601 Uses invariant culture for formatting numbers Empty strings are included (unlike null values)"
  },
  "api/AtfTIDE.ConsoleGitResult.html": {
    "href": "api/AtfTIDE.ConsoleGitResult.html",
    "title": "Class ConsoleGitResult | AtfTide",
    "summary": "Class ConsoleGitResult Namespace AtfTIDE Assembly AtfTIDE.dll Represents the result of a git command execution public class ConsoleGitResult Inheritance object ConsoleGitResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Provides both success and error information: ExitCode: 0 for success, non-zero for errors Output: Contains command output for successful operations ErrorMessage: Contains error details for failed operations Constructors ConsoleGitResult(int, string) Creates a new instance of ConsoleGitResult public ConsoleGitResult(int exitCode, string output) Parameters exitCode int Process exit code (0 for success) output string Process output or error message Properties ErrorMessage Console output captured from the process's Error output. public string ErrorMessage { get; } Property Value string ExitCode Exit code of ConsoleGit process public int ExitCode { get; } Property Value int Output Console output captured from the process's standard output. public string Output { get; } Property Value string"
  },
  "api/AtfTIDE.GitBrowser.GitLabBrowser.html": {
    "href": "api/AtfTIDE.GitBrowser.GitLabBrowser.html",
    "title": "Class GitLabBrowser | AtfTide",
    "summary": "Class GitLabBrowser Namespace AtfTIDE.GitBrowser Assembly AtfTIDE.dll public class GitLabBrowser Inheritance object GitLabBrowser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GitLabBrowser(string) public GitLabBrowser(string gitlabUrl) Parameters gitlabUrl string Properties MaxRepositoryCount public int MaxRepositoryCount { get; set; } Property Value int Methods GetAllRepositoriesAsync(string) public Task<List<Repository>> GetAllRepositoriesAsync(string gitlabToken) Parameters gitlabToken string Returns Task<List<Repository>> GetAllRepositoriesNames(string) public List<string> GetAllRepositoriesNames(string gitlabToken) Parameters gitlabToken string Returns List<string> IsClioRepositories(Repository, string) public bool IsClioRepositories(Repository repo, string gitlabToken) Parameters repo Repository gitlabToken string Returns bool"
  },
  "api/AtfTIDE.GitBrowser.Repository.html": {
    "href": "api/AtfTIDE.GitBrowser.Repository.html",
    "title": "Class Repository | AtfTide",
    "summary": "Class Repository Namespace AtfTIDE.GitBrowser Assembly AtfTIDE.dll public class Repository Inheritance object Repository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public string Id { get; } Property Value string Name public string Name { get; set; } Property Value string UrlToClone public string UrlToClone { get; set; } Property Value string WebUrl public string WebUrl { get; set; } Property Value string"
  },
  "api/AtfTIDE.GitBrowser.html": {
    "href": "api/AtfTIDE.GitBrowser.html",
    "title": "Namespace AtfTIDE.GitBrowser | AtfTide",
    "summary": "Namespace AtfTIDE.GitBrowser Classes GitLabBrowser Repository"
  },
  "api/AtfTIDE.HelperFunctions.html": {
    "href": "api/AtfTIDE.HelperFunctions.html",
    "title": "Class HelperFunctions | AtfTide",
    "summary": "Class HelperFunctions Namespace AtfTIDE Assembly AtfTIDE.dll public static class HelperFunctions Inheritance object HelperFunctions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ClioArguments public static readonly Dictionary<Guid, Dictionary<string, string>> ClioArguments Field Value Dictionary<Guid, Dictionary<string, string>> Methods AddClioArgsForUser(Guid, Dictionary<string, string>) Adds or updates the stored Clio command line arguments for the specified user. public static void AddClioArgsForUser(Guid userId, Dictionary<string, string> args) Parameters userId Guid The unique identifier of the user whose arguments are being set. args Dictionary<string, string> Dictionary of argument key/value pairs to associate with the user. CreateTempDirectory() Creates (if absent) and returns a temporary directory used for transient .NET tooling artifacts. The directory path is constructed as: GetClioDirectory()/.dotnet_tmp. public static DirectoryInfo CreateTempDirectory() Returns DirectoryInfo DirectoryInfo representing the temporary working directory. Remarks Ensures the directory exists before returning the DirectoryInfo instance. FetchRepositoryName(Guid, UserConnection) Fetches the repository name (column AtfName) by its unique identifier. public static string FetchRepositoryName(Guid repositoryId, UserConnection userConnection = null) Parameters repositoryId Guid Unique identifier of the repository record. userConnection UserConnection Optional user connection. If null, a new Terrasoft.Core.UserConnection is resolved via Terrasoft.Core.Factories.ClassFactory. Returns string Repository name if found; otherwise an empty string. GetArchivePath() Returns the absolute path to the packaged archive file (archive.zip) located under Terrasoft.Configuration/Pkg/AtfTIDE/Files/exec/archive.zip. public static string GetArchivePath() Returns string The full path to archive.zip (its existence is not guaranteed). Remarks This zip archive contains ConsoleGit binaries GetClioDirectory() Gets the directory information for the Clio installation. public static DirectoryInfo GetClioDirectory() Returns DirectoryInfo A DirectoryInfo object representing the Clio directory. GetClioFilePath() Returns the full path to the clio.dll file within the Clio directory (searched recursively). public static string GetClioFilePath() Returns string Absolute path to clio.dll; empty string if not found. GetConsoleGitPath() Returns the absolute path to the ConsoleGit.dll file. public static ErrorOr<FileInfo> GetConsoleGitPath() Returns ErrorOr<FileInfo> The full path to the ConsoleGit.dll file. Remarks This file contains ConsoleGit binaries after installation GetGitConsoleFolderPath() Returns the absolute path to the ConsoleGit folder. public static string GetGitConsoleFolderPath() Returns string The full path to the ConsoleGit folder. Remarks This folder contains ConsoleGit binaries after installation GetRepositoryDirectory(string) Returns (creating if necessary) a temporary workspace directory for the specified repository. public static DirectoryInfo GetRepositoryDirectory(string repositoryName) Parameters repositoryName string Logical repository name; used as the folder name. Returns DirectoryInfo DirectoryInfo pointing to the repository workspace directory. Remarks Root path is derived from the configured temp directory (GetTempPath()). The directory is created if it does not already exist. GetRepositoryInfo(Guid, UserConnection) Fetches the repository information (column AtfName, AtfRepositoryUrl, AtfUserName, AtfAccessToken) by its unique identifier. public static RepositoryInfo GetRepositoryInfo(Guid repositoryId, UserConnection userConnection = null) Parameters repositoryId Guid Unique identifier of the repository record. userConnection UserConnection Optional user connection. If null, a new Terrasoft.Core.UserConnection is resolved via Terrasoft.Core.Factories.ClassFactory. Returns RepositoryInfo RepositoryInfo RunOsProcess(ProcessStartInfo, bool) Runs a process and returns the output and error messages. public static OsProcessResult RunOsProcess(ProcessStartInfo startInfo, bool waitForExit = true) Parameters startInfo ProcessStartInfo The ProcessStartInfo to use. waitForExit bool If true, waits for the process to exit before returning. Returns OsProcessResult The OsProcessResult."
  },
  "api/AtfTIDE.HttpClient.Converters.JsonStringBoolConverter.html": {
    "href": "api/AtfTIDE.HttpClient.Converters.JsonStringBoolConverter.html",
    "title": "Class JsonStringBoolConverter | AtfTide",
    "summary": "Class JsonStringBoolConverter Namespace AtfTIDE.HttpClient.Converters Assembly AtfTIDE.dll Custom JSON converter that converts string values like \"true\" and \"false\" to boolean values. Applies to boolean properties in CustomProperties JSON. public class JsonStringBoolConverter : JsonConverter<bool> Inheritance object JsonConverter JsonConverter<bool> JsonStringBoolConverter Inherited Members JsonConverter<bool>.CanConvert(Type) JsonConverter<bool>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<bool>.WriteAsPropertyName(Utf8JsonWriter, bool, JsonSerializerOptions) JsonConverter<bool>.HandleNull JsonConverter<bool>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type bool. public override bool Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns bool The converted value. Write(Utf8JsonWriter, bool, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, bool value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. value bool The value to convert to JSON. options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/AtfTIDE.HttpClient.Converters.html": {
    "href": "api/AtfTIDE.HttpClient.Converters.html",
    "title": "Namespace AtfTIDE.HttpClient.Converters | AtfTide",
    "summary": "Namespace AtfTIDE.HttpClient.Converters Classes JsonStringBoolConverter Custom JSON converter that converts string values like \"true\" and \"false\" to boolean values. Applies to boolean properties in CustomProperties JSON."
  },
  "api/AtfTIDE.HttpClient.Extensions.html": {
    "href": "api/AtfTIDE.HttpClient.Extensions.html",
    "title": "Class Extensions | AtfTide",
    "summary": "Class Extensions Namespace AtfTIDE.HttpClient Assembly AtfTIDE.dll public static class Extensions Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddGithubClient(IServiceCollection) public static IServiceCollection AddGithubClient(this IServiceCollection services) Parameters services IServiceCollection Returns IServiceCollection AddGitlabClient(IServiceCollection) public static IServiceCollection AddGitlabClient(this IServiceCollection services) Parameters services IServiceCollection Returns IServiceCollection AddNugetClient(IServiceCollection) public static IServiceCollection AddNugetClient(this IServiceCollection services) Parameters services IServiceCollection Returns IServiceCollection"
  },
  "api/AtfTIDE.HttpClient.GitHubClient.html": {
    "href": "api/AtfTIDE.HttpClient.GitHubClient.html",
    "title": "Class GitHubClient | AtfTide",
    "summary": "Class GitHubClient Namespace AtfTIDE.HttpClient Assembly AtfTIDE.dll public class GitHubClient : IGitHubClient Inheritance object GitHubClient Implements IGitHubClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GitHubClient(HttpClient) public GitHubClient(HttpClient httpclient) Parameters httpclient HttpClient Methods CreateOrganizationRepository(string, string) Creates a new repository in the specified organization. public Task<Repository> CreateOrganizationRepository(string organizationName, string repositoryName) Parameters organizationName string The name of the organization where the repository will be created. repositoryName string The name of the new repository to create. Returns Task<Repository> A Task<TResult> representing the asynchronous operation that returns the created repository. Remarks This method creates a public repository with a default description \"this is a repository created by AtfTIDE\". The repository is created with the following default settings: Public visibility (private = false) Default description provided by AtfTIDE See GitHub API Documentation Exceptions HttpRequestException Thrown when the HTTP request fails. JsonException Thrown when JSON serialization/deserialization fails. CreateUserRepository(string) Creates a new repository for the authenticated user. public Task<object> CreateUserRepository(string repositoryName) Parameters repositoryName string Returns Task<object> Remarks See Github Docs ListOrganizationRepositories(string) Lists repositories for the specified organization. public Task<List<Repository>> ListOrganizationRepositories(string organizationName) Parameters organizationName string The name of the organization. Returns Task<List<Repository>> Remarks See Github Docs ListUserRepositories() Lists repositories for the authenticated user. public Task<object> ListUserRepositories() Returns Task<object> Remarks See Github Docs"
  },
  "api/AtfTIDE.HttpClient.GitLabHttpClient.html": {
    "href": "api/AtfTIDE.HttpClient.GitLabHttpClient.html",
    "title": "Class GitLabHttpClient | AtfTide",
    "summary": "Class GitLabHttpClient Namespace AtfTIDE.HttpClient Assembly AtfTIDE.dll public class GitLabHttpClient : IGitLabHttpClient Inheritance object GitLabHttpClient Implements IGitLabHttpClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GitLabHttpClient(HttpClient) public GitLabHttpClient(HttpClient httpClient) Parameters httpClient HttpClient Methods GetGoogle() public Task<string> GetGoogle() Returns Task<string>"
  },
  "api/AtfTIDE.HttpClient.GithubDto.CustomProperties.html": {
    "href": "api/AtfTIDE.HttpClient.GithubDto.CustomProperties.html",
    "title": "Class CustomProperties | AtfTide",
    "summary": "Class CustomProperties Namespace AtfTIDE.HttpClient.GithubDto Assembly AtfTIDE.dll This class represents custom properties for a GitHub repository. We can use this to clearly define which repositories are Clio workspaces. public class CustomProperties Inheritance object CustomProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ClioWorkspace [JsonPropertyName(\"clio-workspace\")] [JsonConverter(typeof(JsonStringBoolConverter))] public bool ClioWorkspace { get; set; } Property Value bool"
  },
  "api/AtfTIDE.HttpClient.GithubDto.Repository.html": {
    "href": "api/AtfTIDE.HttpClient.GithubDto.Repository.html",
    "title": "Class Repository | AtfTide",
    "summary": "Class Repository Namespace AtfTIDE.HttpClient.GithubDto Assembly AtfTIDE.dll public class Repository Inheritance object Repository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CloneUrl [JsonPropertyName(\"clone_url\")] public string CloneUrl { get; set; } Property Value string CustomProperties [JsonPropertyName(\"custom_properties\")] [CanBeNull] public CustomProperties CustomProperties { get; set; } Property Value CustomProperties Description [JsonPropertyName(\"description\")] [CanBeNull] public string Description { get; set; } Property Value string FullName [JsonPropertyName(\"full_name\")] public string FullName { get; set; } Property Value string Id [JsonPropertyName(\"id\")] public uint Id { get; set; } Property Value uint Name [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string NodeId [JsonPropertyName(\"node_id\")] public string NodeId { get; set; } Property Value string Private [JsonPropertyName(\"private\")] public bool Private { get; set; } Property Value bool Url [JsonPropertyName(\"url\")] public string Url { get; set; } Property Value string"
  },
  "api/AtfTIDE.HttpClient.GithubDto.html": {
    "href": "api/AtfTIDE.HttpClient.GithubDto.html",
    "title": "Namespace AtfTIDE.HttpClient.GithubDto | AtfTide",
    "summary": "Namespace AtfTIDE.HttpClient.GithubDto Classes CustomProperties This class represents custom properties for a GitHub repository. We can use this to clearly define which repositories are Clio workspaces. Repository"
  },
  "api/AtfTIDE.HttpClient.GithubTokenHandler.html": {
    "href": "api/AtfTIDE.HttpClient.GithubTokenHandler.html",
    "title": "Class GithubTokenHandler | AtfTide",
    "summary": "Class GithubTokenHandler Namespace AtfTIDE.HttpClient Assembly AtfTIDE.dll public class GithubTokenHandler : DelegatingHandler, IDisposable Inheritance object HttpMessageHandler DelegatingHandler GithubTokenHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GithubTokenHandler() public GithubTokenHandler() Methods SendAsync(HttpRequestMessage, CancellationToken) protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters request HttpRequestMessage cancellationToken CancellationToken Returns Task<HttpResponseMessage>"
  },
  "api/AtfTIDE.HttpClient.IGitHubClient.html": {
    "href": "api/AtfTIDE.HttpClient.IGitHubClient.html",
    "title": "Interface IGitHubClient | AtfTide",
    "summary": "Interface IGitHubClient Namespace AtfTIDE.HttpClient Assembly AtfTIDE.dll public interface IGitHubClient Methods CreateOrganizationRepository(string, string) Creates a new repository in the specified organization. Task<Repository> CreateOrganizationRepository(string organizationName, string repositoryName) Parameters organizationName string The name of the organization where the repository will be created. repositoryName string The name of the new repository to create. Returns Task<Repository> A Task<TResult> representing the asynchronous operation that returns the created repository. Remarks This method creates a public repository with a default description \"this is a repository created by AtfTIDE\". The repository is created with the following default settings: Public visibility (private = false) Default description provided by AtfTIDE See GitHub API Documentation Exceptions HttpRequestException Thrown when the HTTP request fails. JsonException Thrown when JSON serialization/deserialization fails. CreateUserRepository(string) Creates a new repository for the authenticated user. Task<object> CreateUserRepository(string repositoryName) Parameters repositoryName string Returns Task<object> Remarks See Github Docs ListOrganizationRepositories(string) Lists repositories for the specified organization. Task<List<Repository>> ListOrganizationRepositories(string organizationName) Parameters organizationName string The name of the organization. Returns Task<List<Repository>> Remarks See Github Docs ListUserRepositories() Lists repositories for the authenticated user. Task<object> ListUserRepositories() Returns Task<object> Remarks See Github Docs"
  },
  "api/AtfTIDE.HttpClient.IGitLabHttpClient.html": {
    "href": "api/AtfTIDE.HttpClient.IGitLabHttpClient.html",
    "title": "Interface IGitLabHttpClient | AtfTide",
    "summary": "Interface IGitLabHttpClient Namespace AtfTIDE.HttpClient Assembly AtfTIDE.dll public interface IGitLabHttpClient Methods GetGoogle() Task<string> GetGoogle() Returns Task<string>"
  },
  "api/AtfTIDE.HttpClient.html": {
    "href": "api/AtfTIDE.HttpClient.html",
    "title": "Namespace AtfTIDE.HttpClient | AtfTide",
    "summary": "Namespace AtfTIDE.HttpClient Classes Extensions GitHubClient GitLabHttpClient GithubTokenHandler Interfaces IGitHubClient IGitLabHttpClient"
  },
  "api/AtfTIDE.IConsoleGit.html": {
    "href": "api/AtfTIDE.IConsoleGit.html",
    "title": "Interface IConsoleGit | AtfTide",
    "summary": "Interface IConsoleGit Namespace AtfTIDE Assembly AtfTIDE.dll Provides git operations through a console application wrapper public interface IConsoleGit Remarks Executes git commands through environment variables Handles process management and timeouts Provides error handling and output capturing Implementations must be thread-safe Must handle concurrent git operations Must capture and return git errors Must handle process timeouts Must clean up resources properly Methods Execute(ConsoleGitArgs) Executes a git command with the specified arguments ConsoleGitResult Execute(ConsoleGitArgs args) Parameters args ConsoleGitArgs Git command arguments and configuration Returns ConsoleGitResult Result containing exit code and command output or error message"
  },
  "api/AtfTIDE.ITextTransformer.html": {
    "href": "api/AtfTIDE.ITextTransformer.html",
    "title": "Interface ITextTransformer | AtfTide",
    "summary": "Interface ITextTransformer Namespace AtfTIDE Assembly AtfTIDE.dll public interface ITextTransformer Methods Transform(string) string Transform(string text) Parameters text string Returns string TransformWithLP(string) Appends UserName and Password from SysSettings string TransformWithLP(string text) Parameters text string Returns string Remarks Uses value from AtfUserNameForClio sysSetting or Supervisor Uses value from AtfPasswordForClio sysSetting or Supervisor"
  },
  "api/AtfTIDE.IWebSocket.html": {
    "href": "api/AtfTIDE.IWebSocket.html",
    "title": "Interface IWebSocket | AtfTide",
    "summary": "Interface IWebSocket Namespace AtfTIDE Assembly AtfTIDE.dll public interface IWebSocket Methods PostMessage(string, string, string) void PostMessage(string senderName, string commandName, string message) Parameters senderName string commandName string message string PostMessage(string, string, string, UserConnection) void PostMessage(string senderName, string commandName, string message, UserConnection userConnection) Parameters senderName string commandName string message string userConnection UserConnection PostMessageToAll(string, string, string) void PostMessageToAll(string senderName, string commandName, string message) Parameters senderName string commandName string message string"
  },
  "api/AtfTIDE.Logging.Color.html": {
    "href": "api/AtfTIDE.Logging.Color.html",
    "title": "Enum Color | AtfTide",
    "summary": "Enum Color Namespace AtfTIDE.Logging Assembly AtfTIDE.dll public enum Color Fields Green = 0 Red = 1 Yellow = 2"
  },
  "api/AtfTIDE.Logging.ILiveLogger.html": {
    "href": "api/AtfTIDE.Logging.ILiveLogger.html",
    "title": "Interface ILiveLogger | AtfTide",
    "summary": "Interface ILiveLogger Namespace AtfTIDE.Logging Assembly AtfTIDE.dll public interface ILiveLogger Methods Log(string) void Log(string message) Parameters message string LogError(string) void LogError(string message) Parameters message string LogInfo(string) void LogInfo(string message) Parameters message string LogWarn(string) void LogWarn(string message) Parameters message string"
  },
  "api/AtfTIDE.Logging.LiveLogger.html": {
    "href": "api/AtfTIDE.Logging.LiveLogger.html",
    "title": "Class LiveLogger | AtfTide",
    "summary": "Class LiveLogger Namespace AtfTIDE.Logging Assembly AtfTIDE.dll public class LiveLogger : ILiveLogger Inheritance object LiveLogger Implements ILiveLogger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LiveLogger(IWebSocket) public LiveLogger(IWebSocket webSocket) Parameters webSocket IWebSocket Methods Log(string) public void Log(string message) Parameters message string LogError(string) public void LogError(string message) Parameters message string LogInfo(string) public void LogInfo(string message) Parameters message string LogWarn(string) public void LogWarn(string message) Parameters message string"
  },
  "api/AtfTIDE.Logging.html": {
    "href": "api/AtfTIDE.Logging.html",
    "title": "Namespace AtfTIDE.Logging | AtfTide",
    "summary": "Namespace AtfTIDE.Logging Classes LiveLogger Interfaces ILiveLogger Enums Color"
  },
  "api/AtfTIDE.OsProcessResult.html": {
    "href": "api/AtfTIDE.OsProcessResult.html",
    "title": "Class OsProcessResult | AtfTide",
    "summary": "Class OsProcessResult Namespace AtfTIDE Assembly AtfTIDE.dll public class OsProcessResult Inheritance object OsProcessResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ErrorMessage Error message if any occurred public string ErrorMessage { get; set; } Property Value string IsError Indicates is a process ended with an Error public bool IsError { get; set; } Property Value bool Output Process output public string Output { get; set; } Property Value string"
  },
  "api/AtfTIDE.QueryExecutor.AtfGitChangedFilesQueryExecutor.html": {
    "href": "api/AtfTIDE.QueryExecutor.AtfGitChangedFilesQueryExecutor.html",
    "title": "Class AtfGitChangedFilesQueryExecutor | AtfTide",
    "summary": "Class AtfGitChangedFilesQueryExecutor Namespace AtfTIDE.QueryExecutor Assembly AtfTIDE.dll [DefaultBinding(typeof(IEntityQueryExecutor), Name = \"AtfGitChangedFilesQueryExecutor\")] public class AtfGitChangedFilesQueryExecutor : IEntityQueryExecutor Inheritance object AtfGitChangedFilesQueryExecutor Implements IEntityQueryExecutor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AtfGitChangedFilesQueryExecutor() public AtfGitChangedFilesQueryExecutor() Methods GetEntityCollection(EntitySchemaQuery) public EntityCollection GetEntityCollection(EntitySchemaQuery esq) Parameters esq EntitySchemaQuery Returns EntityCollection"
  },
  "api/AtfTIDE.QueryExecutor.ChangedFileDto.html": {
    "href": "api/AtfTIDE.QueryExecutor.ChangedFileDto.html",
    "title": "Class ChangedFileDto | AtfTide",
    "summary": "Class ChangedFileDto Namespace AtfTIDE.QueryExecutor Assembly AtfTIDE.dll public class ChangedFileDto Inheritance object ChangedFileDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Path [JsonPropertyName(\"Path\")] public string Path { get; set; } Property Value string Status [JsonPropertyName(\"Status\")] public string Status { get; set; } Property Value string"
  },
  "api/AtfTIDE.QueryExecutor.EsqColumnParser.html": {
    "href": "api/AtfTIDE.QueryExecutor.EsqColumnParser.html",
    "title": "Class EsqColumnParser | AtfTide",
    "summary": "Class EsqColumnParser Namespace AtfTIDE.QueryExecutor Assembly AtfTIDE.dll public class EsqColumnParser : IEsqColumnParser Inheritance object EsqColumnParser Implements IEsqColumnParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetSorting(EntitySchemaQuery) public SortColumn GetSorting(EntitySchemaQuery esq) Parameters esq EntitySchemaQuery Returns SortColumn"
  },
  "api/AtfTIDE.QueryExecutor.EsqFilterParser.html": {
    "href": "api/AtfTIDE.QueryExecutor.EsqFilterParser.html",
    "title": "Class EsqFilterParser | AtfTide",
    "summary": "Class EsqFilterParser Namespace AtfTIDE.QueryExecutor Assembly AtfTIDE.dll public class EsqFilterParser : IEsqFilterParser Inheritance object EsqFilterParser Implements IEsqFilterParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetEsqFilterValueByKey(string, EntitySchemaQuery) public string GetEsqFilterValueByKey(string key, EntitySchemaQuery esq) Parameters key string esq EntitySchemaQuery Returns string GetEsqFilterValueByKey2(string, EntitySchemaQuery) public IEnumerable<string> GetEsqFilterValueByKey2(string key, EntitySchemaQuery esq) Parameters key string esq EntitySchemaQuery Returns IEnumerable<string> GetSearchBoxFilterValue(EntitySchemaQuery) public string GetSearchBoxFilterValue(EntitySchemaQuery esq) Parameters esq EntitySchemaQuery Returns string"
  },
  "api/AtfTIDE.QueryExecutor.IEsqColumnParser.html": {
    "href": "api/AtfTIDE.QueryExecutor.IEsqColumnParser.html",
    "title": "Interface IEsqColumnParser | AtfTide",
    "summary": "Interface IEsqColumnParser Namespace AtfTIDE.QueryExecutor Assembly AtfTIDE.dll public interface IEsqColumnParser Methods GetSorting(EntitySchemaQuery) SortColumn GetSorting(EntitySchemaQuery esq) Parameters esq EntitySchemaQuery Returns SortColumn"
  },
  "api/AtfTIDE.QueryExecutor.IEsqFilterParser.html": {
    "href": "api/AtfTIDE.QueryExecutor.IEsqFilterParser.html",
    "title": "Interface IEsqFilterParser | AtfTide",
    "summary": "Interface IEsqFilterParser Namespace AtfTIDE.QueryExecutor Assembly AtfTIDE.dll public interface IEsqFilterParser Methods GetEsqFilterValueByKey(string, EntitySchemaQuery) string GetEsqFilterValueByKey(string key, EntitySchemaQuery esq) Parameters key string esq EntitySchemaQuery Returns string GetEsqFilterValueByKey2(string, EntitySchemaQuery) IEnumerable<string> GetEsqFilterValueByKey2(string key, EntitySchemaQuery esq) Parameters key string esq EntitySchemaQuery Returns IEnumerable<string> GetSearchBoxFilterValue(EntitySchemaQuery) string GetSearchBoxFilterValue(EntitySchemaQuery esq) Parameters esq EntitySchemaQuery Returns string"
  },
  "api/AtfTIDE.QueryExecutor.SortColumn.html": {
    "href": "api/AtfTIDE.QueryExecutor.SortColumn.html",
    "title": "Class SortColumn | AtfTide",
    "summary": "Class SortColumn Namespace AtfTIDE.QueryExecutor Assembly AtfTIDE.dll public class SortColumn Inheritance object SortColumn Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string Name { get; set; } Property Value string OrderDirection public OrderDirection OrderDirection { get; set; } Property Value OrderDirection OrderPosition public int OrderPosition { get; set; } Property Value int"
  },
  "api/AtfTIDE.QueryExecutor.html": {
    "href": "api/AtfTIDE.QueryExecutor.html",
    "title": "Namespace AtfTIDE.QueryExecutor | AtfTide",
    "summary": "Namespace AtfTIDE.QueryExecutor Classes AtfGitChangedFilesQueryExecutor ChangedFileDto EsqColumnParser EsqFilterParser SortColumn Interfaces IEsqColumnParser IEsqFilterParser"
  },
  "api/AtfTIDE.RepositoryInfo.html": {
    "href": "api/AtfTIDE.RepositoryInfo.html",
    "title": "Class RepositoryInfo | AtfTide",
    "summary": "Class RepositoryInfo Namespace AtfTIDE Assembly AtfTIDE.dll public class RepositoryInfo Inheritance object RepositoryInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RepositoryInfo(string, string, string, string) public RepositoryInfo(string name, string gitUrl, string userName, string password) Parameters name string gitUrl string userName string password string Properties GitUrl public string GitUrl { get; } Property Value string Name public string Name { get; } Property Value string Password public string Password { get; } Property Value string UserName public string UserName { get; } Property Value string"
  },
  "api/AtfTIDE.SysSchemaMonitor.html": {
    "href": "api/AtfTIDE.SysSchemaMonitor.html",
    "title": "Class SysSchemaMonitor | AtfTide",
    "summary": "Class SysSchemaMonitor Namespace AtfTIDE Assembly AtfTIDE.dll public class SysSchemaMonitor Inheritance object SysSchemaMonitor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Start() public static void Start() Stop() public static void Stop()"
  },
  "api/AtfTIDE.TideApp.html": {
    "href": "api/AtfTIDE.TideApp.html",
    "title": "Class TideApp | AtfTide",
    "summary": "Class TideApp Namespace AtfTIDE Assembly AtfTIDE.dll public class TideApp Inheritance object TideApp Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties InstallerApp public IInstaller InstallerApp { get; } Property Value IInstaller Instance public static TideApp Instance { get; } Property Value TideApp Methods Create() public static TideApp Create() Returns TideApp GetKeyedService<T>(object) public T GetKeyedService<T>(object serviceKey) Parameters serviceKey object Returns T Type Parameters T GetRequiredKeyedService<T>(object) public T GetRequiredKeyedService<T>(object serviceKey) Parameters serviceKey object Returns T Type Parameters T GetRequiredService<T>() public T GetRequiredService<T>() Returns T Type Parameters T GetService<T>() public T GetService<T>() Returns T Type Parameters T"
  },
  "api/AtfTIDE.UrlAppender.html": {
    "href": "api/AtfTIDE.UrlAppender.html",
    "title": "Class UrlAppender | AtfTide",
    "summary": "Class UrlAppender Namespace AtfTIDE Assembly AtfTIDE.dll [DefaultBinding(typeof(ITextTransformer), Name = \"UrlAppender\")] public class UrlAppender : ITextTransformer Inheritance object UrlAppender Implements ITextTransformer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCreatioPassword() public string GetCreatioPassword() Returns string GetCreatioUserName() public string GetCreatioUserName() Returns string Transform(string) public string Transform(string text) Parameters text string Returns string TransformWithLP(string) Appends UserName and Password from SysSettings public string TransformWithLP(string text) Parameters text string Returns string Remarks Uses value from AtfUserNameForClio sysSetting or Supervisor Uses value from AtfPasswordForClio sysSetting or Supervisor"
  },
  "api/AtfTIDE.WebServices.DiscardFileChangesDto.html": {
    "href": "api/AtfTIDE.WebServices.DiscardFileChangesDto.html",
    "title": "Class DiscardFileChangesDto | AtfTide",
    "summary": "Class DiscardFileChangesDto Namespace AtfTIDE.WebServices Assembly AtfTIDE.dll [DataContract] public class DiscardFileChangesDto Inheritance object DiscardFileChangesDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Files [DataMember(Name = \"files\")] public string[] Files { get; set; } Property Value string[] RepositoryId [DataMember(Name = \"repositoryId\")] public Guid RepositoryId { get; set; } Property Value Guid"
  },
  "api/AtfTIDE.WebServices.Tide.html": {
    "href": "api/AtfTIDE.WebServices.Tide.html",
    "title": "Class Tide | AtfTide",
    "summary": "Class Tide Namespace AtfTIDE.WebServices Assembly AtfTIDE.dll Provides web service functionality for the AtfTIDE system with ConsoleGit.exe integration capabilities. This service operates in read-only mode with respect to session state. [ServiceContract] [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Required)] public class Tide : BaseService, IReadOnlySessionState Inheritance object BaseService Tide Implements IReadOnlySessionState Inherited Members BaseService.GetUserConnection() BaseService.UserIsAuthenticated BaseService.AppConnection BaseService.UserConnection BaseService.Cache BaseService.HttpContextAccessor object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This service class implements WCF service contract Requires ASP.NET compatibility mode Inherits from BaseService and implements IReadOnlySessionState for secure session handling Methods CaptureClioArgs() Captures and processes arguments required for ConsoleGit.exe functionality. [OperationContract] [WebInvoke(Method = \"GET\", RequestFormat = WebMessageFormat.Json, BodyStyle = WebMessageBodyStyle.Bare, ResponseFormat = WebMessageFormat.Json)] public void CaptureClioArgs() Examples This endpoint can be called via a GET request: GET rest/Tide/CaptureClioArgs HTTP/1.1 Remarks This endpoint is called from AtfTIDE_FormPage before start of any Business Process. It captures system and user information to be used in UserTasks of a process. This endpoint performs the following operations: Operation Steps Detailed process flow Request Retrieval Retrieves the current HTTP request and its cookies System Information Collects system information including the base application URL Framework Detection Determines if the system is running in framework mode Data Storage Stores the collected information for the current user DiscardFileChanges(DiscardFileChangesDto) Discards local (uncommitted) changes for the specified files in a repository using ConsoleGit. [OperationContract] [WebInvoke(Method = \"POST\", RequestFormat = WebMessageFormat.Json, BodyStyle = WebMessageBodyStyle.Bare, ResponseFormat = WebMessageFormat.Json)] public string DiscardFileChanges(DiscardFileChangesDto dto) Parameters dto DiscardFileChangesDto Returns string \"OK\" when the discard command is executed. Examples POST rest/Tide/DiscardFileChanges { \"repositoryId\": \"11111111-1111-1111-1111-111111111111\", \"files\": [\"Schemas/Account/Account.cs\", \"Schemas/Contact/Contact.cs\"] } Remarks Accepts a JSON payload mapped to DiscardFileChangesDto with the target repository ID and an array of file paths. Forwards a discard command to the underlying git wrapper and returns a simple success marker. GetDiffForRepository(Guid) Returns a Git diff for the repository identified by repositoryId. [OperationContract] [WebInvoke(Method = \"GET\", RequestFormat = WebMessageFormat.Json, BodyStyle = WebMessageBodyStyle.Bare, ResponseFormat = WebMessageFormat.Json)] public string GetDiffForRepository(Guid repositoryId) Parameters repositoryId Guid Repository identifier whose working directory changes should be diffed. Returns string Raw diff text produced by the underlying ConsoleGit execution. Remarks Wraps the ConsoleGit GetDiff command. The result is the plain textual diff (unified format). GetRepos(string) Retrieves GitHub repositories for the specified organization (currently creates a test repository and returns it). [OperationContract] [WebInvoke(Method = \"GET\", RequestFormat = WebMessageFormat.Json, BodyStyle = WebMessageBodyStyle.Bare, ResponseFormat = WebMessageFormat.Json)] public List<Repository> GetRepos(string orgName) Parameters orgName string GitHub organization name whose repositories should be listed. Returns List<Repository> List of repositories for the provided organization. Examples GET rest/Tide/GetRepos?orgName=Creatio-COB HTTP/1.1 InstallConsoleGit() Installs the ConsoleGit tool by extracting it from an embedded archive. [OperationContract] [WebInvoke(Method = \"GET\", RequestFormat = WebMessageFormat.Json, BodyStyle = WebMessageBodyStyle.Bare, ResponseFormat = WebMessageFormat.Json)] public string InstallConsoleGit() Returns string Returns the path to the directory where ConsoleGit was installed. Examples This endpoint can be called via a GET request: GET rest/Tide/InstallConsoleGit HTTP/1.1 Remarks This endpoint extracts the ConsoleGit executable and its dependencies from an embedded archive to a designated directory conf/consolegit. It performs cleanup by removing any existing installation before extracting the new files."
  },
  "api/AtfTIDE.WebServices.html": {
    "href": "api/AtfTIDE.WebServices.html",
    "title": "Namespace AtfTIDE.WebServices | AtfTide",
    "summary": "Namespace AtfTIDE.WebServices Classes DiscardFileChangesDto Tide Provides web service functionality for the AtfTIDE system with ConsoleGit.exe integration capabilities. This service operates in read-only mode with respect to session state."
  },
  "api/AtfTIDE.html": {
    "href": "api/AtfTIDE.html",
    "title": "Namespace AtfTIDE | AtfTide",
    "summary": "Namespace AtfTIDE Classes AppEventListener ConsoleGit ConsoleGitArgs Represents configuration and arguments for git operations ConsoleGitResult Represents the result of a git command execution HelperFunctions OsProcessResult RepositoryInfo SysSchemaMonitor TideApp UrlAppender Interfaces IConsoleGit Provides git operations through a console application wrapper ITextTransformer IWebSocket Enums Commands Defines supported git operations"
  },
  "api/Terrasoft.Configuration.InstallConsoleGitInstallScript.html": {
    "href": "api/Terrasoft.Configuration.InstallConsoleGitInstallScript.html",
    "title": "Class InstallConsoleGitInstallScript | AtfTide",
    "summary": "Class InstallConsoleGitInstallScript Namespace Terrasoft.Configuration Assembly AtfTIDE.dll public class InstallConsoleGitInstallScript : IInstallScriptExecutor Inheritance object InstallConsoleGitInstallScript Implements IInstallScriptExecutor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Execute(UserConnection) Executes package install script. public void Execute(UserConnection userConnection) Parameters userConnection UserConnection User connection."
  },
  "api/Terrasoft.Configuration.html": {
    "href": "api/Terrasoft.Configuration.html",
    "title": "Namespace Terrasoft.Configuration | AtfTide",
    "summary": "Namespace Terrasoft.Configuration Classes InstallConsoleGitInstallScript"
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_CloneRepository.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_CloneRepository.html",
    "title": "Class AtfProcessUserTask_CloneRepository | AtfTide",
    "summary": "Class AtfProcessUserTask_CloneRepository Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll [DesignModeProperty(Name = \"ErrorMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"0988a3e0cf0d4d9d9e243dcdd5606e3c\", CaptionResourceItem = \"Parameters.ErrorMessage.Caption\", DescriptionResourceItem = \"Parameters.ErrorMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"IsError\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"0988a3e0cf0d4d9d9e243dcdd5606e3c\", CaptionResourceItem = \"Parameters.IsError.Caption\", DescriptionResourceItem = \"Parameters.IsError.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"RepositoryFolderPath\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"0988a3e0cf0d4d9d9e243dcdd5606e3c\", CaptionResourceItem = \"Parameters.RepositoryFolderPath.Caption\", DescriptionResourceItem = \"Parameters.RepositoryFolderPath.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Repository\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"0988a3e0cf0d4d9d9e243dcdd5606e3c\", CaptionResourceItem = \"Parameters.Repository.Caption\", DescriptionResourceItem = \"Parameters.Repository.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Output\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"0988a3e0cf0d4d9d9e243dcdd5606e3c\", CaptionResourceItem = \"Parameters.Output.Caption\", DescriptionResourceItem = \"Parameters.Output.Caption\", UseSolutionStorage = true)] public class AtfProcessUserTask_CloneRepository : ProcessUserTask, IProcessDataSerializable Inheritance object ProcessFlowElement ProcessActivity ProcessUserTask AtfProcessUserTask_CloneRepository Implements IProcessDataSerializable Inherited Members ProcessUserTask.AfterInternalExecute() ProcessUserTask.OnExecuted(ProcessActivityAfterEventArgs) ProcessUserTask.OnCanceled() ProcessUserTask.AfterActivitySaveScriptExecute(Entity) ProcessUserTask.Get<T>(string) ProcessUserTask.Set<T>(string, T) ProcessUserTask.InternalInteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.CreateTempFile() ProcessUserTask.GetTempFile(Guid) ProcessUserTask.CreateUsageContext() ProcessUserTask.RunUnderSystemSecurityContext<T>(Func<T>) ProcessUserTask.WritePropertiesData(DataWriter, bool) ProcessUserTask.GetPropertiesData(bool) ProcessUserTask.GetParameterValue(string) ProcessUserTask.GetParameterValue<TValue>(string, TValue) ProcessUserTask.FindParameterValuesByTag(Func<string, bool?>) ProcessUserTask.FindMappedEntityColumnMetaPaths(string) ProcessUserTask.GetRuntimeCaption() ProcessUserTask.InteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.SchemaManagerName ProcessUserTask.SchemaManager ProcessActivity.NeedBreakProcessExecuting(ProcessActivityAfterEventArgs) ProcessActivity.HasMapping(string) ProcessActivity.GetSchema(Guid) ProcessActivity.WriteProcessParameters() ProcessActivity.FindSchemaElement(Guid) ProcessActivity.ReadSerializableObject<T>(DataReader) ProcessActivity.WriteSerializableObject<T>(DataWriter, string, T) ProcessActivity.WriteSerializableObject(DataWriter, string, object, object) ProcessActivity.GetSerializableObject(DataReader) ProcessActivity.MeasureDuration(string) ProcessActivity.SetParameterValue(IProcessParametersMetaInfo, ParameterValueContext) ProcessActivity.Assign(ProcessFlowElement) ProcessActivity.CreateFlowElementInstanceByType(Type, Process) ProcessActivity.WriteExecutionData(IProcessExecutionDataWriter) ProcessActivity.CloneShallow() ProcessActivity.ReadPropertiesData() ProcessActivity.WritePropertiesData() ProcessActivity.ReadPropertiesDataFromDB(UserConnection) ProcessActivity.ReadPropertiesDataFromMemory() ProcessActivity.WritePropertiesDataToMemory() ProcessActivity.CompleteExecuting(params object[]) ProcessActivity.CancelExecuting(params object[]) ProcessActivity.GetResultParameterAllValues(UserConnection, ProcessSchemaUserTask) ProcessActivity.GetExecutionData() ProcessActivity.GetResultParameterAllowedValues() ProcessActivity.GetResultAllowedValues() ProcessActivity.ExternalExecute(ProcessActivityAfterEventArgs) ProcessActivity.SerializeToString(object) ProcessActivity.DeserializeFromString<T>(string) ProcessActivity.GetLocalizableString(string, string) ProcessActivity.ConvertToProcessDataSourceFilters(Guid, string) ProcessActivity.FindSchemaElement() ProcessActivity.GetSchemaElement() ProcessActivity.GetIsReexecution() ProcessActivity.GetParameterValue(ProcessSchemaParameter) ProcessActivity.GetNotificationData() ProcessActivity.GetParameterValues() ProcessActivity.GetParameterValues(IEnumerable<ProcessSchemaParameter>) ProcessActivity.ProcessNotifier ProcessActivity.ProcessParameterStore ProcessActivity.NeedUserInteraction ProcessActivity.Owner ProcessActivity.SchemaUId ProcessActivity.OwnerUId ProcessActivity.UserConnection ProcessActivity.Schema ProcessActivity.Storage ProcessActivity.IsShownExecutionPage ProcessActivity.ProcessLane ProcessActivity.Compressor ProcessActivity.PerformerAssignmentOptions ProcessFlowElement.IdParameterName ProcessFlowElement.SysSchemaIdParameterName ProcessFlowElement.SysWorkspaceIdParameterName ProcessFlowElement.ParentIdParameterName ProcessFlowElement.CreatedOnParameterName ProcessFlowElement.CreatedByIdParameterName ProcessFlowElement.ModifiedOnParameterName ProcessFlowElement.ModifiedByIdParameterName ProcessFlowElement.StartDateParameterName ProcessFlowElement.CompleteDateParameterName ProcessFlowElement.SysProcessIdParameterName ProcessFlowElement.CaptionParameterName ProcessFlowElement.StatusIdParameterName ProcessFlowElement.TypeParameterName ProcessFlowElement.SchemaElementUIdParameterName ProcessFlowElement.SchemaUIdParameterName ProcessFlowElement.StatusParameterName ProcessFlowElement.OwnerIdParameterName ProcessFlowElement.ErrorDescriptionParameterName ProcessFlowElement.PropertiesDataParameterName ProcessFlowElement.GuidTypeName ProcessFlowElement.IntegerTypeName ProcessFlowElement.DateTimeTypeName ProcessFlowElement.TextTypeName ProcessFlowElement.Float1TypeName ProcessFlowElement.DurationInMinutesParameterName ProcessFlowElement.DurationInHoursParameterName ProcessFlowElement.DurationInDaysParameterName ProcessFlowElement.DurationInMillisecondsParameterName ProcessFlowElement.NodeIdParameterName ProcessFlowElement.UIdPropertyName ProcessFlowElement.NamePropertyName ProcessFlowElement.StatusPropertyName ProcessFlowElement.CompleteApplyingPropertiesDataValues() ProcessFlowElement.ReadSerializableObjectValue<T>(DataReader) ProcessFlowElement.WritePropertyValues(DataWriter) ProcessFlowElement.SetDurationQueryParameters(QueryParameterCollection) ProcessFlowElement.GetSchemaElement(Guid) ProcessFlowElement.SetPrivateFieldValue(string, object, object) ProcessFlowElement.ToString() ProcessFlowElement.ReadPropertiesData(DataReader) ProcessFlowElement.GetPropertiesData() ProcessFlowElement.WritePropertiesDataToDB(UserConnection) ProcessFlowElement.Execute(ProcessExecutingContext) ProcessFlowElement.TryGetPerformer(out Guid) ProcessFlowElement.WritePropertiesDataToOwner(DataWriter) ProcessFlowElement.ReadPropertiesDataFromOwner(DataReader) ProcessFlowElement.UseFlowEngineMode ProcessFlowElement.Log ProcessFlowElement.DateTimeProvider ProcessFlowElement.UId ProcessFlowElement.Name ProcessFlowElement.Caption ProcessFlowElement.Type ProcessFlowElement.SerializeToDB ProcessFlowElement.IsLogging ProcessFlowElement.IsProcess ProcessFlowElement.SchemaElementUId ProcessFlowElement.Status ProcessFlowElement.IsExecuted ProcessFlowElement.ExecutionResult ProcessFlowElement.LoopCounter ProcessFlowElement.CreatedInSchemaUId ProcessFlowElement.PreviousFlowElements ProcessFlowElement.ExecutedEventHandler ProcessFlowElement.StartDate ProcessFlowElement.Executed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AtfProcessUserTask_CloneRepository(UserConnection) public AtfProcessUserTask_CloneRepository(UserConnection userConnection) Parameters userConnection UserConnection Properties ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool Output public virtual string Output { get; set; } Property Value string Repository public virtual Guid Repository { get; set; } Property Value Guid RepositoryFolderPath public virtual string RepositoryFolderPath { get; set; } Property Value string Methods ApplyPropertiesDataValues(DataReader) Applies state of the current process element. protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader Instance that provides sequential reading of data. InternalExecute(ProcessExecutingContext) Hey, this is what's running when the process is executed. protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Creatio will pass context to this method Returns bool Always true Remarks See Wiki WritePropertiesData(DataWriter) Writes state of the current process element. public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter Instance of the Terrasoft.Common.DataWriter type."
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_DownloadPackages.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_DownloadPackages.html",
    "title": "Class AtfProcessUserTask_DownloadPackages | AtfTide",
    "summary": "Class AtfProcessUserTask_DownloadPackages Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll [DesignModeProperty(Name = \"ErrorMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"63ee21f56fab4a719eb3c7a5b44a63b8\", CaptionResourceItem = \"Parameters.ErrorMessage.Caption\", DescriptionResourceItem = \"Parameters.ErrorMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"IsError\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"63ee21f56fab4a719eb3c7a5b44a63b8\", CaptionResourceItem = \"Parameters.IsError.Caption\", DescriptionResourceItem = \"Parameters.IsError.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Output\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"63ee21f56fab4a719eb3c7a5b44a63b8\", CaptionResourceItem = \"Parameters.Output.Caption\", DescriptionResourceItem = \"Parameters.Output.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Repository\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"63ee21f56fab4a719eb3c7a5b44a63b8\", CaptionResourceItem = \"Parameters.Repository.Caption\", DescriptionResourceItem = \"Parameters.Repository.Caption\", UseSolutionStorage = true)] public class AtfProcessUserTask_DownloadPackages : ProcessUserTask, IProcessDataSerializable Inheritance object ProcessFlowElement ProcessActivity ProcessUserTask AtfProcessUserTask_DownloadPackages Implements IProcessDataSerializable Inherited Members ProcessUserTask.AfterInternalExecute() ProcessUserTask.OnExecuted(ProcessActivityAfterEventArgs) ProcessUserTask.OnCanceled() ProcessUserTask.AfterActivitySaveScriptExecute(Entity) ProcessUserTask.Get<T>(string) ProcessUserTask.Set<T>(string, T) ProcessUserTask.InternalInteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.CreateTempFile() ProcessUserTask.GetTempFile(Guid) ProcessUserTask.CreateUsageContext() ProcessUserTask.RunUnderSystemSecurityContext<T>(Func<T>) ProcessUserTask.WritePropertiesData(DataWriter, bool) ProcessUserTask.GetPropertiesData(bool) ProcessUserTask.GetParameterValue(string) ProcessUserTask.GetParameterValue<TValue>(string, TValue) ProcessUserTask.FindParameterValuesByTag(Func<string, bool?>) ProcessUserTask.FindMappedEntityColumnMetaPaths(string) ProcessUserTask.GetRuntimeCaption() ProcessUserTask.InteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.SchemaManagerName ProcessUserTask.SchemaManager ProcessActivity.NeedBreakProcessExecuting(ProcessActivityAfterEventArgs) ProcessActivity.HasMapping(string) ProcessActivity.GetSchema(Guid) ProcessActivity.WriteProcessParameters() ProcessActivity.FindSchemaElement(Guid) ProcessActivity.ReadSerializableObject<T>(DataReader) ProcessActivity.WriteSerializableObject<T>(DataWriter, string, T) ProcessActivity.WriteSerializableObject(DataWriter, string, object, object) ProcessActivity.GetSerializableObject(DataReader) ProcessActivity.MeasureDuration(string) ProcessActivity.SetParameterValue(IProcessParametersMetaInfo, ParameterValueContext) ProcessActivity.Assign(ProcessFlowElement) ProcessActivity.CreateFlowElementInstanceByType(Type, Process) ProcessActivity.WriteExecutionData(IProcessExecutionDataWriter) ProcessActivity.CloneShallow() ProcessActivity.ReadPropertiesData() ProcessActivity.WritePropertiesData() ProcessActivity.ReadPropertiesDataFromDB(UserConnection) ProcessActivity.ReadPropertiesDataFromMemory() ProcessActivity.WritePropertiesDataToMemory() ProcessActivity.GetResultParameterAllValues(UserConnection, ProcessSchemaUserTask) ProcessActivity.GetResultParameterAllowedValues() ProcessActivity.GetResultAllowedValues() ProcessActivity.ExternalExecute(ProcessActivityAfterEventArgs) ProcessActivity.SerializeToString(object) ProcessActivity.DeserializeFromString<T>(string) ProcessActivity.GetLocalizableString(string, string) ProcessActivity.ConvertToProcessDataSourceFilters(Guid, string) ProcessActivity.FindSchemaElement() ProcessActivity.GetSchemaElement() ProcessActivity.GetIsReexecution() ProcessActivity.GetParameterValue(ProcessSchemaParameter) ProcessActivity.GetParameterValues() ProcessActivity.GetParameterValues(IEnumerable<ProcessSchemaParameter>) ProcessActivity.ProcessNotifier ProcessActivity.ProcessParameterStore ProcessActivity.NeedUserInteraction ProcessActivity.Owner ProcessActivity.SchemaUId ProcessActivity.OwnerUId ProcessActivity.UserConnection ProcessActivity.Schema ProcessActivity.Storage ProcessActivity.IsShownExecutionPage ProcessActivity.ProcessLane ProcessActivity.Compressor ProcessActivity.PerformerAssignmentOptions ProcessFlowElement.IdParameterName ProcessFlowElement.SysSchemaIdParameterName ProcessFlowElement.SysWorkspaceIdParameterName ProcessFlowElement.ParentIdParameterName ProcessFlowElement.CreatedOnParameterName ProcessFlowElement.CreatedByIdParameterName ProcessFlowElement.ModifiedOnParameterName ProcessFlowElement.ModifiedByIdParameterName ProcessFlowElement.StartDateParameterName ProcessFlowElement.CompleteDateParameterName ProcessFlowElement.SysProcessIdParameterName ProcessFlowElement.CaptionParameterName ProcessFlowElement.StatusIdParameterName ProcessFlowElement.TypeParameterName ProcessFlowElement.SchemaElementUIdParameterName ProcessFlowElement.SchemaUIdParameterName ProcessFlowElement.StatusParameterName ProcessFlowElement.OwnerIdParameterName ProcessFlowElement.ErrorDescriptionParameterName ProcessFlowElement.PropertiesDataParameterName ProcessFlowElement.GuidTypeName ProcessFlowElement.IntegerTypeName ProcessFlowElement.DateTimeTypeName ProcessFlowElement.TextTypeName ProcessFlowElement.Float1TypeName ProcessFlowElement.DurationInMinutesParameterName ProcessFlowElement.DurationInHoursParameterName ProcessFlowElement.DurationInDaysParameterName ProcessFlowElement.DurationInMillisecondsParameterName ProcessFlowElement.NodeIdParameterName ProcessFlowElement.UIdPropertyName ProcessFlowElement.NamePropertyName ProcessFlowElement.StatusPropertyName ProcessFlowElement.CompleteApplyingPropertiesDataValues() ProcessFlowElement.ReadSerializableObjectValue<T>(DataReader) ProcessFlowElement.WritePropertyValues(DataWriter) ProcessFlowElement.SetDurationQueryParameters(QueryParameterCollection) ProcessFlowElement.GetSchemaElement(Guid) ProcessFlowElement.SetPrivateFieldValue(string, object, object) ProcessFlowElement.ToString() ProcessFlowElement.ReadPropertiesData(DataReader) ProcessFlowElement.GetPropertiesData() ProcessFlowElement.WritePropertiesDataToDB(UserConnection) ProcessFlowElement.Execute(ProcessExecutingContext) ProcessFlowElement.TryGetPerformer(out Guid) ProcessFlowElement.WritePropertiesDataToOwner(DataWriter) ProcessFlowElement.ReadPropertiesDataFromOwner(DataReader) ProcessFlowElement.UseFlowEngineMode ProcessFlowElement.Log ProcessFlowElement.DateTimeProvider ProcessFlowElement.UId ProcessFlowElement.Name ProcessFlowElement.Caption ProcessFlowElement.Type ProcessFlowElement.SerializeToDB ProcessFlowElement.IsLogging ProcessFlowElement.IsProcess ProcessFlowElement.SchemaElementUId ProcessFlowElement.Status ProcessFlowElement.IsExecuted ProcessFlowElement.ExecutionResult ProcessFlowElement.LoopCounter ProcessFlowElement.CreatedInSchemaUId ProcessFlowElement.PreviousFlowElements ProcessFlowElement.ExecutedEventHandler ProcessFlowElement.StartDate ProcessFlowElement.Executed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AtfProcessUserTask_DownloadPackages(UserConnection) public AtfProcessUserTask_DownloadPackages(UserConnection userConnection) Parameters userConnection UserConnection Properties ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool Output public virtual string Output { get; set; } Property Value string Repository public virtual Guid Repository { get; set; } Property Value Guid Methods ApplyPropertiesDataValues(DataReader) Applies state of the current process element. protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader Instance that provides sequential reading of data. CancelExecuting(params object[]) Cancels executing the current process element. public override void CancelExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. CompleteExecuting(params object[]) Completes executing the current process element. public override bool CompleteExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. Returns bool true, if element was successfully executed and conditions for moving to the next step were satisfied; otherwise - false. GetExecutionData() Returns the data required to display the execution page. public override string GetExecutionData() Returns string String that represents the data needed for showing execution page. GetNotificationData() Returns data of the process element notification event. public override ProcessElementNotification GetNotificationData() Returns ProcessElementNotification Instance of the Terrasoft.Core.Process.ProcessElementNotification type. InternalExecute(ProcessExecutingContext) Method does nothing. protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Returns bool WritePropertiesData(DataWriter) Writes state of the current process element. public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter Instance of the Terrasoft.Common.DataWriter type."
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitAddAll.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitAddAll.html",
    "title": "Class AtfProcessUserTask_GitAddAll | AtfTide",
    "summary": "Class AtfProcessUserTask_GitAddAll Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll [DesignModeProperty(Name = \"ErrorMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"c6bd9ac5873144cca92bbfb554fc62ef\", CaptionResourceItem = \"Parameters.ErrorMessage.Caption\", DescriptionResourceItem = \"Parameters.ErrorMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"IsError\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"c6bd9ac5873144cca92bbfb554fc62ef\", CaptionResourceItem = \"Parameters.IsError.Caption\", DescriptionResourceItem = \"Parameters.IsError.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Repository\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"c6bd9ac5873144cca92bbfb554fc62ef\", CaptionResourceItem = \"Parameters.Repository.Caption\", DescriptionResourceItem = \"Parameters.Repository.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Output\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"c6bd9ac5873144cca92bbfb554fc62ef\", CaptionResourceItem = \"Parameters.Output.Caption\", DescriptionResourceItem = \"Parameters.Output.Caption\", UseSolutionStorage = true)] public class AtfProcessUserTask_GitAddAll : ProcessUserTask, IProcessDataSerializable Inheritance object ProcessFlowElement ProcessActivity ProcessUserTask AtfProcessUserTask_GitAddAll Implements IProcessDataSerializable Inherited Members ProcessUserTask.AfterInternalExecute() ProcessUserTask.OnExecuted(ProcessActivityAfterEventArgs) ProcessUserTask.OnCanceled() ProcessUserTask.AfterActivitySaveScriptExecute(Entity) ProcessUserTask.Get<T>(string) ProcessUserTask.Set<T>(string, T) ProcessUserTask.InternalInteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.CreateTempFile() ProcessUserTask.GetTempFile(Guid) ProcessUserTask.CreateUsageContext() ProcessUserTask.RunUnderSystemSecurityContext<T>(Func<T>) ProcessUserTask.WritePropertiesData(DataWriter, bool) ProcessUserTask.GetPropertiesData(bool) ProcessUserTask.GetParameterValue(string) ProcessUserTask.GetParameterValue<TValue>(string, TValue) ProcessUserTask.FindParameterValuesByTag(Func<string, bool?>) ProcessUserTask.FindMappedEntityColumnMetaPaths(string) ProcessUserTask.GetRuntimeCaption() ProcessUserTask.InteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.SchemaManagerName ProcessUserTask.SchemaManager ProcessActivity.NeedBreakProcessExecuting(ProcessActivityAfterEventArgs) ProcessActivity.HasMapping(string) ProcessActivity.GetSchema(Guid) ProcessActivity.WriteProcessParameters() ProcessActivity.FindSchemaElement(Guid) ProcessActivity.ReadSerializableObject<T>(DataReader) ProcessActivity.WriteSerializableObject<T>(DataWriter, string, T) ProcessActivity.WriteSerializableObject(DataWriter, string, object, object) ProcessActivity.GetSerializableObject(DataReader) ProcessActivity.MeasureDuration(string) ProcessActivity.SetParameterValue(IProcessParametersMetaInfo, ParameterValueContext) ProcessActivity.Assign(ProcessFlowElement) ProcessActivity.CreateFlowElementInstanceByType(Type, Process) ProcessActivity.WriteExecutionData(IProcessExecutionDataWriter) ProcessActivity.CloneShallow() ProcessActivity.ReadPropertiesData() ProcessActivity.WritePropertiesData() ProcessActivity.ReadPropertiesDataFromDB(UserConnection) ProcessActivity.ReadPropertiesDataFromMemory() ProcessActivity.WritePropertiesDataToMemory() ProcessActivity.GetResultParameterAllValues(UserConnection, ProcessSchemaUserTask) ProcessActivity.GetResultParameterAllowedValues() ProcessActivity.GetResultAllowedValues() ProcessActivity.ExternalExecute(ProcessActivityAfterEventArgs) ProcessActivity.SerializeToString(object) ProcessActivity.DeserializeFromString<T>(string) ProcessActivity.GetLocalizableString(string, string) ProcessActivity.ConvertToProcessDataSourceFilters(Guid, string) ProcessActivity.FindSchemaElement() ProcessActivity.GetSchemaElement() ProcessActivity.GetIsReexecution() ProcessActivity.GetParameterValue(ProcessSchemaParameter) ProcessActivity.GetParameterValues() ProcessActivity.GetParameterValues(IEnumerable<ProcessSchemaParameter>) ProcessActivity.ProcessNotifier ProcessActivity.ProcessParameterStore ProcessActivity.NeedUserInteraction ProcessActivity.Owner ProcessActivity.SchemaUId ProcessActivity.OwnerUId ProcessActivity.UserConnection ProcessActivity.Schema ProcessActivity.Storage ProcessActivity.IsShownExecutionPage ProcessActivity.ProcessLane ProcessActivity.Compressor ProcessActivity.PerformerAssignmentOptions ProcessFlowElement.IdParameterName ProcessFlowElement.SysSchemaIdParameterName ProcessFlowElement.SysWorkspaceIdParameterName ProcessFlowElement.ParentIdParameterName ProcessFlowElement.CreatedOnParameterName ProcessFlowElement.CreatedByIdParameterName ProcessFlowElement.ModifiedOnParameterName ProcessFlowElement.ModifiedByIdParameterName ProcessFlowElement.StartDateParameterName ProcessFlowElement.CompleteDateParameterName ProcessFlowElement.SysProcessIdParameterName ProcessFlowElement.CaptionParameterName ProcessFlowElement.StatusIdParameterName ProcessFlowElement.TypeParameterName ProcessFlowElement.SchemaElementUIdParameterName ProcessFlowElement.SchemaUIdParameterName ProcessFlowElement.StatusParameterName ProcessFlowElement.OwnerIdParameterName ProcessFlowElement.ErrorDescriptionParameterName ProcessFlowElement.PropertiesDataParameterName ProcessFlowElement.GuidTypeName ProcessFlowElement.IntegerTypeName ProcessFlowElement.DateTimeTypeName ProcessFlowElement.TextTypeName ProcessFlowElement.Float1TypeName ProcessFlowElement.DurationInMinutesParameterName ProcessFlowElement.DurationInHoursParameterName ProcessFlowElement.DurationInDaysParameterName ProcessFlowElement.DurationInMillisecondsParameterName ProcessFlowElement.NodeIdParameterName ProcessFlowElement.UIdPropertyName ProcessFlowElement.NamePropertyName ProcessFlowElement.StatusPropertyName ProcessFlowElement.CompleteApplyingPropertiesDataValues() ProcessFlowElement.ReadSerializableObjectValue<T>(DataReader) ProcessFlowElement.WritePropertyValues(DataWriter) ProcessFlowElement.SetDurationQueryParameters(QueryParameterCollection) ProcessFlowElement.GetSchemaElement(Guid) ProcessFlowElement.SetPrivateFieldValue(string, object, object) ProcessFlowElement.ToString() ProcessFlowElement.ReadPropertiesData(DataReader) ProcessFlowElement.GetPropertiesData() ProcessFlowElement.WritePropertiesDataToDB(UserConnection) ProcessFlowElement.Execute(ProcessExecutingContext) ProcessFlowElement.TryGetPerformer(out Guid) ProcessFlowElement.WritePropertiesDataToOwner(DataWriter) ProcessFlowElement.ReadPropertiesDataFromOwner(DataReader) ProcessFlowElement.UseFlowEngineMode ProcessFlowElement.Log ProcessFlowElement.DateTimeProvider ProcessFlowElement.UId ProcessFlowElement.Name ProcessFlowElement.Caption ProcessFlowElement.Type ProcessFlowElement.SerializeToDB ProcessFlowElement.IsLogging ProcessFlowElement.IsProcess ProcessFlowElement.SchemaElementUId ProcessFlowElement.Status ProcessFlowElement.IsExecuted ProcessFlowElement.ExecutionResult ProcessFlowElement.LoopCounter ProcessFlowElement.CreatedInSchemaUId ProcessFlowElement.PreviousFlowElements ProcessFlowElement.ExecutedEventHandler ProcessFlowElement.StartDate ProcessFlowElement.Executed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AtfProcessUserTask_GitAddAll(UserConnection) public AtfProcessUserTask_GitAddAll(UserConnection userConnection) Parameters userConnection UserConnection Properties ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool Output public virtual string Output { get; set; } Property Value string Repository public virtual Guid Repository { get; set; } Property Value Guid Methods ApplyPropertiesDataValues(DataReader) Applies state of the current process element. protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader Instance that provides sequential reading of data. CancelExecuting(params object[]) Cancels executing the current process element. public override void CancelExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. CompleteExecuting(params object[]) Completes executing the current process element. public override bool CompleteExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. Returns bool true, if element was successfully executed and conditions for moving to the next step were satisfied; otherwise - false. GetExecutionData() Returns the data required to display the execution page. public override string GetExecutionData() Returns string String that represents the data needed for showing execution page. GetNotificationData() Returns data of the process element notification event. public override ProcessElementNotification GetNotificationData() Returns ProcessElementNotification Instance of the Terrasoft.Core.Process.ProcessElementNotification type. InternalExecute(ProcessExecutingContext) Method does nothing. protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Returns bool WritePropertiesData(DataWriter) Writes state of the current process element. public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter Instance of the Terrasoft.Common.DataWriter type."
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitCommit.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitCommit.html",
    "title": "Class AtfProcessUserTask_GitCommit | AtfTide",
    "summary": "Class AtfProcessUserTask_GitCommit Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll [DesignModeProperty(Name = \"Repository\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"68c751e5bdf844ac9772df64781ad25d\", CaptionResourceItem = \"Parameters.Repository.Caption\", DescriptionResourceItem = \"Parameters.Repository.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"ErrorMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"68c751e5bdf844ac9772df64781ad25d\", CaptionResourceItem = \"Parameters.ErrorMessage.Caption\", DescriptionResourceItem = \"Parameters.ErrorMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"IsError\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"68c751e5bdf844ac9772df64781ad25d\", CaptionResourceItem = \"Parameters.IsError.Caption\", DescriptionResourceItem = \"Parameters.IsError.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"CommitMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"68c751e5bdf844ac9772df64781ad25d\", CaptionResourceItem = \"Parameters.CommitMessage.Caption\", DescriptionResourceItem = \"Parameters.CommitMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Output\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"68c751e5bdf844ac9772df64781ad25d\", CaptionResourceItem = \"Parameters.Output.Caption\", DescriptionResourceItem = \"Parameters.Output.Caption\", UseSolutionStorage = true)] public class AtfProcessUserTask_GitCommit : ProcessUserTask, IProcessDataSerializable Inheritance object ProcessFlowElement ProcessActivity ProcessUserTask AtfProcessUserTask_GitCommit Implements IProcessDataSerializable Inherited Members ProcessUserTask.AfterInternalExecute() ProcessUserTask.OnExecuted(ProcessActivityAfterEventArgs) ProcessUserTask.OnCanceled() ProcessUserTask.AfterActivitySaveScriptExecute(Entity) ProcessUserTask.Get<T>(string) ProcessUserTask.Set<T>(string, T) ProcessUserTask.InternalInteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.CreateTempFile() ProcessUserTask.GetTempFile(Guid) ProcessUserTask.CreateUsageContext() ProcessUserTask.RunUnderSystemSecurityContext<T>(Func<T>) ProcessUserTask.WritePropertiesData(DataWriter, bool) ProcessUserTask.GetPropertiesData(bool) ProcessUserTask.GetParameterValue(string) ProcessUserTask.GetParameterValue<TValue>(string, TValue) ProcessUserTask.FindParameterValuesByTag(Func<string, bool?>) ProcessUserTask.FindMappedEntityColumnMetaPaths(string) ProcessUserTask.GetRuntimeCaption() ProcessUserTask.InteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.SchemaManagerName ProcessUserTask.SchemaManager ProcessActivity.NeedBreakProcessExecuting(ProcessActivityAfterEventArgs) ProcessActivity.HasMapping(string) ProcessActivity.GetSchema(Guid) ProcessActivity.WriteProcessParameters() ProcessActivity.FindSchemaElement(Guid) ProcessActivity.ReadSerializableObject<T>(DataReader) ProcessActivity.WriteSerializableObject<T>(DataWriter, string, T) ProcessActivity.WriteSerializableObject(DataWriter, string, object, object) ProcessActivity.GetSerializableObject(DataReader) ProcessActivity.MeasureDuration(string) ProcessActivity.SetParameterValue(IProcessParametersMetaInfo, ParameterValueContext) ProcessActivity.Assign(ProcessFlowElement) ProcessActivity.CreateFlowElementInstanceByType(Type, Process) ProcessActivity.WriteExecutionData(IProcessExecutionDataWriter) ProcessActivity.CloneShallow() ProcessActivity.ReadPropertiesData() ProcessActivity.WritePropertiesData() ProcessActivity.ReadPropertiesDataFromDB(UserConnection) ProcessActivity.ReadPropertiesDataFromMemory() ProcessActivity.WritePropertiesDataToMemory() ProcessActivity.GetResultParameterAllValues(UserConnection, ProcessSchemaUserTask) ProcessActivity.GetResultParameterAllowedValues() ProcessActivity.GetResultAllowedValues() ProcessActivity.ExternalExecute(ProcessActivityAfterEventArgs) ProcessActivity.SerializeToString(object) ProcessActivity.DeserializeFromString<T>(string) ProcessActivity.GetLocalizableString(string, string) ProcessActivity.ConvertToProcessDataSourceFilters(Guid, string) ProcessActivity.FindSchemaElement() ProcessActivity.GetSchemaElement() ProcessActivity.GetIsReexecution() ProcessActivity.GetParameterValue(ProcessSchemaParameter) ProcessActivity.GetParameterValues() ProcessActivity.GetParameterValues(IEnumerable<ProcessSchemaParameter>) ProcessActivity.ProcessNotifier ProcessActivity.ProcessParameterStore ProcessActivity.NeedUserInteraction ProcessActivity.Owner ProcessActivity.SchemaUId ProcessActivity.OwnerUId ProcessActivity.UserConnection ProcessActivity.Schema ProcessActivity.Storage ProcessActivity.IsShownExecutionPage ProcessActivity.ProcessLane ProcessActivity.Compressor ProcessActivity.PerformerAssignmentOptions ProcessFlowElement.IdParameterName ProcessFlowElement.SysSchemaIdParameterName ProcessFlowElement.SysWorkspaceIdParameterName ProcessFlowElement.ParentIdParameterName ProcessFlowElement.CreatedOnParameterName ProcessFlowElement.CreatedByIdParameterName ProcessFlowElement.ModifiedOnParameterName ProcessFlowElement.ModifiedByIdParameterName ProcessFlowElement.StartDateParameterName ProcessFlowElement.CompleteDateParameterName ProcessFlowElement.SysProcessIdParameterName ProcessFlowElement.CaptionParameterName ProcessFlowElement.StatusIdParameterName ProcessFlowElement.TypeParameterName ProcessFlowElement.SchemaElementUIdParameterName ProcessFlowElement.SchemaUIdParameterName ProcessFlowElement.StatusParameterName ProcessFlowElement.OwnerIdParameterName ProcessFlowElement.ErrorDescriptionParameterName ProcessFlowElement.PropertiesDataParameterName ProcessFlowElement.GuidTypeName ProcessFlowElement.IntegerTypeName ProcessFlowElement.DateTimeTypeName ProcessFlowElement.TextTypeName ProcessFlowElement.Float1TypeName ProcessFlowElement.DurationInMinutesParameterName ProcessFlowElement.DurationInHoursParameterName ProcessFlowElement.DurationInDaysParameterName ProcessFlowElement.DurationInMillisecondsParameterName ProcessFlowElement.NodeIdParameterName ProcessFlowElement.UIdPropertyName ProcessFlowElement.NamePropertyName ProcessFlowElement.StatusPropertyName ProcessFlowElement.CompleteApplyingPropertiesDataValues() ProcessFlowElement.ReadSerializableObjectValue<T>(DataReader) ProcessFlowElement.WritePropertyValues(DataWriter) ProcessFlowElement.SetDurationQueryParameters(QueryParameterCollection) ProcessFlowElement.GetSchemaElement(Guid) ProcessFlowElement.SetPrivateFieldValue(string, object, object) ProcessFlowElement.ToString() ProcessFlowElement.ReadPropertiesData(DataReader) ProcessFlowElement.GetPropertiesData() ProcessFlowElement.WritePropertiesDataToDB(UserConnection) ProcessFlowElement.Execute(ProcessExecutingContext) ProcessFlowElement.TryGetPerformer(out Guid) ProcessFlowElement.WritePropertiesDataToOwner(DataWriter) ProcessFlowElement.ReadPropertiesDataFromOwner(DataReader) ProcessFlowElement.UseFlowEngineMode ProcessFlowElement.Log ProcessFlowElement.DateTimeProvider ProcessFlowElement.UId ProcessFlowElement.Name ProcessFlowElement.Caption ProcessFlowElement.Type ProcessFlowElement.SerializeToDB ProcessFlowElement.IsLogging ProcessFlowElement.IsProcess ProcessFlowElement.SchemaElementUId ProcessFlowElement.Status ProcessFlowElement.IsExecuted ProcessFlowElement.ExecutionResult ProcessFlowElement.LoopCounter ProcessFlowElement.CreatedInSchemaUId ProcessFlowElement.PreviousFlowElements ProcessFlowElement.ExecutedEventHandler ProcessFlowElement.StartDate ProcessFlowElement.Executed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AtfProcessUserTask_GitCommit(UserConnection) public AtfProcessUserTask_GitCommit(UserConnection userConnection) Parameters userConnection UserConnection Properties CommitMessage public virtual string CommitMessage { get; set; } Property Value string ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool Output public virtual string Output { get; set; } Property Value string Repository public virtual Guid Repository { get; set; } Property Value Guid Methods ApplyPropertiesDataValues(DataReader) Applies state of the current process element. protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader Instance that provides sequential reading of data. CancelExecuting(params object[]) Cancels executing the current process element. public override void CancelExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. CompleteExecuting(params object[]) Completes executing the current process element. public override bool CompleteExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. Returns bool true, if element was successfully executed and conditions for moving to the next step were satisfied; otherwise - false. GetExecutionData() Returns the data required to display the execution page. public override string GetExecutionData() Returns string String that represents the data needed for showing execution page. GetNotificationData() Returns data of the process element notification event. public override ProcessElementNotification GetNotificationData() Returns ProcessElementNotification Instance of the Terrasoft.Core.Process.ProcessElementNotification type. InternalExecute(ProcessExecutingContext) Method does nothing. protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Returns bool WritePropertiesData(DataWriter) Writes state of the current process element. public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter Instance of the Terrasoft.Common.DataWriter type."
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitPush.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitPush.html",
    "title": "Class AtfProcessUserTask_GitPush | AtfTide",
    "summary": "Class AtfProcessUserTask_GitPush Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll [DesignModeProperty(Name = \"Repository\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"15d4abc17e0d4aa4a3365f16b73b8be1\", CaptionResourceItem = \"Parameters.Repository.Caption\", DescriptionResourceItem = \"Parameters.Repository.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"IsError\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"15d4abc17e0d4aa4a3365f16b73b8be1\", CaptionResourceItem = \"Parameters.IsError.Caption\", DescriptionResourceItem = \"Parameters.IsError.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"ErrorMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"15d4abc17e0d4aa4a3365f16b73b8be1\", CaptionResourceItem = \"Parameters.ErrorMessage.Caption\", DescriptionResourceItem = \"Parameters.ErrorMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Output\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"15d4abc17e0d4aa4a3365f16b73b8be1\", CaptionResourceItem = \"Parameters.Output.Caption\", DescriptionResourceItem = \"Parameters.Output.Caption\", UseSolutionStorage = true)] public class AtfProcessUserTask_GitPush : ProcessUserTask, IProcessDataSerializable Inheritance object ProcessFlowElement ProcessActivity ProcessUserTask AtfProcessUserTask_GitPush Implements IProcessDataSerializable Inherited Members ProcessUserTask.AfterInternalExecute() ProcessUserTask.OnExecuted(ProcessActivityAfterEventArgs) ProcessUserTask.OnCanceled() ProcessUserTask.AfterActivitySaveScriptExecute(Entity) ProcessUserTask.Get<T>(string) ProcessUserTask.Set<T>(string, T) ProcessUserTask.InternalInteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.CreateTempFile() ProcessUserTask.GetTempFile(Guid) ProcessUserTask.CreateUsageContext() ProcessUserTask.RunUnderSystemSecurityContext<T>(Func<T>) ProcessUserTask.WritePropertiesData(DataWriter, bool) ProcessUserTask.GetPropertiesData(bool) ProcessUserTask.GetParameterValue(string) ProcessUserTask.GetParameterValue<TValue>(string, TValue) ProcessUserTask.FindParameterValuesByTag(Func<string, bool?>) ProcessUserTask.FindMappedEntityColumnMetaPaths(string) ProcessUserTask.GetRuntimeCaption() ProcessUserTask.InteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.SchemaManagerName ProcessUserTask.SchemaManager ProcessActivity.NeedBreakProcessExecuting(ProcessActivityAfterEventArgs) ProcessActivity.HasMapping(string) ProcessActivity.GetSchema(Guid) ProcessActivity.WriteProcessParameters() ProcessActivity.FindSchemaElement(Guid) ProcessActivity.ReadSerializableObject<T>(DataReader) ProcessActivity.WriteSerializableObject<T>(DataWriter, string, T) ProcessActivity.WriteSerializableObject(DataWriter, string, object, object) ProcessActivity.GetSerializableObject(DataReader) ProcessActivity.MeasureDuration(string) ProcessActivity.SetParameterValue(IProcessParametersMetaInfo, ParameterValueContext) ProcessActivity.Assign(ProcessFlowElement) ProcessActivity.CreateFlowElementInstanceByType(Type, Process) ProcessActivity.WriteExecutionData(IProcessExecutionDataWriter) ProcessActivity.CloneShallow() ProcessActivity.ReadPropertiesData() ProcessActivity.WritePropertiesData() ProcessActivity.ReadPropertiesDataFromDB(UserConnection) ProcessActivity.ReadPropertiesDataFromMemory() ProcessActivity.WritePropertiesDataToMemory() ProcessActivity.GetResultParameterAllValues(UserConnection, ProcessSchemaUserTask) ProcessActivity.GetResultParameterAllowedValues() ProcessActivity.GetResultAllowedValues() ProcessActivity.ExternalExecute(ProcessActivityAfterEventArgs) ProcessActivity.SerializeToString(object) ProcessActivity.DeserializeFromString<T>(string) ProcessActivity.GetLocalizableString(string, string) ProcessActivity.ConvertToProcessDataSourceFilters(Guid, string) ProcessActivity.FindSchemaElement() ProcessActivity.GetSchemaElement() ProcessActivity.GetIsReexecution() ProcessActivity.GetParameterValue(ProcessSchemaParameter) ProcessActivity.GetParameterValues() ProcessActivity.GetParameterValues(IEnumerable<ProcessSchemaParameter>) ProcessActivity.ProcessNotifier ProcessActivity.ProcessParameterStore ProcessActivity.NeedUserInteraction ProcessActivity.Owner ProcessActivity.SchemaUId ProcessActivity.OwnerUId ProcessActivity.UserConnection ProcessActivity.Schema ProcessActivity.Storage ProcessActivity.IsShownExecutionPage ProcessActivity.ProcessLane ProcessActivity.Compressor ProcessActivity.PerformerAssignmentOptions ProcessFlowElement.IdParameterName ProcessFlowElement.SysSchemaIdParameterName ProcessFlowElement.SysWorkspaceIdParameterName ProcessFlowElement.ParentIdParameterName ProcessFlowElement.CreatedOnParameterName ProcessFlowElement.CreatedByIdParameterName ProcessFlowElement.ModifiedOnParameterName ProcessFlowElement.ModifiedByIdParameterName ProcessFlowElement.StartDateParameterName ProcessFlowElement.CompleteDateParameterName ProcessFlowElement.SysProcessIdParameterName ProcessFlowElement.CaptionParameterName ProcessFlowElement.StatusIdParameterName ProcessFlowElement.TypeParameterName ProcessFlowElement.SchemaElementUIdParameterName ProcessFlowElement.SchemaUIdParameterName ProcessFlowElement.StatusParameterName ProcessFlowElement.OwnerIdParameterName ProcessFlowElement.ErrorDescriptionParameterName ProcessFlowElement.PropertiesDataParameterName ProcessFlowElement.GuidTypeName ProcessFlowElement.IntegerTypeName ProcessFlowElement.DateTimeTypeName ProcessFlowElement.TextTypeName ProcessFlowElement.Float1TypeName ProcessFlowElement.DurationInMinutesParameterName ProcessFlowElement.DurationInHoursParameterName ProcessFlowElement.DurationInDaysParameterName ProcessFlowElement.DurationInMillisecondsParameterName ProcessFlowElement.NodeIdParameterName ProcessFlowElement.UIdPropertyName ProcessFlowElement.NamePropertyName ProcessFlowElement.StatusPropertyName ProcessFlowElement.CompleteApplyingPropertiesDataValues() ProcessFlowElement.ReadSerializableObjectValue<T>(DataReader) ProcessFlowElement.WritePropertyValues(DataWriter) ProcessFlowElement.SetDurationQueryParameters(QueryParameterCollection) ProcessFlowElement.GetSchemaElement(Guid) ProcessFlowElement.SetPrivateFieldValue(string, object, object) ProcessFlowElement.ToString() ProcessFlowElement.ReadPropertiesData(DataReader) ProcessFlowElement.GetPropertiesData() ProcessFlowElement.WritePropertiesDataToDB(UserConnection) ProcessFlowElement.Execute(ProcessExecutingContext) ProcessFlowElement.TryGetPerformer(out Guid) ProcessFlowElement.WritePropertiesDataToOwner(DataWriter) ProcessFlowElement.ReadPropertiesDataFromOwner(DataReader) ProcessFlowElement.UseFlowEngineMode ProcessFlowElement.Log ProcessFlowElement.DateTimeProvider ProcessFlowElement.UId ProcessFlowElement.Name ProcessFlowElement.Caption ProcessFlowElement.Type ProcessFlowElement.SerializeToDB ProcessFlowElement.IsLogging ProcessFlowElement.IsProcess ProcessFlowElement.SchemaElementUId ProcessFlowElement.Status ProcessFlowElement.IsExecuted ProcessFlowElement.ExecutionResult ProcessFlowElement.LoopCounter ProcessFlowElement.CreatedInSchemaUId ProcessFlowElement.PreviousFlowElements ProcessFlowElement.ExecutedEventHandler ProcessFlowElement.StartDate ProcessFlowElement.Executed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AtfProcessUserTask_GitPush(UserConnection) public AtfProcessUserTask_GitPush(UserConnection userConnection) Parameters userConnection UserConnection Properties ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool Output public virtual string Output { get; set; } Property Value string Repository public virtual Guid Repository { get; set; } Property Value Guid Methods ApplyPropertiesDataValues(DataReader) Applies state of the current process element. protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader Instance that provides sequential reading of data. CancelExecuting(params object[]) Cancels executing the current process element. public override void CancelExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. CompleteExecuting(params object[]) Completes executing the current process element. public override bool CompleteExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. Returns bool true, if element was successfully executed and conditions for moving to the next step were satisfied; otherwise - false. GetExecutionData() Returns the data required to display the execution page. public override string GetExecutionData() Returns string String that represents the data needed for showing execution page. GetNotificationData() Returns data of the process element notification event. public override ProcessElementNotification GetNotificationData() Returns ProcessElementNotification Instance of the Terrasoft.Core.Process.ProcessElementNotification type. InternalExecute(ProcessExecutingContext) Method does nothing. protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Returns bool WritePropertiesData(DataWriter) Writes state of the current process element. public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter Instance of the Terrasoft.Common.DataWriter type."
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_RunOSCommand.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_RunOSCommand.html",
    "title": "Class AtfProcessUserTask_RunOSCommand | AtfTide",
    "summary": "Class AtfProcessUserTask_RunOSCommand Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll public class AtfProcessUserTask_RunOSCommand : ProcessUserTask Inheritance object AtfProcessUserTask_RunOSCommand Constructors AtfProcessUserTask_RunOSCommand(UserConnection) public AtfProcessUserTask_RunOSCommand(UserConnection userConnection) Parameters userConnection UserConnection Properties Arguments public virtual string Arguments { get; set; } Property Value string ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string FileName public virtual string FileName { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool WaitForExit public virtual bool WaitForExit { get; set; } Property Value bool WorkingDirectory public virtual string WorkingDirectory { get; set; } Property Value string Methods ApplyPropertiesDataValues(DataReader) protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader CancelExecuting(params object[]) public override void CancelExecuting(params object[] parameters) Parameters parameters object[] CompleteExecuting(params object[]) public override bool CompleteExecuting(params object[] parameters) Parameters parameters object[] Returns bool GetExecutionData() public override string GetExecutionData() Returns string GetNotificationData() public override ProcessElementNotification GetNotificationData() Returns ProcessElementNotification InternalExecute(ProcessExecutingContext) protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Returns bool WritePropertiesData(DataWriter) public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter"
  },
  "api/Terrasoft.Core.Process.Configuration.Branch.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.Branch.html",
    "title": "Class Branch | AtfTide",
    "summary": "Class Branch Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll public class Branch Inheritance object Branch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties name public string name { get; set; } Property Value string"
  },
  "api/Terrasoft.Core.Process.Configuration.BranchesCommandResponse.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.BranchesCommandResponse.html",
    "title": "Class BranchesCommandResponse | AtfTide",
    "summary": "Class BranchesCommandResponse Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll public class BranchesCommandResponse Inheritance object BranchesCommandResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties branches public Branch[] branches { get; set; } Property Value Branch[]"
  },
  "api/Terrasoft.Core.Process.Configuration.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.html",
    "title": "Namespace Terrasoft.Core.Process.Configuration | AtfTide",
    "summary": "Namespace Terrasoft.Core.Process.Configuration Classes AtfProcessUserTask_CloneRepository AtfProcessUserTask_DownloadPackages AtfProcessUserTask_GitAddAll AtfProcessUserTask_GitCommit AtfProcessUserTask_GitPush Branch BranchesCommandResponse"
  },
  "consolegit/ConsoleGit.CommandLineArgs.html": {
    "href": "consolegit/ConsoleGit.CommandLineArgs.html",
    "title": "Class CommandLineArgs | AtfTide",
    "summary": "Class CommandLineArgs Namespace ConsoleGit Assembly ConsoleGit.dll public record CommandLineArgs : IEquatable<CommandLineArgs> Inheritance object CommandLineArgs Implements IEquatable<CommandLineArgs> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandLineArgs() public CommandLineArgs() Properties BranchName public string BranchName { get; set; } Property Value string Command public string Command { get; init; } Property Value string CommitAuthorEmail public string CommitAuthorEmail { get; set; } Property Value string CommitAuthorName public string CommitAuthorName { get; set; } Property Value string CommitMessage public string CommitMessage { get; set; } Property Value string CreatioPassword public string CreatioPassword { get; init; } Property Value string CreatioUrl public Uri? CreatioUrl { get; init; } Property Value Uri CreatioUserName public string CreatioUserName { get; init; } Property Value string Files public string Files { get; set; } Property Value string GitUrl public Uri? GitUrl { get; init; } Property Value Uri IsFramework public bool IsFramework { get; init; } Property Value bool PackageName public bool PackageName { get; init; } Property Value bool Password public string Password { get; init; } Property Value string RepoDir public string RepoDir { get; init; } Property Value string Silent public bool Silent { get; init; } Property Value bool UserName public string UserName { get; init; } Property Value string UserType public string? UserType { get; init; } Property Value string Methods CreateCookieContainerFromArgs() Creates cookie container with Creatio authentication cookies. public CookieContainer CreateCookieContainerFromArgs() Returns CookieContainer Configured CookieContainer for Creatio requests Remarks BPMLOADER, ASPXAUTH, BPMCSRF - main auth cookies UserType, BPMSESSIONID - session cookies Special handling for ASPXAUTH domain prefix Exceptions ArgumentException Invalid Creatio URL or missing required cookies"
  },
  "consolegit/ConsoleGit.Commands.AddAllCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.AddAllCommand.html",
    "title": "Class AddAllCommand | AtfTide",
    "summary": "Class AddAllCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Stage all working directory changes public class AddAllCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand AddAllCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.Logger BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.GetAccessPermissionsForFolder(string) BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddAllCommand(CommandLineArgs, IWebSocketLogger) Stage all working directory changes public AddAllCommand(CommandLineArgs args, IWebSocketLogger logger) Parameters args CommandLineArgs Arguments logger IWebSocketLogger See Also https://github.com/libgit2/libgit2sharp/wiki/git-add#stage-all-working-directory-changes Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success> See Also https://github.com/libgit2/libgit2sharp/wiki/git-add#stage-all-working-directory-changes"
  },
  "consolegit/ConsoleGit.Commands.BaseRepositoryCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.BaseRepositoryCommand.html",
    "title": "Class BaseRepositoryCommand | AtfTide",
    "summary": "Class BaseRepositoryCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public abstract class BaseRepositoryCommand : ICommand, IDisposable Inheritance object BaseRepositoryCommand Implements ICommand IDisposable Derived AddAllCommand CheckoutCommand CloneCommand CommitCommand DiscardFilesCommand GetBranchesCommand GetChangedFilesCommand GetDiffCommand PullCommand PushCommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BaseRepositoryCommand(CommandLineArgs, IWebSocketLogger) protected BaseRepositoryCommand(CommandLineArgs args, IWebSocketLogger logger) Parameters args CommandLineArgs logger IWebSocketLogger Fields Args protected readonly CommandLineArgs Args Field Value CommandLineArgs Logger protected readonly IWebSocketLogger Logger Field Value IWebSocketLogger Properties InitializedRepository protected GitRepository InitializedRepository { get; } Property Value GitRepository Methods CleanRepositoryDirectory() protected void CleanRepositoryDirectory() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool Execute() public abstract ErrorOr<Success> Execute() Returns ErrorOr<Success> ~BaseRepositoryCommand() protected ~BaseRepositoryCommand() GetAccessPermissionsForFolder(string) protected string GetAccessPermissionsForFolder(string repoDir) Parameters repoDir string Returns string GrantDeleteAccess(DirectoryInfo, string) public static void GrantDeleteAccess(DirectoryInfo directoryInfo, string userName) Parameters directoryInfo DirectoryInfo userName string"
  },
  "consolegit/ConsoleGit.Commands.BranchesCommandResponse.html": {
    "href": "consolegit/ConsoleGit.Commands.BranchesCommandResponse.html",
    "title": "Class BranchesCommandResponse | AtfTide",
    "summary": "Class BranchesCommandResponse Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public class BranchesCommandResponse Inheritance object BranchesCommandResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Branches [JsonPropertyName(\"branches\")] public List<MyBranch> Branches { get; set; } Property Value List<MyBranch>"
  },
  "consolegit/ConsoleGit.Commands.CheckoutCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.CheckoutCommand.html",
    "title": "Class CheckoutCommand | AtfTide",
    "summary": "Class CheckoutCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public class CheckoutCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand CheckoutCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.Logger BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.GetAccessPermissionsForFolder(string) BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CheckoutCommand(CommandLineArgs, IWebSocketLogger) public CheckoutCommand(CommandLineArgs args, IWebSocketLogger logger) Parameters args CommandLineArgs logger IWebSocketLogger Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success>"
  },
  "consolegit/ConsoleGit.Commands.CloneCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.CloneCommand.html",
    "title": "Class CloneCommand | AtfTide",
    "summary": "Class CloneCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public class CloneCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand CloneCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.Logger BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.GetAccessPermissionsForFolder(string) BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CloneCommand(CommandLineArgs, IWebSocketLogger) public CloneCommand(CommandLineArgs args, IWebSocketLogger logger) Parameters args CommandLineArgs logger IWebSocketLogger Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success>"
  },
  "consolegit/ConsoleGit.Commands.CommitCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.CommitCommand.html",
    "title": "Class CommitCommand | AtfTide",
    "summary": "Class CommitCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Make a commit to a non-bare repository public class CommitCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand CommitCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.Logger BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.GetAccessPermissionsForFolder(string) BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommitCommand(CommandLineArgs, IWebSocketLogger) Make a commit to a non-bare repository public CommitCommand(CommandLineArgs args, IWebSocketLogger logger) Parameters args CommandLineArgs Arguments logger IWebSocketLogger See Also https://github.com/libgit2/libgit2sharp/wiki/git-commit#make-a-commit-to-a-non-bare-repository Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success> See Also https://github.com/libgit2/libgit2sharp/wiki/git-commit#make-a-commit-to-a-non-bare-repository"
  },
  "consolegit/ConsoleGit.Commands.DiscardFilesCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.DiscardFilesCommand.html",
    "title": "Class DiscardFilesCommand | AtfTide",
    "summary": "Class DiscardFilesCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Prints to console changes in index and working directory public class DiscardFilesCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand DiscardFilesCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.Logger BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.GetAccessPermissionsForFolder(string) BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DiscardFilesCommand(CommandLineArgs, IWebSocketLogger) Prints to console changes in index and working directory public DiscardFilesCommand(CommandLineArgs args, IWebSocketLogger logger) Parameters args CommandLineArgs logger IWebSocketLogger See Also libgit2sharp Wiki Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success> See Also libgit2sharp Wiki"
  },
  "consolegit/ConsoleGit.Commands.DownloadPackagesCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.DownloadPackagesCommand.html",
    "title": "Class DownloadPackagesCommand | AtfTide",
    "summary": "Class DownloadPackagesCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Downloads packages defined in workspace settings from Creatio. public class DownloadPackagesCommand : ICommand, IDisposable Inheritance object DownloadPackagesCommand Implements ICommand IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Examples Using command: var args = new CommandLineArgs { CreatioUrl = \"https://creatio.example.com\" }; using var command = new DownloadPackagesCommand(args); var result = await command.Execute(); Remarks Parallel package downloads Automatic retries Auth cookie management Constructors DownloadPackagesCommand(IHttpClientFactory, IOptions<CommandLineArgs>) Initializes download command with configuration and HTTP client. public DownloadPackagesCommand(IHttpClientFactory factory, IOptions<CommandLineArgs> args) Parameters factory IHttpClientFactory HttpClientFactory to create HttpClient args IOptions<CommandLineArgs> Command line arguments containing URLs and credentials Remarks Creates shared HttpClient for downloads Sets up output directory under repo path Configures auth cookies and headers Exceptions ArgumentNullException Args is null Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Execute() Downloads packages defined in workspace settings asynchronously with error handling and retries. public ErrorOr<Success> Execute() Returns ErrorOr<Success> Success or list of errors encountered during package downloads. Remarks Parallel downloads based on processor count 3 retry attempts with exponential backoff Thread-safe error collection Exceptions FileNotFoundException Workspace settings file not found."
  },
  "consolegit/ConsoleGit.Commands.ErrorCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.ErrorCommand.html",
    "title": "Class ErrorCommand | AtfTide",
    "summary": "Class ErrorCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public sealed class ErrorCommand : ICommand, IDisposable Inheritance object ErrorCommand Implements ICommand IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ErrorCommand(CommandLineArgs) public ErrorCommand(CommandLineArgs args) Parameters args CommandLineArgs Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Execute() public ErrorOr<Success> Execute() Returns ErrorOr<Success>"
  },
  "consolegit/ConsoleGit.Commands.GetBranchesCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.GetBranchesCommand.html",
    "title": "Class GetBranchesCommand | AtfTide",
    "summary": "Class GetBranchesCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Pushes the specified branch to the remote repository. public class GetBranchesCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand GetBranchesCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.Logger BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.GetAccessPermissionsForFolder(string) BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetBranchesCommand(CommandLineArgs, IWebSocketLogger) Pushes the specified branch to the remote repository. public GetBranchesCommand(CommandLineArgs args, IWebSocketLogger logger) Parameters args CommandLineArgs Arguments logger IWebSocketLogger See Also https://github.com/libgit2/libgit2sharp/wiki/git-branch Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success> See Also https://github.com/libgit2/libgit2sharp/wiki/git-branch"
  },
  "consolegit/ConsoleGit.Commands.GetChangedFilesCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.GetChangedFilesCommand.html",
    "title": "Class GetChangedFilesCommand | AtfTide",
    "summary": "Class GetChangedFilesCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Prints to console changes in index and working directory public class GetChangedFilesCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand GetChangedFilesCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.Logger BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.GetAccessPermissionsForFolder(string) BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetChangedFilesCommand(CommandLineArgs, IWebSocketLogger) Prints to console changes in index and working directory public GetChangedFilesCommand(CommandLineArgs args, IWebSocketLogger logger) Parameters args CommandLineArgs logger IWebSocketLogger See Also libgit2sharp Wiki Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success> See Also libgit2sharp Wiki"
  },
  "consolegit/ConsoleGit.Commands.GetDiffCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.GetDiffCommand.html",
    "title": "Class GetDiffCommand | AtfTide",
    "summary": "Class GetDiffCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Prints to console changes in index and working directory public class GetDiffCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand GetDiffCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.Logger BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.GetAccessPermissionsForFolder(string) BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetDiffCommand(CommandLineArgs, IWebSocketLogger) Prints to console changes in index and working directory public GetDiffCommand(CommandLineArgs args, IWebSocketLogger logger) Parameters args CommandLineArgs logger IWebSocketLogger See Also libgit2sharp Wiki Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success> See Also libgit2sharp Wiki"
  },
  "consolegit/ConsoleGit.Commands.ICommand.html": {
    "href": "consolegit/ConsoleGit.Commands.ICommand.html",
    "title": "Interface ICommand | AtfTide",
    "summary": "Interface ICommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public interface ICommand : IDisposable Inherited Members IDisposable.Dispose() Methods Execute() ErrorOr<Success> Execute() Returns ErrorOr<Success>"
  },
  "consolegit/ConsoleGit.Commands.MyBranch.html": {
    "href": "consolegit/ConsoleGit.Commands.MyBranch.html",
    "title": "Class MyBranch | AtfTide",
    "summary": "Class MyBranch Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public class MyBranch Inheritance object MyBranch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string"
  },
  "consolegit/ConsoleGit.Commands.PullCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.PullCommand.html",
    "title": "Class PullCommand | AtfTide",
    "summary": "Class PullCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public class PullCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand PullCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.Logger BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.GetAccessPermissionsForFolder(string) BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PullCommand(CommandLineArgs, IWebSocketLogger) public PullCommand(CommandLineArgs args, IWebSocketLogger logger) Parameters args CommandLineArgs logger IWebSocketLogger Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success>"
  },
  "consolegit/ConsoleGit.Commands.PushCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.PushCommand.html",
    "title": "Class PushCommand | AtfTide",
    "summary": "Class PushCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Pushes the specified branch to the remote repository. public class PushCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand PushCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.Logger BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.GetAccessPermissionsForFolder(string) BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PushCommand(CommandLineArgs, IWebSocketLogger) Pushes the specified branch to the remote repository. public PushCommand(CommandLineArgs args, IWebSocketLogger logger) Parameters args CommandLineArgs Arguments logger IWebSocketLogger See Also https://github.com/libgit2/libgit2sharp/wiki/git-branch Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success> See Also https://github.com/libgit2/libgit2sharp/wiki/git-branch"
  },
  "consolegit/ConsoleGit.Commands.html": {
    "href": "consolegit/ConsoleGit.Commands.html",
    "title": "Namespace ConsoleGit.Commands | AtfTide",
    "summary": "Namespace ConsoleGit.Commands Classes AddAllCommand Stage all working directory changes BaseRepositoryCommand BranchesCommandResponse CheckoutCommand CloneCommand CommitCommand Make a commit to a non-bare repository DiscardFilesCommand Prints to console changes in index and working directory DownloadPackagesCommand Downloads packages defined in workspace settings from Creatio. ErrorCommand GetBranchesCommand Pushes the specified branch to the remote repository. GetChangedFilesCommand Prints to console changes in index and working directory GetDiffCommand Prints to console changes in index and working directory MyBranch PullCommand PushCommand Pushes the specified branch to the remote repository. Interfaces ICommand"
  },
  "consolegit/ConsoleGit.Common.CommonFunctions.html": {
    "href": "consolegit/ConsoleGit.Common.CommonFunctions.html",
    "title": "Class CommonFunctions | AtfTide",
    "summary": "Class CommonFunctions Namespace ConsoleGit.Common Assembly ConsoleGit.dll public static class CommonFunctions Inheritance object CommonFunctions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Retry(Action, int, TimeSpan?) Executes an action with retry logic, attempting the operation multiple times before giving up. public static ErrorOr<Success> Retry(Action action, int retryCount = 3, TimeSpan? delay = null) Parameters action Action The action to execute. retryCount int The maximum number of retry attempts. Defaults to 3. delay TimeSpan? The time to wait between retry attempts. If not specified, defaults to 1 second. Returns ErrorOr<Success> A Success result if the action succeeds, or a Failure with error code \"RETRY_COUNT_EXCEEDED\" if all retry attempts fail. Exceptions ArgumentNullException Thrown when action is null. ArgumentOutOfRangeException Thrown when retryCount is less than or equal to 0. RetryAsync(Func<Task>, int, TimeSpan?) Executes an asynchronous action with retry logic, attempting the operation multiple times before giving up. public static Task<ErrorOr<Success>> RetryAsync(Func<Task> action, int retryCount = 3, TimeSpan? delay = null) Parameters action Func<Task> The asynchronous action to execute. retryCount int The maximum number of retry attempts. Defaults to 3. delay TimeSpan? The time to wait between retry attempts. If not specified, defaults to 1 second. Returns Task<ErrorOr<Success>> A Task containing a Success result if the action succeeds, or a Failure with error code \"RETRY_COUNT_EXCEEDED\" if all retry attempts fail. Exceptions ArgumentNullException Thrown when action is null. ArgumentOutOfRangeException Thrown when retryCount is less than or equal to 0."
  },
  "consolegit/ConsoleGit.Common.html": {
    "href": "consolegit/ConsoleGit.Common.html",
    "title": "Namespace ConsoleGit.Common | AtfTide",
    "summary": "Namespace ConsoleGit.Common Classes CommonFunctions"
  },
  "consolegit/ConsoleGit.ConfiguredHttpClient.LoginHandler.html": {
    "href": "consolegit/ConsoleGit.ConfiguredHttpClient.LoginHandler.html",
    "title": "Class LoginHandler | AtfTide",
    "summary": "Class LoginHandler Namespace ConsoleGit.ConfiguredHttpClient Assembly ConsoleGit.dll public class LoginHandler : DelegatingHandler, IDisposable Inheritance object HttpMessageHandler DelegatingHandler LoginHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.Send(HttpRequestMessage, CancellationToken) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginHandler(IOptions<CommandLineArgs>, CookieContainer) public LoginHandler(IOptions<CommandLineArgs> args, CookieContainer cookieContainer) Parameters args IOptions<CommandLineArgs> cookieContainer CookieContainer Methods SendAsync(HttpRequestMessage, CancellationToken) Sends an HTTP request to the inner handler to send to the server as an asynchronous operation. protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters request HttpRequestMessage The HTTP request message to send to the server. cancellationToken CancellationToken A cancellation token to cancel operation. Returns Task<HttpResponseMessage> The task object representing the asynchronous operation. Exceptions ArgumentNullException The request was null."
  },
  "consolegit/ConsoleGit.ConfiguredHttpClient.LoginRequest.html": {
    "href": "consolegit/ConsoleGit.ConfiguredHttpClient.LoginRequest.html",
    "title": "Class LoginRequest | AtfTide",
    "summary": "Class LoginRequest Namespace ConsoleGit.ConfiguredHttpClient Assembly ConsoleGit.dll public record LoginRequest : IEquatable<LoginRequest> Inheritance object LoginRequest Implements IEquatable<LoginRequest> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginRequest(string, string) public LoginRequest(string UserName, string UserPassword) Parameters UserName string UserPassword string Properties UserName [JsonPropertyName(\"UserName\")] public string UserName { get; init; } Property Value string UserPassword [JsonPropertyName(\"UserPassword\")] public string UserPassword { get; init; } Property Value string"
  },
  "consolegit/ConsoleGit.ConfiguredHttpClient.MyHandler.html": {
    "href": "consolegit/ConsoleGit.ConfiguredHttpClient.MyHandler.html",
    "title": "Class MyHandler | AtfTide",
    "summary": "Class MyHandler Namespace ConsoleGit.ConfiguredHttpClient Assembly ConsoleGit.dll public class MyHandler : DelegatingHandler, IDisposable Inheritance object HttpMessageHandler DelegatingHandler MyHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.Send(HttpRequestMessage, CancellationToken) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SendAsync(HttpRequestMessage, CancellationToken) Sends an HTTP request to the inner handler to send to the server as an asynchronous operation. protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters request HttpRequestMessage The HTTP request message to send to the server. cancellationToken CancellationToken A cancellation token to cancel operation. Returns Task<HttpResponseMessage> The task object representing the asynchronous operation. Exceptions ArgumentNullException The request was null."
  },
  "consolegit/ConsoleGit.ConfiguredHttpClient.html": {
    "href": "consolegit/ConsoleGit.ConfiguredHttpClient.html",
    "title": "Namespace ConsoleGit.ConfiguredHttpClient | AtfTide",
    "summary": "Namespace ConsoleGit.ConfiguredHttpClient Classes LoginHandler LoginRequest MyHandler"
  },
  "consolegit/ConsoleGit.Dto.AppJsonSerializerContext.html": {
    "href": "consolegit/ConsoleGit.Dto.AppJsonSerializerContext.html",
    "title": "Class AppJsonSerializerContext | AtfTide",
    "summary": "Class AppJsonSerializerContext Namespace ConsoleGit.Dto Assembly ConsoleGit.dll [JsonSerializable(typeof(string[]))] [JsonSerializable(typeof(JsonElement))] [JsonSerializable(typeof(WorkspaceSettings))] [JsonSerializable(typeof(BranchesCommandResponse))] [JsonSerializable(typeof(MyBranch))] public class AppJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Inheritance object JsonSerializerContext AppJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppJsonSerializerContext() public AppJsonSerializerContext() AppJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. public AppJsonSerializerContext(JsonSerializerOptions options) Parameters options JsonSerializerOptions The run time provided options for the context instance. Properties BranchesCommandResponse Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<BranchesCommandResponse> BranchesCommandResponse { get; } Property Value JsonTypeInfo<BranchesCommandResponse> Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. public static AppJsonSerializerContext Default { get; } Property Value AppJsonSerializerContext GeneratedSerializerOptions The source-generated options associated with this context. protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value JsonSerializerOptions JsonElement Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<JsonElement> JsonElement { get; } Property Value JsonTypeInfo<JsonElement> ListMyBranch Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<List<MyBranch>> ListMyBranch { get; } Property Value JsonTypeInfo<List<MyBranch>> MyBranch Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<MyBranch> MyBranch { get; } Property Value JsonTypeInfo<MyBranch> String Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string> String { get; } Property Value JsonTypeInfo<string> StringArray Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string[]> StringArray { get; } Property Value JsonTypeInfo<string[]> WorkspaceSettings Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<WorkspaceSettings> WorkspaceSettings { get; } Property Value JsonTypeInfo<WorkspaceSettings> Methods GetTypeInfo(Type) Gets metadata for the specified type. public override JsonTypeInfo? GetTypeInfo(Type type) Parameters type Type The type to fetch metadata for. Returns JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type."
  },
  "consolegit/ConsoleGit.Dto.WorkspaceSettings.html": {
    "href": "consolegit/ConsoleGit.Dto.WorkspaceSettings.html",
    "title": "Class WorkspaceSettings | AtfTide",
    "summary": "Class WorkspaceSettings Namespace ConsoleGit.Dto Assembly ConsoleGit.dll public record WorkspaceSettings : IEquatable<WorkspaceSettings> Inheritance object WorkspaceSettings Implements IEquatable<WorkspaceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WorkspaceSettings(string[], string) public WorkspaceSettings(string[] Packages, string ApplicationVersion) Parameters Packages string[] ApplicationVersion string Properties ApplicationVersion [JsonPropertyName(\"ApplicationVersion\")] public string ApplicationVersion { get; init; } Property Value string Packages [JsonPropertyName(\"Packages\")] public string[] Packages { get; init; } Property Value string[]"
  },
  "consolegit/ConsoleGit.Dto.html": {
    "href": "consolegit/ConsoleGit.Dto.html",
    "title": "Namespace ConsoleGit.Dto | AtfTide",
    "summary": "Namespace ConsoleGit.Dto Classes AppJsonSerializerContext WorkspaceSettings"
  },
  "consolegit/ConsoleGit.Program.html": {
    "href": "consolegit/ConsoleGit.Program.html",
    "title": "Class Program | AtfTide",
    "summary": "Class Program Namespace ConsoleGit Assembly ConsoleGit.dll public static class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Main(string[]) public static Task<int> Main(string[] args) Parameters args string[] Returns Task<int>"
  },
  "consolegit/ConsoleGit.Services.EventModel.html": {
    "href": "consolegit/ConsoleGit.Services.EventModel.html",
    "title": "Class EventModel | AtfTide",
    "summary": "Class EventModel Namespace ConsoleGit.Services Assembly ConsoleGit.dll public record EventModel : IEquatable<EventModel> Inheritance object EventModel Implements IEquatable<EventModel> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EventModel(MessageType, string) public EventModel(MessageType messageType, string message) Parameters messageType MessageType message string Properties CommandName [JsonPropertyName(\"CommandName\")] public string CommandName { get; init; } Property Value string Content [JsonPropertyName(\"Content\")] public string Content { get; init; } Property Value string Sender [JsonPropertyName(\"Sender\")] public string Sender { get; init; } Property Value string Methods ToJson() public string ToJson() Returns string"
  },
  "consolegit/ConsoleGit.Services.IWebSocketLogger.html": {
    "href": "consolegit/ConsoleGit.Services.IWebSocketLogger.html",
    "title": "Interface IWebSocketLogger | AtfTide",
    "summary": "Interface IWebSocketLogger Namespace ConsoleGit.Services Assembly ConsoleGit.dll public interface IWebSocketLogger Methods LogAsync(MessageType, string) Task LogAsync(MessageType messageType, string message) Parameters messageType MessageType message string Returns Task"
  },
  "consolegit/ConsoleGit.Services.MessageType.html": {
    "href": "consolegit/ConsoleGit.Services.MessageType.html",
    "title": "Enum MessageType | AtfTide",
    "summary": "Enum MessageType Namespace ConsoleGit.Services Assembly ConsoleGit.dll public enum MessageType Fields ERR = 1 INF = 0 WAR = 2"
  },
  "consolegit/ConsoleGit.Services.WebSocketLogger.html": {
    "href": "consolegit/ConsoleGit.Services.WebSocketLogger.html",
    "title": "Class WebSocketLogger | AtfTide",
    "summary": "Class WebSocketLogger Namespace ConsoleGit.Services Assembly ConsoleGit.dll public class WebSocketLogger : IWebSocketLogger Inheritance object WebSocketLogger Implements IWebSocketLogger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WebSocketLogger(IHttpClientFactory, IOptions<CommandLineArgs>) public WebSocketLogger(IHttpClientFactory factory, IOptions<CommandLineArgs> args) Parameters factory IHttpClientFactory args IOptions<CommandLineArgs> Methods LogAsync(MessageType, string) public Task LogAsync(MessageType messageType, string message) Parameters messageType MessageType message string Returns Task"
  },
  "consolegit/ConsoleGit.Services.html": {
    "href": "consolegit/ConsoleGit.Services.html",
    "title": "Namespace ConsoleGit.Services | AtfTide",
    "summary": "Namespace ConsoleGit.Services Classes EventModel WebSocketLogger Interfaces IWebSocketLogger Enums MessageType"
  },
  "consolegit/ConsoleGit.html": {
    "href": "consolegit/ConsoleGit.html",
    "title": "Namespace ConsoleGit | AtfTide",
    "summary": "Namespace ConsoleGit Classes CommandLineArgs Program"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | AtfTide",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | AtfTide",
    "summary": "Introduction Tech Stack Tide is a Creatio Application wrapped in a clio workspace. The main artifact is AtfTIDE package. Tide enables execution of git commands from Creatio Interface. Solution consists of: Creatio Application Console Git AtfTIDE package contains AtfTIDE/Files/exec/archive.zip file, which is an archive of Console Git release build. When AtfTIDE is installed: [ ] Archived is unzipped and copied to /conf/consolegit folder of Creatio (see: /WebServices/Tide/InstallConsoleGit) [x] Clio installed from Nuget on first webapp restart (see AppEventListener) InstallConsoleGit Creatio Application Console Git ConsoleGit is a .NET8 (self-contained) console application that acts as a bridge between the Creatio interface and the underlying Git functionality. It receives commands from Creatio, executes corresponding Git operations using the LibGit2Sharp library, and returns results in a structured format. The project handles various Git actions such as cloning, committing, pushing, pulling, and status checks, enabling seamless integration of Git workflows within the Creatio environment."
  },
  "gitabstractions/GitAbstraction.ChangedFile.html": {
    "href": "gitabstractions/GitAbstraction.ChangedFile.html",
    "title": "Class ChangedFile | AtfTide",
    "summary": "Class ChangedFile Namespace GitAbstraction Assembly GitAbstraction.dll public class ChangedFile Inheritance object ChangedFile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChangedFile(string, string) public ChangedFile(string path, string status) Parameters path string status string Properties Path [JsonPropertyName(\"Path\")] public string Path { get; set; } Property Value string Status [JsonPropertyName(\"Status\")] public string Status { get; set; } Property Value string"
  },
  "gitabstractions/GitAbstraction.ExToErrorParser.html": {
    "href": "gitabstractions/GitAbstraction.ExToErrorParser.html",
    "title": "Class ExToErrorParser | AtfTide",
    "summary": "Class ExToErrorParser Namespace GitAbstraction Assembly GitAbstraction.dll public static class ExToErrorParser Inheritance object ExToErrorParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToError(Exception) public static Error ToError(this Exception e) Parameters e Exception Returns Error"
  },
  "gitabstractions/GitAbstraction.GitRepository.html": {
    "href": "gitabstractions/GitAbstraction.GitRepository.html",
    "title": "Class GitRepository | AtfTide",
    "summary": "Class GitRepository Namespace GitAbstraction Assembly GitAbstraction.dll public sealed class GitRepository : IDisposable Inheritance object GitRepository Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties AllBranches public BranchCollection AllBranches { get; } Property Value BranchCollection RepoDirectory public IDirectoryInfo RepoDirectory { get; } Property Value IDirectoryInfo Methods AddAll() Stage all working directory changes Adds all files to the staging area. public ErrorOr<Success> AddAll() Returns ErrorOr<Success> Remarks git add --all . See Also libgit2sharp Wiki git add AddFile(string) Stage (add) a file in a repository that is checked out to the file system: public ErrorOr<Success> AddFile(string filePath) Parameters filePath string Filepath to a file with changes, relative to .git directory Returns ErrorOr<Success> See Also libgit2sharp Wiki git add CheckoutBranch(string) Checkout to existing branch by name public ErrorOr<Success> CheckoutBranch(string branchName) Parameters branchName string Branch name to checkout Returns ErrorOr<Success> See Also libgit2sharp Wiki git checkout <code>branch</code> Clone() Clones the repository to the specified directory. public ErrorOr<string> Clone() Returns ErrorOr<string> An ErrorOr.ErrorOr<TValue> containing the path to the cloned repository or an error. See Also libgit2sharp Wiki Clone Commit(string, string, string) Make a commit to a non-bare repository public ErrorOr<Commit> Commit(string name, string email, string message) Parameters name string Committer name email string Committer email message string Commit message Returns ErrorOr<Commit> Commit(string, string, string) See Also libgit2sharp Wiki git commit CreateBranch(string, Commit) Creates a new branch pointing at the current HEAD. public ErrorOr<Branch> CreateBranch(string branchName, Commit tip = null) Parameters branchName string The name of the new branch. tip Commit Returns ErrorOr<Branch> An ErrorOr.ErrorOr<TValue> indicating success or failure. See Also libgit2sharp Wiki CreateBranchAndPublish(string) public ErrorOr<Success> CreateBranchAndPublish(string branchName) Parameters branchName string Returns ErrorOr<Success> DeleteBranch(string) public ErrorOr<Success> DeleteBranch(string branchName) Parameters branchName string Returns ErrorOr<Success> DiscardFile(string) public void DiscardFile(string filePath) Parameters filePath string Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Fetch() public ErrorOr<Success> Fetch() Returns ErrorOr<Success> ~GitRepository() protected ~GitRepository() GetChangedFiles() Return changes in working directory public ErrorOr<List<ChangedFile>> GetChangedFiles() Returns ErrorOr<List<ChangedFile>> An ErrorOr.ErrorOr<TValue> indicating success or failure. GetCommits() public ErrorOr<IEnumerable<Commit>> GetCommits() Returns ErrorOr<IEnumerable<Commit>> GetDiff() Return changes in index and working directory public ErrorOr<string> GetDiff() Returns ErrorOr<string> An ErrorOr.ErrorOr<TValue> indicating success or failure. GetInstance(string, string, Uri, string) Gets an instance of the GitRepository class. public static GitRepository GetInstance(string username, string password, Uri gitUrl, string repoDirectory) Parameters username string The username for the repository credentials. password string The password for the repository credentials. gitUrl Uri The URL of the Git repository. repoDirectory string The directory where the repository will be cloned. Returns GitRepository A new instance of the GitRepository class. ListLocalBranches() Lists all local branches in the repository. public ErrorOr<IEnumerable<Branch>> ListLocalBranches() Returns ErrorOr<IEnumerable<Branch>> See Also libgit2sharp Wiki listing-branches PublishBranch(Branch) public ErrorOr<Success> PublishBranch(Branch branch) Parameters branch Branch Returns ErrorOr<Success> Pull() Pulls the latest changes from the remote repository and merges them into the local repository. public ErrorOr<MergeResult> Pull() Returns ErrorOr<MergeResult> An ErrorOr.ErrorOr<TValue> containing the result of the merge or an error. See Also libgit2sharp Wiki git-pull Push(Branch) Pushes the specified branch to the remote repository. public ErrorOr<Success> Push(Branch branch) Parameters branch Branch The branch to push. Returns ErrorOr<Success> An ErrorOr.ErrorOr<TValue> indicating success or failure. See Also libgit2sharp Wiki git-push Push(string) Pushes the specified branch to the remote repository. public ErrorOr<Success> Push(string branchName) Parameters branchName string The branch to push. Returns ErrorOr<Success> An ErrorOr.ErrorOr<TValue> indicating success or failure. See Also libgit2sharp Wiki git-push"
  },
  "gitabstractions/GitAbstraction.html": {
    "href": "gitabstractions/GitAbstraction.html",
    "title": "Namespace GitAbstraction | AtfTide",
    "summary": "Namespace GitAbstraction Classes ChangedFile ExToErrorParser GitRepository"
  },
  "index.html": {
    "href": "index.html",
    "title": "T.I.D.E. | AtfTide",
    "summary": "T.I.D.E. Team Integration Developer Environment for Creatio Developers \uD83D\uDE80 About T.I.D.E. T.I.D.E. is a powerful application designed to bridge the gap for NOCODE developers working in Creatio. It empowers teams to seamlessly integrate with GIT directly from the Creatio environment, eliminating the need for additional external tools. \uD83C\uDF1F Key Features Git Integration Made Easy: Simplify version control for NOCODE developers within Creatio. Streamlined Workflow: Perform essential Git operations like commits, branches, and merges without leaving the Creatio interface. No Additional Tools Required: Focus on development without juggling multiple platforms. Team Collaboration: Enhance team productivity with integrated version control tailored for NOCODE workflows. \uD83C\uDFAF Who Is It For? T.I.D.E. is built specifically for: NOCODE Developers: Simplifying Git usage in Creatio without technical complexity. Creatio Development Teams: Streamlining integration and collaboration workflows. Organizations: Optimizing development efficiency by reducing the need for external Git tools. \uD83D\uDCA1 Why Choose T.I.D.E.? Seamless integration into the Creatio ecosystem. Designed to meet the needs of NOCODE developers. Eliminates the learning curve of traditional Git tools. Boosts team productivity and collaboration. \uD83D\uDEE0️ How to Use Install T.I.D.E. into your Creatio environment. Configure Git settings directly in the application. Start managing your project with version control tools designed for simplicity. \uD83C\uDF0A Dive Into T.I.D.E. Ready to revolutionize your Creatio development workflow? T.I.D.E. is your one-stop solution for effortless Git integration and team collaboration. Make waves in development with T.I.D.E. \uD83C\uDF0A! Tech Stack Tide is a Creatio Application wrapped in a clio workspace. Main artifact is AtfTIDE package. This package brings the TIDE application to Creatio. To execute some Git or clio commands, TIDE brings binaries along for the ride. For example, when you call git clone from TIDE, it will use the ConsoleGit to execute the command."
  }
}