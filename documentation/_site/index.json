{
  "BusinessProcess/AtfProcess_LoadWorkspaceFromGit.html": {
    "href": "BusinessProcess/AtfProcess_LoadWorkspaceFromGit.html",
    "title": "Load workspace from Git | AtfTide",
    "keywords": "Load workspace from Git Business process to load workspace from git, and then installs is on Creatio."
  },
  "UserTask/AtfProcessUserTask_CloneRepository.html": {
    "href": "UserTask/AtfProcessUserTask_CloneRepository.html",
    "title": "Clone Repository UserTask | AtfTide",
    "keywords": "Clone Repository UserTask This UserTask is part of the Load workspace from Git and is used to clone a repository."
  },
  "api/AtfTIDE.Commands.html": {
    "href": "api/AtfTIDE.Commands.html",
    "title": "Enum Commands | AtfTide",
    "keywords": "Enum Commands Namespace AtfTIDE Assembly AtfTIDE.dll Defines supported git operations public enum Commands Fields AddAll = 1 Checkout = 6 Clone = 0 Commit = 4 DownloadPackages = 5 Pull = 3 Push = 2"
  },
  "api/AtfTIDE.ConsoleGit.html": {
    "href": "api/AtfTIDE.ConsoleGit.html",
    "title": "Class ConsoleGit | AtfTide",
    "keywords": "Class ConsoleGit Namespace AtfTIDE Assembly AtfTIDE.dll [DefaultBinding(typeof(IConsoleGit), Name = \"AtfTIDE.ConsoleGit\")] public class ConsoleGit : IConsoleGit Inheritance object ConsoleGit Implements IConsoleGit Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Execute(ConsoleGitArgs) Executes a git command with the specified arguments public ConsoleGitResult Execute(ConsoleGitArgs args) Parameters args ConsoleGitArgs Git command arguments and configuration Returns ConsoleGitResult Result containing exit code and command output or error message"
  },
  "api/AtfTIDE.ConsoleGitArgs.html": {
    "href": "api/AtfTIDE.ConsoleGitArgs.html",
    "title": "Class ConsoleGitArgs | AtfTide",
    "keywords": "Class ConsoleGitArgs Namespace AtfTIDE Assembly AtfTIDE.dll Represents configuration and arguments for git operations public class ConsoleGitArgs Inheritance object ConsoleGitArgs Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Environment Variables Generated: Command: Git command to execute GitUrl: Repository URL UserName: Git username Password: Git password/token RepoDir: Repository directory CommitMessage: Commit message ProcessTimeoutMs: Process timeout in milliseconds Properties ASPXAUTH public string ASPXAUTH { get; set; } Property Value string BPMCSRF public string BPMCSRF { get; set; } Property Value string BPMLOADER public string BPMLOADER { get; set; } Property Value string BPMSESSIONID public string BPMSESSIONID { get; set; } Property Value string Command Git command to execute public Commands Command { get; set; } Property Value Commands Remarks Supported commands are defined in the Commands enum CommitAuthorEmail Email of the author to be used in the commit public string CommitAuthorEmail { get; set; } Property Value string Remarks Required for Commit operations. Should match the git config user.email format Must be a valid email address CommitAuthorName Name of the author to be used in the commit public string CommitAuthorName { get; set; } Property Value string Remarks Required for Commit operations. Should match the git config user.name format CommitMessage Git commit message public string CommitMessage { get; set; } Property Value string CreatioUrl public Uri CreatioUrl { get; set; } Property Value Uri GitUrl Repository URL (HTTPS or SSH) public string GitUrl { get; set; } Property Value string Password Repository password or access token public string Password { get; set; } Property Value string Remarks For security, prefer using access tokens over passwords Token should have minimal required permissions ProcessTimeoutMs Maximum time to wait for the process to complete public int ProcessTimeoutMs { get; set; } Property Value int RepoDir Repository Folder path public string RepoDir { get; set; } Property Value string UserName Repository User name public string UserName { get; set; } Property Value string UserType public string UserType { get; set; } Property Value string Methods ToDictionary() Converts all public properties to environment variables dictionary public Dictionary<string, string> ToDictionary() Returns Dictionary<string, string> Dictionary of environment variables Remarks Skips null values Formats dates as ISO 8601 Uses invariant culture for formatting numbers Empty strings are included (unlike null values)"
  },
  "api/AtfTIDE.ConsoleGitResult.html": {
    "href": "api/AtfTIDE.ConsoleGitResult.html",
    "title": "Class ConsoleGitResult | AtfTide",
    "keywords": "Class ConsoleGitResult Namespace AtfTIDE Assembly AtfTIDE.dll Represents the result of a git command execution public class ConsoleGitResult Inheritance object ConsoleGitResult Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Provides both success and error information: ExitCode: 0 for success, non-zero for errors Output: Contains command output for successful operations ErrorMessage: Contains error details for failed operations Constructors ConsoleGitResult(int, string) Creates a new instance of ConsoleGitResult public ConsoleGitResult(int exitCode, string output) Parameters exitCode int Process exit code (0 for success) output string Process output or error message Properties ErrorMessage Console output captured from the process's Error output. public string ErrorMessage { get; } Property Value string ExitCode Exit code of ConsoleGit process public int ExitCode { get; } Property Value int Output Console output captured from the process's standard output. public string Output { get; } Property Value string"
  },
  "api/AtfTIDE.HelperFunctions.html": {
    "href": "api/AtfTIDE.HelperFunctions.html",
    "title": "Class HelperFunctions | AtfTide",
    "keywords": "Class HelperFunctions Namespace AtfTIDE Assembly AtfTIDE.dll public static class HelperFunctions Inheritance object HelperFunctions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields ClioArguments public static Dictionary<Guid, Dictionary<string, string>> ClioArguments Field Value Dictionary<Guid, Dictionary<string, string>> Methods AddClioArgsForUser(Guid, Dictionary<string, string>) public static void AddClioArgsForUser(Guid userId, Dictionary<string, string> args) Parameters userId Guid args Dictionary<string, string> FetchRepositoryName(Guid, UserConnection) public static string FetchRepositoryName(Guid repositoryId, UserConnection userConnection = null) Parameters repositoryId Guid userConnection UserConnection Returns string GetConsoleGitPath() public static ErrorOr<FileInfo> GetConsoleGitPath() Returns ErrorOr<FileInfo> GetRepositoryDirectory(string) public static DirectoryInfo GetRepositoryDirectory(string repositoryName) Parameters repositoryName string Returns DirectoryInfo GetRepositoryInfo(Guid, UserConnection) public static RepositoryInfo GetRepositoryInfo(Guid repositoryId, UserConnection userConnection = null) Parameters repositoryId Guid userConnection UserConnection Returns RepositoryInfo"
  },
  "api/AtfTIDE.IConsoleGit.html": {
    "href": "api/AtfTIDE.IConsoleGit.html",
    "title": "Interface IConsoleGit | AtfTide",
    "keywords": "Interface IConsoleGit Namespace AtfTIDE Assembly AtfTIDE.dll Provides git operations through a console application wrapper public interface IConsoleGit Remarks Executes git commands through environment variables Handles process management and timeouts Provides error handling and output capturing Implementations must be thread-safe Must handle concurrent git operations Must capture and return git errors Must handle process timeouts Must clean up resources properly Methods Execute(ConsoleGitArgs) Executes a git command with the specified arguments ConsoleGitResult Execute(ConsoleGitArgs args) Parameters args ConsoleGitArgs Git command arguments and configuration Returns ConsoleGitResult Result containing exit code and command output or error message"
  },
  "api/AtfTIDE.RepositoryInfo.html": {
    "href": "api/AtfTIDE.RepositoryInfo.html",
    "title": "Class RepositoryInfo | AtfTide",
    "keywords": "Class RepositoryInfo Namespace AtfTIDE Assembly AtfTIDE.dll public class RepositoryInfo Inheritance object RepositoryInfo Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors RepositoryInfo(string, string, string, string) public RepositoryInfo(string name, string gitUrl, string userName, string password) Parameters name string gitUrl string userName string password string Properties GitUrl public string GitUrl { get; } Property Value string Name public string Name { get; } Property Value string Password public string Password { get; } Property Value string UserName public string UserName { get; } Property Value string"
  },
  "api/AtfTIDE.WebServices.Tide.html": {
    "href": "api/AtfTIDE.WebServices.Tide.html",
    "title": "Class Tide | AtfTide",
    "keywords": "Class Tide Namespace AtfTIDE.WebServices Assembly AtfTIDE.dll Provides web service functionality for the AtfTIDE system with ConsoleGit.exe integration capabilities. This service operates in read-only mode with respect to session state. [ServiceContract] [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Required)] public class Tide : BaseService, IReadOnlySessionState, IRequiresSessionState Inheritance object BaseService Tide Implements IReadOnlySessionState IRequiresSessionState Inherited Members BaseService.GetUserConnection() BaseService.UserIsAuthenticated BaseService.AppConnection BaseService.UserConnection BaseService.Cache BaseService.HttpContextAccessor object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks This service class implements WCF service contract Requires ASP.NET compatibility mode Inherits from BaseService and implements IReadOnlySessionState for secure session handling Methods CaptureClioArgs() Captures and processes arguments required for ConsoleGit.exe functionality. [OperationContract] [WebInvoke(Method = \"GET\", RequestFormat = WebMessageFormat.Json, BodyStyle = WebMessageBodyStyle.Bare, ResponseFormat = WebMessageFormat.Json)] public void CaptureClioArgs() Examples This endpoint can be called via a GET request: GET rest/Tide/CaptureClioArgs HTTP/1.1 Remarks This endpoint is called from AtfTIDE_FormPage before start of any Business Process. It captures system and user information to be used in UserTasks of a process. This endpoint performs the following operations: Operation Steps Detailed process flow Request Retrieval Retrieves the current HTTP request and its cookies System Information Collects system information including the base application URL Framework Detection Determines if the system is running in framework mode Data Storage Stores the collected information for the current user"
  },
  "api/AtfTIDE.WebServices.html": {
    "href": "api/AtfTIDE.WebServices.html",
    "title": "Namespace AtfTIDE.WebServices | AtfTide",
    "keywords": "Namespace AtfTIDE.WebServices Classes Tide Provides web service functionality for the AtfTIDE system with ConsoleGit.exe integration capabilities. This service operates in read-only mode with respect to session state."
  },
  "api/AtfTIDE.html": {
    "href": "api/AtfTIDE.html",
    "title": "Namespace AtfTIDE | AtfTide",
    "keywords": "Namespace AtfTIDE Classes ConsoleGit ConsoleGitArgs Represents configuration and arguments for git operations ConsoleGitResult Represents the result of a git command execution HelperFunctions RepositoryInfo Interfaces IConsoleGit Provides git operations through a console application wrapper Enums Commands Defines supported git operations"
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_CloneRepository.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_CloneRepository.html",
    "title": "Class AtfProcessUserTask_CloneRepository | AtfTide",
    "keywords": "Class AtfProcessUserTask_CloneRepository Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll [DesignModeProperty(Name = \"ErrorMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"0988a3e0cf0d4d9d9e243dcdd5606e3c\", CaptionResourceItem = \"Parameters.ErrorMessage.Caption\", DescriptionResourceItem = \"Parameters.ErrorMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"IsError\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"0988a3e0cf0d4d9d9e243dcdd5606e3c\", CaptionResourceItem = \"Parameters.IsError.Caption\", DescriptionResourceItem = \"Parameters.IsError.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"RepositoryFolderPath\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"0988a3e0cf0d4d9d9e243dcdd5606e3c\", CaptionResourceItem = \"Parameters.RepositoryFolderPath.Caption\", DescriptionResourceItem = \"Parameters.RepositoryFolderPath.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Repository\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"0988a3e0cf0d4d9d9e243dcdd5606e3c\", CaptionResourceItem = \"Parameters.Repository.Caption\", DescriptionResourceItem = \"Parameters.Repository.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Output\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"0988a3e0cf0d4d9d9e243dcdd5606e3c\", CaptionResourceItem = \"Parameters.Output.Caption\", DescriptionResourceItem = \"Parameters.Output.Caption\", UseSolutionStorage = true)] public class AtfProcessUserTask_CloneRepository : ProcessUserTask, IProcessDataSerializable Inheritance object ProcessFlowElement ProcessActivity ProcessUserTask AtfProcessUserTask_CloneRepository Implements IProcessDataSerializable Inherited Members ProcessUserTask.AfterInternalExecute() ProcessUserTask.OnExecuted(ProcessActivityAfterEventArgs) ProcessUserTask.OnCanceled() ProcessUserTask.AfterActivitySaveScriptExecute(Entity) ProcessUserTask.Get<T>(string) ProcessUserTask.Set<T>(string, T) ProcessUserTask.InternalInteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.CreateTempFile() ProcessUserTask.GetTempFile(Guid) ProcessUserTask.CreateUsageContext() ProcessUserTask.WritePropertiesData(DataWriter, bool) ProcessUserTask.GetPropertiesData(bool) ProcessUserTask.GetParameterValue(string) ProcessUserTask.GetParameterValue<TValue>(string, TValue) ProcessUserTask.FindParameterValuesByTag(Func<string, bool?>) ProcessUserTask.FindMappedEntityColumnMetaPaths(string) ProcessUserTask.GetRuntimeCaption() ProcessUserTask.InteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.SchemaManagerName ProcessUserTask.SchemaManager ProcessActivity.NeedBreakProcessExecuting(ProcessActivityAfterEventArgs) ProcessActivity.HasMapping(string) ProcessActivity.GetSchema(Guid) ProcessActivity.WriteProcessParameters() ProcessActivity.FindSchemaElement(Guid) ProcessActivity.ReadSerializableObject<T>(DataReader) ProcessActivity.WriteSerializableObject<T>(DataWriter, string, T) ProcessActivity.MeasureDuration(string) ProcessActivity.Assign(ProcessFlowElement) ProcessActivity.CreateFlowElementInstanceByType(Type, Process) ProcessActivity.WriteExecutionData(IProcessExecutionDataWriter) ProcessActivity.CloneShallow() ProcessActivity.ReadPropertiesData() ProcessActivity.WritePropertiesData() ProcessActivity.ReadPropertiesDataFromDB(UserConnection) ProcessActivity.ReadPropertiesDataFromMemory() ProcessActivity.WritePropertiesDataToMemory() ProcessActivity.CompleteExecuting(params object[]) ProcessActivity.CancelExecuting(params object[]) ProcessActivity.GetResultParameterAllValues(UserConnection, ProcessSchemaUserTask) ProcessActivity.GetExecutionData() ProcessActivity.GetResultParameterAllowedValues() ProcessActivity.GetResultAllowedValues() ProcessActivity.ExternalExecute(ProcessActivityAfterEventArgs) ProcessActivity.SerializeToString(object) ProcessActivity.DeserializeFromString<T>(string) ProcessActivity.GetLocalizableString(string, string) ProcessActivity.ConvertToProcessDataSourceFilters(Guid, string) ProcessActivity.FindSchemaElement() ProcessActivity.GetSchemaElement() ProcessActivity.GetIsReexecution() ProcessActivity.GetParameterValue(ProcessSchemaParameter) ProcessActivity.GetNotificationData() ProcessActivity.GetParameterValues() ProcessActivity.GetParameterValues(IEnumerable<ProcessSchemaParameter>) ProcessActivity.ProcessNotifier ProcessActivity.ProcessParameterStore ProcessActivity.NeedUserInteraction ProcessActivity.Owner ProcessActivity.SchemaUId ProcessActivity.OwnerUId ProcessActivity.UserConnection ProcessActivity.Schema ProcessActivity.Storage ProcessActivity.IsShownExecutionPage ProcessActivity.ProcessLane ProcessActivity.Compressor ProcessActivity.PerformerAssignmentOptions ProcessFlowElement.IdParameterName ProcessFlowElement.SysSchemaIdParameterName ProcessFlowElement.SysWorkspaceIdParameterName ProcessFlowElement.ParentIdParameterName ProcessFlowElement.CreatedOnParameterName ProcessFlowElement.CreatedByIdParameterName ProcessFlowElement.ModifiedOnParameterName ProcessFlowElement.ModifiedByIdParameterName ProcessFlowElement.StartDateParameterName ProcessFlowElement.CompleteDateParameterName ProcessFlowElement.SysProcessIdParameterName ProcessFlowElement.CaptionParameterName ProcessFlowElement.StatusIdParameterName ProcessFlowElement.TypeParameterName ProcessFlowElement.SchemaElementUIdParameterName ProcessFlowElement.SchemaUIdParameterName ProcessFlowElement.StatusParameterName ProcessFlowElement.OwnerIdParameterName ProcessFlowElement.ErrorDescriptionParameterName ProcessFlowElement.PropertiesDataParameterName ProcessFlowElement.GuidTypeName ProcessFlowElement.IntegerTypeName ProcessFlowElement.DateTimeTypeName ProcessFlowElement.TextTypeName ProcessFlowElement.Float1TypeName ProcessFlowElement.DurationInMinutesParameterName ProcessFlowElement.DurationInHoursParameterName ProcessFlowElement.DurationInDaysParameterName ProcessFlowElement.DurationInMillisecondsParameterName ProcessFlowElement.NodeIdParameterName ProcessFlowElement.UIdPropertyName ProcessFlowElement.NamePropertyName ProcessFlowElement.StatusPropertyName ProcessFlowElement.CompleteApplyingPropertiesDataValues() ProcessFlowElement.ReadSerializableObjectValue<T>(DataReader) ProcessFlowElement.WritePropertyValues(DataWriter) ProcessFlowElement.SetDurationQueryParameters(QueryParameterCollection) ProcessFlowElement.GetSchemaElement(Guid) ProcessFlowElement.SetPrivateFieldValue(string, object, object) ProcessFlowElement.ToString() ProcessFlowElement.ReadPropertiesData(DataReader) ProcessFlowElement.GetPropertiesData() ProcessFlowElement.WritePropertiesDataToDB(UserConnection) ProcessFlowElement.Execute(ProcessExecutingContext) ProcessFlowElement.TryGetPerformer(out Guid) ProcessFlowElement.WritePropertiesDataToOwner(DataWriter) ProcessFlowElement.ReadPropertiesDataFromOwner(DataReader) ProcessFlowElement.UseFlowEngineMode ProcessFlowElement.Log ProcessFlowElement.DateTimeProvider ProcessFlowElement.UId ProcessFlowElement.Name ProcessFlowElement.Caption ProcessFlowElement.Type ProcessFlowElement.SerializeToDB ProcessFlowElement.IsLogging ProcessFlowElement.IsProcess ProcessFlowElement.SchemaElementUId ProcessFlowElement.Status ProcessFlowElement.IsExecuted ProcessFlowElement.ExecutionResult ProcessFlowElement.LoopCounter ProcessFlowElement.CreatedInSchemaUId ProcessFlowElement.PreviousFlowElements ProcessFlowElement.ExecutedEventHandler ProcessFlowElement.StartDate ProcessFlowElement.Executed object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AtfProcessUserTask_CloneRepository(UserConnection) public AtfProcessUserTask_CloneRepository(UserConnection userConnection) Parameters userConnection UserConnection Properties ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool Output public virtual string Output { get; set; } Property Value string Repository public virtual Guid Repository { get; set; } Property Value Guid RepositoryFolderPath public virtual string RepositoryFolderPath { get; set; } Property Value string Methods ApplyPropertiesDataValues(DataReader) Applies state of the current process element. protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader Instance that provides sequential reading of data. InternalExecute(ProcessExecutingContext) Hey, this is what's running when the process is executed. protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Creatio will pass context to this method Returns bool Always true Remarks See Wiki WritePropertiesData(DataWriter) Writes state of the current process element. public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter Instance of the Terrasoft.Common.DataWriter type."
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_DownloadPackages.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_DownloadPackages.html",
    "title": "Class AtfProcessUserTask_DownloadPackages | AtfTide",
    "keywords": "Class AtfProcessUserTask_DownloadPackages Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll [DesignModeProperty(Name = \"ErrorMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"63ee21f56fab4a719eb3c7a5b44a63b8\", CaptionResourceItem = \"Parameters.ErrorMessage.Caption\", DescriptionResourceItem = \"Parameters.ErrorMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"IsError\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"63ee21f56fab4a719eb3c7a5b44a63b8\", CaptionResourceItem = \"Parameters.IsError.Caption\", DescriptionResourceItem = \"Parameters.IsError.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Output\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"63ee21f56fab4a719eb3c7a5b44a63b8\", CaptionResourceItem = \"Parameters.Output.Caption\", DescriptionResourceItem = \"Parameters.Output.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Repository\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"63ee21f56fab4a719eb3c7a5b44a63b8\", CaptionResourceItem = \"Parameters.Repository.Caption\", DescriptionResourceItem = \"Parameters.Repository.Caption\", UseSolutionStorage = true)] public class AtfProcessUserTask_DownloadPackages : ProcessUserTask, IProcessDataSerializable Inheritance object ProcessFlowElement ProcessActivity ProcessUserTask AtfProcessUserTask_DownloadPackages Implements IProcessDataSerializable Inherited Members ProcessUserTask.AfterInternalExecute() ProcessUserTask.OnExecuted(ProcessActivityAfterEventArgs) ProcessUserTask.OnCanceled() ProcessUserTask.AfterActivitySaveScriptExecute(Entity) ProcessUserTask.Get<T>(string) ProcessUserTask.Set<T>(string, T) ProcessUserTask.InternalInteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.CreateTempFile() ProcessUserTask.GetTempFile(Guid) ProcessUserTask.CreateUsageContext() ProcessUserTask.WritePropertiesData(DataWriter, bool) ProcessUserTask.GetPropertiesData(bool) ProcessUserTask.GetParameterValue(string) ProcessUserTask.GetParameterValue<TValue>(string, TValue) ProcessUserTask.FindParameterValuesByTag(Func<string, bool?>) ProcessUserTask.FindMappedEntityColumnMetaPaths(string) ProcessUserTask.GetRuntimeCaption() ProcessUserTask.InteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.SchemaManagerName ProcessUserTask.SchemaManager ProcessActivity.NeedBreakProcessExecuting(ProcessActivityAfterEventArgs) ProcessActivity.HasMapping(string) ProcessActivity.GetSchema(Guid) ProcessActivity.WriteProcessParameters() ProcessActivity.FindSchemaElement(Guid) ProcessActivity.ReadSerializableObject<T>(DataReader) ProcessActivity.WriteSerializableObject<T>(DataWriter, string, T) ProcessActivity.MeasureDuration(string) ProcessActivity.Assign(ProcessFlowElement) ProcessActivity.CreateFlowElementInstanceByType(Type, Process) ProcessActivity.WriteExecutionData(IProcessExecutionDataWriter) ProcessActivity.CloneShallow() ProcessActivity.ReadPropertiesData() ProcessActivity.WritePropertiesData() ProcessActivity.ReadPropertiesDataFromDB(UserConnection) ProcessActivity.ReadPropertiesDataFromMemory() ProcessActivity.WritePropertiesDataToMemory() ProcessActivity.GetResultParameterAllValues(UserConnection, ProcessSchemaUserTask) ProcessActivity.GetResultParameterAllowedValues() ProcessActivity.GetResultAllowedValues() ProcessActivity.ExternalExecute(ProcessActivityAfterEventArgs) ProcessActivity.SerializeToString(object) ProcessActivity.DeserializeFromString<T>(string) ProcessActivity.GetLocalizableString(string, string) ProcessActivity.ConvertToProcessDataSourceFilters(Guid, string) ProcessActivity.FindSchemaElement() ProcessActivity.GetSchemaElement() ProcessActivity.GetIsReexecution() ProcessActivity.GetParameterValue(ProcessSchemaParameter) ProcessActivity.GetParameterValues() ProcessActivity.GetParameterValues(IEnumerable<ProcessSchemaParameter>) ProcessActivity.ProcessNotifier ProcessActivity.ProcessParameterStore ProcessActivity.NeedUserInteraction ProcessActivity.Owner ProcessActivity.SchemaUId ProcessActivity.OwnerUId ProcessActivity.UserConnection ProcessActivity.Schema ProcessActivity.Storage ProcessActivity.IsShownExecutionPage ProcessActivity.ProcessLane ProcessActivity.Compressor ProcessActivity.PerformerAssignmentOptions ProcessFlowElement.IdParameterName ProcessFlowElement.SysSchemaIdParameterName ProcessFlowElement.SysWorkspaceIdParameterName ProcessFlowElement.ParentIdParameterName ProcessFlowElement.CreatedOnParameterName ProcessFlowElement.CreatedByIdParameterName ProcessFlowElement.ModifiedOnParameterName ProcessFlowElement.ModifiedByIdParameterName ProcessFlowElement.StartDateParameterName ProcessFlowElement.CompleteDateParameterName ProcessFlowElement.SysProcessIdParameterName ProcessFlowElement.CaptionParameterName ProcessFlowElement.StatusIdParameterName ProcessFlowElement.TypeParameterName ProcessFlowElement.SchemaElementUIdParameterName ProcessFlowElement.SchemaUIdParameterName ProcessFlowElement.StatusParameterName ProcessFlowElement.OwnerIdParameterName ProcessFlowElement.ErrorDescriptionParameterName ProcessFlowElement.PropertiesDataParameterName ProcessFlowElement.GuidTypeName ProcessFlowElement.IntegerTypeName ProcessFlowElement.DateTimeTypeName ProcessFlowElement.TextTypeName ProcessFlowElement.Float1TypeName ProcessFlowElement.DurationInMinutesParameterName ProcessFlowElement.DurationInHoursParameterName ProcessFlowElement.DurationInDaysParameterName ProcessFlowElement.DurationInMillisecondsParameterName ProcessFlowElement.NodeIdParameterName ProcessFlowElement.UIdPropertyName ProcessFlowElement.NamePropertyName ProcessFlowElement.StatusPropertyName ProcessFlowElement.CompleteApplyingPropertiesDataValues() ProcessFlowElement.ReadSerializableObjectValue<T>(DataReader) ProcessFlowElement.WritePropertyValues(DataWriter) ProcessFlowElement.SetDurationQueryParameters(QueryParameterCollection) ProcessFlowElement.GetSchemaElement(Guid) ProcessFlowElement.SetPrivateFieldValue(string, object, object) ProcessFlowElement.ToString() ProcessFlowElement.ReadPropertiesData(DataReader) ProcessFlowElement.GetPropertiesData() ProcessFlowElement.WritePropertiesDataToDB(UserConnection) ProcessFlowElement.Execute(ProcessExecutingContext) ProcessFlowElement.TryGetPerformer(out Guid) ProcessFlowElement.WritePropertiesDataToOwner(DataWriter) ProcessFlowElement.ReadPropertiesDataFromOwner(DataReader) ProcessFlowElement.UseFlowEngineMode ProcessFlowElement.Log ProcessFlowElement.DateTimeProvider ProcessFlowElement.UId ProcessFlowElement.Name ProcessFlowElement.Caption ProcessFlowElement.Type ProcessFlowElement.SerializeToDB ProcessFlowElement.IsLogging ProcessFlowElement.IsProcess ProcessFlowElement.SchemaElementUId ProcessFlowElement.Status ProcessFlowElement.IsExecuted ProcessFlowElement.ExecutionResult ProcessFlowElement.LoopCounter ProcessFlowElement.CreatedInSchemaUId ProcessFlowElement.PreviousFlowElements ProcessFlowElement.ExecutedEventHandler ProcessFlowElement.StartDate ProcessFlowElement.Executed object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AtfProcessUserTask_DownloadPackages(UserConnection) public AtfProcessUserTask_DownloadPackages(UserConnection userConnection) Parameters userConnection UserConnection Properties ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool Output public virtual string Output { get; set; } Property Value string Repository public virtual Guid Repository { get; set; } Property Value Guid Methods ApplyPropertiesDataValues(DataReader) Applies state of the current process element. protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader Instance that provides sequential reading of data. CancelExecuting(params object[]) Cancels executing the current process element. public override void CancelExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. CompleteExecuting(params object[]) Completes executing the current process element. public override bool CompleteExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. Returns bool true, if element was successfully executed and conditions for moving to the next step were satisfied; otherwise - false. GetExecutionData() Returns the data required to display the execution page. public override string GetExecutionData() Returns string String that represents the data needed for showing execution page. GetNotificationData() Returns data of the process element notification event. public override ProcessElementNotification GetNotificationData() Returns ProcessElementNotification Instance of the Terrasoft.Core.Process.ProcessElementNotification type. InternalExecute(ProcessExecutingContext) Method does nothing. protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Returns bool WritePropertiesData(DataWriter) Writes state of the current process element. public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter Instance of the Terrasoft.Common.DataWriter type."
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitAddAll.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitAddAll.html",
    "title": "Class AtfProcessUserTask_GitAddAll | AtfTide",
    "keywords": "Class AtfProcessUserTask_GitAddAll Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll [DesignModeProperty(Name = \"ErrorMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"c6bd9ac5873144cca92bbfb554fc62ef\", CaptionResourceItem = \"Parameters.ErrorMessage.Caption\", DescriptionResourceItem = \"Parameters.ErrorMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"IsError\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"c6bd9ac5873144cca92bbfb554fc62ef\", CaptionResourceItem = \"Parameters.IsError.Caption\", DescriptionResourceItem = \"Parameters.IsError.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Repository\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"c6bd9ac5873144cca92bbfb554fc62ef\", CaptionResourceItem = \"Parameters.Repository.Caption\", DescriptionResourceItem = \"Parameters.Repository.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Output\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"c6bd9ac5873144cca92bbfb554fc62ef\", CaptionResourceItem = \"Parameters.Output.Caption\", DescriptionResourceItem = \"Parameters.Output.Caption\", UseSolutionStorage = true)] public class AtfProcessUserTask_GitAddAll : ProcessUserTask, IProcessDataSerializable Inheritance object ProcessFlowElement ProcessActivity ProcessUserTask AtfProcessUserTask_GitAddAll Implements IProcessDataSerializable Inherited Members ProcessUserTask.AfterInternalExecute() ProcessUserTask.OnExecuted(ProcessActivityAfterEventArgs) ProcessUserTask.OnCanceled() ProcessUserTask.AfterActivitySaveScriptExecute(Entity) ProcessUserTask.Get<T>(string) ProcessUserTask.Set<T>(string, T) ProcessUserTask.InternalInteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.CreateTempFile() ProcessUserTask.GetTempFile(Guid) ProcessUserTask.CreateUsageContext() ProcessUserTask.WritePropertiesData(DataWriter, bool) ProcessUserTask.GetPropertiesData(bool) ProcessUserTask.GetParameterValue(string) ProcessUserTask.GetParameterValue<TValue>(string, TValue) ProcessUserTask.FindParameterValuesByTag(Func<string, bool?>) ProcessUserTask.FindMappedEntityColumnMetaPaths(string) ProcessUserTask.GetRuntimeCaption() ProcessUserTask.InteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.SchemaManagerName ProcessUserTask.SchemaManager ProcessActivity.NeedBreakProcessExecuting(ProcessActivityAfterEventArgs) ProcessActivity.HasMapping(string) ProcessActivity.GetSchema(Guid) ProcessActivity.WriteProcessParameters() ProcessActivity.FindSchemaElement(Guid) ProcessActivity.ReadSerializableObject<T>(DataReader) ProcessActivity.WriteSerializableObject<T>(DataWriter, string, T) ProcessActivity.MeasureDuration(string) ProcessActivity.Assign(ProcessFlowElement) ProcessActivity.CreateFlowElementInstanceByType(Type, Process) ProcessActivity.WriteExecutionData(IProcessExecutionDataWriter) ProcessActivity.CloneShallow() ProcessActivity.ReadPropertiesData() ProcessActivity.WritePropertiesData() ProcessActivity.ReadPropertiesDataFromDB(UserConnection) ProcessActivity.ReadPropertiesDataFromMemory() ProcessActivity.WritePropertiesDataToMemory() ProcessActivity.GetResultParameterAllValues(UserConnection, ProcessSchemaUserTask) ProcessActivity.GetResultParameterAllowedValues() ProcessActivity.GetResultAllowedValues() ProcessActivity.ExternalExecute(ProcessActivityAfterEventArgs) ProcessActivity.SerializeToString(object) ProcessActivity.DeserializeFromString<T>(string) ProcessActivity.GetLocalizableString(string, string) ProcessActivity.ConvertToProcessDataSourceFilters(Guid, string) ProcessActivity.FindSchemaElement() ProcessActivity.GetSchemaElement() ProcessActivity.GetIsReexecution() ProcessActivity.GetParameterValue(ProcessSchemaParameter) ProcessActivity.GetParameterValues() ProcessActivity.GetParameterValues(IEnumerable<ProcessSchemaParameter>) ProcessActivity.ProcessNotifier ProcessActivity.ProcessParameterStore ProcessActivity.NeedUserInteraction ProcessActivity.Owner ProcessActivity.SchemaUId ProcessActivity.OwnerUId ProcessActivity.UserConnection ProcessActivity.Schema ProcessActivity.Storage ProcessActivity.IsShownExecutionPage ProcessActivity.ProcessLane ProcessActivity.Compressor ProcessActivity.PerformerAssignmentOptions ProcessFlowElement.IdParameterName ProcessFlowElement.SysSchemaIdParameterName ProcessFlowElement.SysWorkspaceIdParameterName ProcessFlowElement.ParentIdParameterName ProcessFlowElement.CreatedOnParameterName ProcessFlowElement.CreatedByIdParameterName ProcessFlowElement.ModifiedOnParameterName ProcessFlowElement.ModifiedByIdParameterName ProcessFlowElement.StartDateParameterName ProcessFlowElement.CompleteDateParameterName ProcessFlowElement.SysProcessIdParameterName ProcessFlowElement.CaptionParameterName ProcessFlowElement.StatusIdParameterName ProcessFlowElement.TypeParameterName ProcessFlowElement.SchemaElementUIdParameterName ProcessFlowElement.SchemaUIdParameterName ProcessFlowElement.StatusParameterName ProcessFlowElement.OwnerIdParameterName ProcessFlowElement.ErrorDescriptionParameterName ProcessFlowElement.PropertiesDataParameterName ProcessFlowElement.GuidTypeName ProcessFlowElement.IntegerTypeName ProcessFlowElement.DateTimeTypeName ProcessFlowElement.TextTypeName ProcessFlowElement.Float1TypeName ProcessFlowElement.DurationInMinutesParameterName ProcessFlowElement.DurationInHoursParameterName ProcessFlowElement.DurationInDaysParameterName ProcessFlowElement.DurationInMillisecondsParameterName ProcessFlowElement.NodeIdParameterName ProcessFlowElement.UIdPropertyName ProcessFlowElement.NamePropertyName ProcessFlowElement.StatusPropertyName ProcessFlowElement.CompleteApplyingPropertiesDataValues() ProcessFlowElement.ReadSerializableObjectValue<T>(DataReader) ProcessFlowElement.WritePropertyValues(DataWriter) ProcessFlowElement.SetDurationQueryParameters(QueryParameterCollection) ProcessFlowElement.GetSchemaElement(Guid) ProcessFlowElement.SetPrivateFieldValue(string, object, object) ProcessFlowElement.ToString() ProcessFlowElement.ReadPropertiesData(DataReader) ProcessFlowElement.GetPropertiesData() ProcessFlowElement.WritePropertiesDataToDB(UserConnection) ProcessFlowElement.Execute(ProcessExecutingContext) ProcessFlowElement.TryGetPerformer(out Guid) ProcessFlowElement.WritePropertiesDataToOwner(DataWriter) ProcessFlowElement.ReadPropertiesDataFromOwner(DataReader) ProcessFlowElement.UseFlowEngineMode ProcessFlowElement.Log ProcessFlowElement.DateTimeProvider ProcessFlowElement.UId ProcessFlowElement.Name ProcessFlowElement.Caption ProcessFlowElement.Type ProcessFlowElement.SerializeToDB ProcessFlowElement.IsLogging ProcessFlowElement.IsProcess ProcessFlowElement.SchemaElementUId ProcessFlowElement.Status ProcessFlowElement.IsExecuted ProcessFlowElement.ExecutionResult ProcessFlowElement.LoopCounter ProcessFlowElement.CreatedInSchemaUId ProcessFlowElement.PreviousFlowElements ProcessFlowElement.ExecutedEventHandler ProcessFlowElement.StartDate ProcessFlowElement.Executed object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AtfProcessUserTask_GitAddAll(UserConnection) public AtfProcessUserTask_GitAddAll(UserConnection userConnection) Parameters userConnection UserConnection Properties ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool Output public virtual string Output { get; set; } Property Value string Repository public virtual Guid Repository { get; set; } Property Value Guid Methods ApplyPropertiesDataValues(DataReader) Applies state of the current process element. protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader Instance that provides sequential reading of data. CancelExecuting(params object[]) Cancels executing the current process element. public override void CancelExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. CompleteExecuting(params object[]) Completes executing the current process element. public override bool CompleteExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. Returns bool true, if element was successfully executed and conditions for moving to the next step were satisfied; otherwise - false. GetExecutionData() Returns the data required to display the execution page. public override string GetExecutionData() Returns string String that represents the data needed for showing execution page. GetNotificationData() Returns data of the process element notification event. public override ProcessElementNotification GetNotificationData() Returns ProcessElementNotification Instance of the Terrasoft.Core.Process.ProcessElementNotification type. InternalExecute(ProcessExecutingContext) Method does nothing. protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Returns bool WritePropertiesData(DataWriter) Writes state of the current process element. public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter Instance of the Terrasoft.Common.DataWriter type."
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitCommit.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitCommit.html",
    "title": "Class AtfProcessUserTask_GitCommit | AtfTide",
    "keywords": "Class AtfProcessUserTask_GitCommit Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll [DesignModeProperty(Name = \"Repository\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"68c751e5bdf844ac9772df64781ad25d\", CaptionResourceItem = \"Parameters.Repository.Caption\", DescriptionResourceItem = \"Parameters.Repository.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"ErrorMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"68c751e5bdf844ac9772df64781ad25d\", CaptionResourceItem = \"Parameters.ErrorMessage.Caption\", DescriptionResourceItem = \"Parameters.ErrorMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"IsError\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"68c751e5bdf844ac9772df64781ad25d\", CaptionResourceItem = \"Parameters.IsError.Caption\", DescriptionResourceItem = \"Parameters.IsError.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"CommitMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"68c751e5bdf844ac9772df64781ad25d\", CaptionResourceItem = \"Parameters.CommitMessage.Caption\", DescriptionResourceItem = \"Parameters.CommitMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Output\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"68c751e5bdf844ac9772df64781ad25d\", CaptionResourceItem = \"Parameters.Output.Caption\", DescriptionResourceItem = \"Parameters.Output.Caption\", UseSolutionStorage = true)] public class AtfProcessUserTask_GitCommit : ProcessUserTask, IProcessDataSerializable Inheritance object ProcessFlowElement ProcessActivity ProcessUserTask AtfProcessUserTask_GitCommit Implements IProcessDataSerializable Inherited Members ProcessUserTask.AfterInternalExecute() ProcessUserTask.OnExecuted(ProcessActivityAfterEventArgs) ProcessUserTask.OnCanceled() ProcessUserTask.AfterActivitySaveScriptExecute(Entity) ProcessUserTask.Get<T>(string) ProcessUserTask.Set<T>(string, T) ProcessUserTask.InternalInteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.CreateTempFile() ProcessUserTask.GetTempFile(Guid) ProcessUserTask.CreateUsageContext() ProcessUserTask.WritePropertiesData(DataWriter, bool) ProcessUserTask.GetPropertiesData(bool) ProcessUserTask.GetParameterValue(string) ProcessUserTask.GetParameterValue<TValue>(string, TValue) ProcessUserTask.FindParameterValuesByTag(Func<string, bool?>) ProcessUserTask.FindMappedEntityColumnMetaPaths(string) ProcessUserTask.GetRuntimeCaption() ProcessUserTask.InteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.SchemaManagerName ProcessUserTask.SchemaManager ProcessActivity.NeedBreakProcessExecuting(ProcessActivityAfterEventArgs) ProcessActivity.HasMapping(string) ProcessActivity.GetSchema(Guid) ProcessActivity.WriteProcessParameters() ProcessActivity.FindSchemaElement(Guid) ProcessActivity.ReadSerializableObject<T>(DataReader) ProcessActivity.WriteSerializableObject<T>(DataWriter, string, T) ProcessActivity.MeasureDuration(string) ProcessActivity.Assign(ProcessFlowElement) ProcessActivity.CreateFlowElementInstanceByType(Type, Process) ProcessActivity.WriteExecutionData(IProcessExecutionDataWriter) ProcessActivity.CloneShallow() ProcessActivity.ReadPropertiesData() ProcessActivity.WritePropertiesData() ProcessActivity.ReadPropertiesDataFromDB(UserConnection) ProcessActivity.ReadPropertiesDataFromMemory() ProcessActivity.WritePropertiesDataToMemory() ProcessActivity.GetResultParameterAllValues(UserConnection, ProcessSchemaUserTask) ProcessActivity.GetResultParameterAllowedValues() ProcessActivity.GetResultAllowedValues() ProcessActivity.ExternalExecute(ProcessActivityAfterEventArgs) ProcessActivity.SerializeToString(object) ProcessActivity.DeserializeFromString<T>(string) ProcessActivity.GetLocalizableString(string, string) ProcessActivity.ConvertToProcessDataSourceFilters(Guid, string) ProcessActivity.FindSchemaElement() ProcessActivity.GetSchemaElement() ProcessActivity.GetIsReexecution() ProcessActivity.GetParameterValue(ProcessSchemaParameter) ProcessActivity.GetParameterValues() ProcessActivity.GetParameterValues(IEnumerable<ProcessSchemaParameter>) ProcessActivity.ProcessNotifier ProcessActivity.ProcessParameterStore ProcessActivity.NeedUserInteraction ProcessActivity.Owner ProcessActivity.SchemaUId ProcessActivity.OwnerUId ProcessActivity.UserConnection ProcessActivity.Schema ProcessActivity.Storage ProcessActivity.IsShownExecutionPage ProcessActivity.ProcessLane ProcessActivity.Compressor ProcessActivity.PerformerAssignmentOptions ProcessFlowElement.IdParameterName ProcessFlowElement.SysSchemaIdParameterName ProcessFlowElement.SysWorkspaceIdParameterName ProcessFlowElement.ParentIdParameterName ProcessFlowElement.CreatedOnParameterName ProcessFlowElement.CreatedByIdParameterName ProcessFlowElement.ModifiedOnParameterName ProcessFlowElement.ModifiedByIdParameterName ProcessFlowElement.StartDateParameterName ProcessFlowElement.CompleteDateParameterName ProcessFlowElement.SysProcessIdParameterName ProcessFlowElement.CaptionParameterName ProcessFlowElement.StatusIdParameterName ProcessFlowElement.TypeParameterName ProcessFlowElement.SchemaElementUIdParameterName ProcessFlowElement.SchemaUIdParameterName ProcessFlowElement.StatusParameterName ProcessFlowElement.OwnerIdParameterName ProcessFlowElement.ErrorDescriptionParameterName ProcessFlowElement.PropertiesDataParameterName ProcessFlowElement.GuidTypeName ProcessFlowElement.IntegerTypeName ProcessFlowElement.DateTimeTypeName ProcessFlowElement.TextTypeName ProcessFlowElement.Float1TypeName ProcessFlowElement.DurationInMinutesParameterName ProcessFlowElement.DurationInHoursParameterName ProcessFlowElement.DurationInDaysParameterName ProcessFlowElement.DurationInMillisecondsParameterName ProcessFlowElement.NodeIdParameterName ProcessFlowElement.UIdPropertyName ProcessFlowElement.NamePropertyName ProcessFlowElement.StatusPropertyName ProcessFlowElement.CompleteApplyingPropertiesDataValues() ProcessFlowElement.ReadSerializableObjectValue<T>(DataReader) ProcessFlowElement.WritePropertyValues(DataWriter) ProcessFlowElement.SetDurationQueryParameters(QueryParameterCollection) ProcessFlowElement.GetSchemaElement(Guid) ProcessFlowElement.SetPrivateFieldValue(string, object, object) ProcessFlowElement.ToString() ProcessFlowElement.ReadPropertiesData(DataReader) ProcessFlowElement.GetPropertiesData() ProcessFlowElement.WritePropertiesDataToDB(UserConnection) ProcessFlowElement.Execute(ProcessExecutingContext) ProcessFlowElement.TryGetPerformer(out Guid) ProcessFlowElement.WritePropertiesDataToOwner(DataWriter) ProcessFlowElement.ReadPropertiesDataFromOwner(DataReader) ProcessFlowElement.UseFlowEngineMode ProcessFlowElement.Log ProcessFlowElement.DateTimeProvider ProcessFlowElement.UId ProcessFlowElement.Name ProcessFlowElement.Caption ProcessFlowElement.Type ProcessFlowElement.SerializeToDB ProcessFlowElement.IsLogging ProcessFlowElement.IsProcess ProcessFlowElement.SchemaElementUId ProcessFlowElement.Status ProcessFlowElement.IsExecuted ProcessFlowElement.ExecutionResult ProcessFlowElement.LoopCounter ProcessFlowElement.CreatedInSchemaUId ProcessFlowElement.PreviousFlowElements ProcessFlowElement.ExecutedEventHandler ProcessFlowElement.StartDate ProcessFlowElement.Executed object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AtfProcessUserTask_GitCommit(UserConnection) public AtfProcessUserTask_GitCommit(UserConnection userConnection) Parameters userConnection UserConnection Properties CommitMessage public virtual string CommitMessage { get; set; } Property Value string ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool Output public virtual string Output { get; set; } Property Value string Repository public virtual Guid Repository { get; set; } Property Value Guid Methods ApplyPropertiesDataValues(DataReader) Applies state of the current process element. protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader Instance that provides sequential reading of data. CancelExecuting(params object[]) Cancels executing the current process element. public override void CancelExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. CompleteExecuting(params object[]) Completes executing the current process element. public override bool CompleteExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. Returns bool true, if element was successfully executed and conditions for moving to the next step were satisfied; otherwise - false. GetExecutionData() Returns the data required to display the execution page. public override string GetExecutionData() Returns string String that represents the data needed for showing execution page. GetNotificationData() Returns data of the process element notification event. public override ProcessElementNotification GetNotificationData() Returns ProcessElementNotification Instance of the Terrasoft.Core.Process.ProcessElementNotification type. InternalExecute(ProcessExecutingContext) Method does nothing. protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Returns bool WritePropertiesData(DataWriter) Writes state of the current process element. public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter Instance of the Terrasoft.Common.DataWriter type."
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitPush.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_GitPush.html",
    "title": "Class AtfProcessUserTask_GitPush | AtfTide",
    "keywords": "Class AtfProcessUserTask_GitPush Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll [DesignModeProperty(Name = \"Repository\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"15d4abc17e0d4aa4a3365f16b73b8be1\", CaptionResourceItem = \"Parameters.Repository.Caption\", DescriptionResourceItem = \"Parameters.Repository.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"IsError\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"15d4abc17e0d4aa4a3365f16b73b8be1\", CaptionResourceItem = \"Parameters.IsError.Caption\", DescriptionResourceItem = \"Parameters.IsError.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"ErrorMessage\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"15d4abc17e0d4aa4a3365f16b73b8be1\", CaptionResourceItem = \"Parameters.ErrorMessage.Caption\", DescriptionResourceItem = \"Parameters.ErrorMessage.Caption\", UseSolutionStorage = true)] [DesignModeProperty(Name = \"Output\", Group = \"\", ValuesProvider = \"ProcessSchemaParameterValueProvider\", Editor = \"xtype=processschemaparametervalueedit;dataProvider=processschemaparametervalueprovider\", ResourceManager = \"15d4abc17e0d4aa4a3365f16b73b8be1\", CaptionResourceItem = \"Parameters.Output.Caption\", DescriptionResourceItem = \"Parameters.Output.Caption\", UseSolutionStorage = true)] public class AtfProcessUserTask_GitPush : ProcessUserTask, IProcessDataSerializable Inheritance object ProcessFlowElement ProcessActivity ProcessUserTask AtfProcessUserTask_GitPush Implements IProcessDataSerializable Inherited Members ProcessUserTask.AfterInternalExecute() ProcessUserTask.OnExecuted(ProcessActivityAfterEventArgs) ProcessUserTask.OnCanceled() ProcessUserTask.AfterActivitySaveScriptExecute(Entity) ProcessUserTask.Get<T>(string) ProcessUserTask.Set<T>(string, T) ProcessUserTask.InternalInteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.CreateTempFile() ProcessUserTask.GetTempFile(Guid) ProcessUserTask.CreateUsageContext() ProcessUserTask.WritePropertiesData(DataWriter, bool) ProcessUserTask.GetPropertiesData(bool) ProcessUserTask.GetParameterValue(string) ProcessUserTask.GetParameterValue<TValue>(string, TValue) ProcessUserTask.FindParameterValuesByTag(Func<string, bool?>) ProcessUserTask.FindMappedEntityColumnMetaPaths(string) ProcessUserTask.GetRuntimeCaption() ProcessUserTask.InteractWithUser(ProcessExecutingContext, bool, bool) ProcessUserTask.SchemaManagerName ProcessUserTask.SchemaManager ProcessActivity.NeedBreakProcessExecuting(ProcessActivityAfterEventArgs) ProcessActivity.HasMapping(string) ProcessActivity.GetSchema(Guid) ProcessActivity.WriteProcessParameters() ProcessActivity.FindSchemaElement(Guid) ProcessActivity.ReadSerializableObject<T>(DataReader) ProcessActivity.WriteSerializableObject<T>(DataWriter, string, T) ProcessActivity.MeasureDuration(string) ProcessActivity.Assign(ProcessFlowElement) ProcessActivity.CreateFlowElementInstanceByType(Type, Process) ProcessActivity.WriteExecutionData(IProcessExecutionDataWriter) ProcessActivity.CloneShallow() ProcessActivity.ReadPropertiesData() ProcessActivity.WritePropertiesData() ProcessActivity.ReadPropertiesDataFromDB(UserConnection) ProcessActivity.ReadPropertiesDataFromMemory() ProcessActivity.WritePropertiesDataToMemory() ProcessActivity.GetResultParameterAllValues(UserConnection, ProcessSchemaUserTask) ProcessActivity.GetResultParameterAllowedValues() ProcessActivity.GetResultAllowedValues() ProcessActivity.ExternalExecute(ProcessActivityAfterEventArgs) ProcessActivity.SerializeToString(object) ProcessActivity.DeserializeFromString<T>(string) ProcessActivity.GetLocalizableString(string, string) ProcessActivity.ConvertToProcessDataSourceFilters(Guid, string) ProcessActivity.FindSchemaElement() ProcessActivity.GetSchemaElement() ProcessActivity.GetIsReexecution() ProcessActivity.GetParameterValue(ProcessSchemaParameter) ProcessActivity.GetParameterValues() ProcessActivity.GetParameterValues(IEnumerable<ProcessSchemaParameter>) ProcessActivity.ProcessNotifier ProcessActivity.ProcessParameterStore ProcessActivity.NeedUserInteraction ProcessActivity.Owner ProcessActivity.SchemaUId ProcessActivity.OwnerUId ProcessActivity.UserConnection ProcessActivity.Schema ProcessActivity.Storage ProcessActivity.IsShownExecutionPage ProcessActivity.ProcessLane ProcessActivity.Compressor ProcessActivity.PerformerAssignmentOptions ProcessFlowElement.IdParameterName ProcessFlowElement.SysSchemaIdParameterName ProcessFlowElement.SysWorkspaceIdParameterName ProcessFlowElement.ParentIdParameterName ProcessFlowElement.CreatedOnParameterName ProcessFlowElement.CreatedByIdParameterName ProcessFlowElement.ModifiedOnParameterName ProcessFlowElement.ModifiedByIdParameterName ProcessFlowElement.StartDateParameterName ProcessFlowElement.CompleteDateParameterName ProcessFlowElement.SysProcessIdParameterName ProcessFlowElement.CaptionParameterName ProcessFlowElement.StatusIdParameterName ProcessFlowElement.TypeParameterName ProcessFlowElement.SchemaElementUIdParameterName ProcessFlowElement.SchemaUIdParameterName ProcessFlowElement.StatusParameterName ProcessFlowElement.OwnerIdParameterName ProcessFlowElement.ErrorDescriptionParameterName ProcessFlowElement.PropertiesDataParameterName ProcessFlowElement.GuidTypeName ProcessFlowElement.IntegerTypeName ProcessFlowElement.DateTimeTypeName ProcessFlowElement.TextTypeName ProcessFlowElement.Float1TypeName ProcessFlowElement.DurationInMinutesParameterName ProcessFlowElement.DurationInHoursParameterName ProcessFlowElement.DurationInDaysParameterName ProcessFlowElement.DurationInMillisecondsParameterName ProcessFlowElement.NodeIdParameterName ProcessFlowElement.UIdPropertyName ProcessFlowElement.NamePropertyName ProcessFlowElement.StatusPropertyName ProcessFlowElement.CompleteApplyingPropertiesDataValues() ProcessFlowElement.ReadSerializableObjectValue<T>(DataReader) ProcessFlowElement.WritePropertyValues(DataWriter) ProcessFlowElement.SetDurationQueryParameters(QueryParameterCollection) ProcessFlowElement.GetSchemaElement(Guid) ProcessFlowElement.SetPrivateFieldValue(string, object, object) ProcessFlowElement.ToString() ProcessFlowElement.ReadPropertiesData(DataReader) ProcessFlowElement.GetPropertiesData() ProcessFlowElement.WritePropertiesDataToDB(UserConnection) ProcessFlowElement.Execute(ProcessExecutingContext) ProcessFlowElement.TryGetPerformer(out Guid) ProcessFlowElement.WritePropertiesDataToOwner(DataWriter) ProcessFlowElement.ReadPropertiesDataFromOwner(DataReader) ProcessFlowElement.UseFlowEngineMode ProcessFlowElement.Log ProcessFlowElement.DateTimeProvider ProcessFlowElement.UId ProcessFlowElement.Name ProcessFlowElement.Caption ProcessFlowElement.Type ProcessFlowElement.SerializeToDB ProcessFlowElement.IsLogging ProcessFlowElement.IsProcess ProcessFlowElement.SchemaElementUId ProcessFlowElement.Status ProcessFlowElement.IsExecuted ProcessFlowElement.ExecutionResult ProcessFlowElement.LoopCounter ProcessFlowElement.CreatedInSchemaUId ProcessFlowElement.PreviousFlowElements ProcessFlowElement.ExecutedEventHandler ProcessFlowElement.StartDate ProcessFlowElement.Executed object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors AtfProcessUserTask_GitPush(UserConnection) public AtfProcessUserTask_GitPush(UserConnection userConnection) Parameters userConnection UserConnection Properties ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool Output public virtual string Output { get; set; } Property Value string Repository public virtual Guid Repository { get; set; } Property Value Guid Methods ApplyPropertiesDataValues(DataReader) Applies state of the current process element. protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader Instance that provides sequential reading of data. CancelExecuting(params object[]) Cancels executing the current process element. public override void CancelExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. CompleteExecuting(params object[]) Completes executing the current process element. public override bool CompleteExecuting(params object[] parameters) Parameters parameters object[] Array of the parameter values. Returns bool true, if element was successfully executed and conditions for moving to the next step were satisfied; otherwise - false. GetExecutionData() Returns the data required to display the execution page. public override string GetExecutionData() Returns string String that represents the data needed for showing execution page. GetNotificationData() Returns data of the process element notification event. public override ProcessElementNotification GetNotificationData() Returns ProcessElementNotification Instance of the Terrasoft.Core.Process.ProcessElementNotification type. InternalExecute(ProcessExecutingContext) Method does nothing. protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Returns bool WritePropertiesData(DataWriter) Writes state of the current process element. public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter Instance of the Terrasoft.Common.DataWriter type."
  },
  "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_RunOSCommand.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.AtfProcessUserTask_RunOSCommand.html",
    "title": "Class AtfProcessUserTask_RunOSCommand | AtfTide",
    "keywords": "Class AtfProcessUserTask_RunOSCommand Namespace Terrasoft.Core.Process.Configuration Assembly AtfTIDE.dll public class AtfProcessUserTask_RunOSCommand : ProcessUserTask Inheritance object AtfProcessUserTask_RunOSCommand Constructors AtfProcessUserTask_RunOSCommand(UserConnection) public AtfProcessUserTask_RunOSCommand(UserConnection userConnection) Parameters userConnection UserConnection Properties Arguments public virtual string Arguments { get; set; } Property Value string ErrorMessage public virtual string ErrorMessage { get; set; } Property Value string FileName public virtual string FileName { get; set; } Property Value string IsError public virtual bool IsError { get; set; } Property Value bool WaitForExit public virtual bool WaitForExit { get; set; } Property Value bool WorkingDirectory public virtual string WorkingDirectory { get; set; } Property Value string Methods ApplyPropertiesDataValues(DataReader) protected override void ApplyPropertiesDataValues(DataReader reader) Parameters reader DataReader CancelExecuting(params object[]) public override void CancelExecuting(params object[] parameters) Parameters parameters object[] CompleteExecuting(params object[]) public override bool CompleteExecuting(params object[] parameters) Parameters parameters object[] Returns bool GetExecutionData() public override string GetExecutionData() Returns string GetNotificationData() public override ProcessElementNotification GetNotificationData() Returns ProcessElementNotification InternalExecute(ProcessExecutingContext) protected override bool InternalExecute(ProcessExecutingContext context) Parameters context ProcessExecutingContext Returns bool WritePropertiesData(DataWriter) public override void WritePropertiesData(DataWriter writer) Parameters writer DataWriter"
  },
  "api/Terrasoft.Core.Process.Configuration.html": {
    "href": "api/Terrasoft.Core.Process.Configuration.html",
    "title": "Namespace Terrasoft.Core.Process.Configuration | AtfTide",
    "keywords": "Namespace Terrasoft.Core.Process.Configuration Classes AtfProcessUserTask_CloneRepository AtfProcessUserTask_DownloadPackages AtfProcessUserTask_GitAddAll AtfProcessUserTask_GitCommit AtfProcessUserTask_GitPush"
  },
  "consolegit/ConsoleGit.CommandLineArgs.html": {
    "href": "consolegit/ConsoleGit.CommandLineArgs.html",
    "title": "Class CommandLineArgs | AtfTide",
    "keywords": "Class CommandLineArgs Namespace ConsoleGit Assembly ConsoleGit.dll public record CommandLineArgs : IEquatable<CommandLineArgs> Inheritance object CommandLineArgs Implements IEquatable<CommandLineArgs> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandLineArgs() public CommandLineArgs() Properties ASPXAUTH public string? ASPXAUTH { get; init; } Property Value string BPMCSRF public string? BPMCSRF { get; init; } Property Value string BPMLOADER public string? BPMLOADER { get; init; } Property Value string BPMSESSIONID public string? BPMSESSIONID { get; init; } Property Value string Command public string Command { get; init; } Property Value string CommitAuthorEmail public string CommitAuthorEmail { get; set; } Property Value string CommitAuthorName public string CommitAuthorName { get; set; } Property Value string CommitMessage public string CommitMessage { get; set; } Property Value string CreatioUrl public Uri? CreatioUrl { get; init; } Property Value Uri GitUrl public Uri? GitUrl { get; init; } Property Value Uri IsFramework public bool IsFramework { get; init; } Property Value bool PackageName public bool PackageName { get; init; } Property Value bool Password public string Password { get; init; } Property Value string RepoDir public string RepoDir { get; init; } Property Value string UserName public string UserName { get; init; } Property Value string UserType public string? UserType { get; init; } Property Value string Methods CreateCookieContainerFromArgs() Creates cookie container with Creatio authentication cookies. public CookieContainer CreateCookieContainerFromArgs() Returns CookieContainer Configured CookieContainer for Creatio requests Remarks BPMLOADER, ASPXAUTH, BPMCSRF - main auth cookies UserType, BPMSESSIONID - session cookies Special handling for ASPXAUTH domain prefix Exceptions ArgumentException Invalid Creatio URL or missing required cookies"
  },
  "consolegit/ConsoleGit.Commands.AddAllCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.AddAllCommand.html",
    "title": "Class AddAllCommand | AtfTide",
    "keywords": "Class AddAllCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Stage all working directory changes public class AddAllCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand AddAllCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddAllCommand(CommandLineArgs) Stage all working directory changes public AddAllCommand(CommandLineArgs args) Parameters args CommandLineArgs Arguments See Also https://github.com/libgit2/libgit2sharp/wiki/git-add#stage-all-working-directory-changes Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success> See Also https://github.com/libgit2/libgit2sharp/wiki/git-add#stage-all-working-directory-changes"
  },
  "consolegit/ConsoleGit.Commands.BaseRepositoryCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.BaseRepositoryCommand.html",
    "title": "Class BaseRepositoryCommand | AtfTide",
    "keywords": "Class BaseRepositoryCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public abstract class BaseRepositoryCommand : ICommand, IDisposable Inheritance object BaseRepositoryCommand Implements ICommand IDisposable Derived AddAllCommand CheckoutCommand CloneCommand CommitCommand PullCommand PushCommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BaseRepositoryCommand(CommandLineArgs) protected BaseRepositoryCommand(CommandLineArgs args) Parameters args CommandLineArgs Fields Args protected readonly CommandLineArgs Args Field Value CommandLineArgs Properties InitializedRepository protected GitRepository InitializedRepository { get; } Property Value GitRepository Methods CleanRepositoryDirectory() protected void CleanRepositoryDirectory() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool Execute() public abstract ErrorOr<Success> Execute() Returns ErrorOr<Success> ~BaseRepositoryCommand() protected ~BaseRepositoryCommand() GrantDeleteAccess(DirectoryInfo, string) public static void GrantDeleteAccess(DirectoryInfo directoryInfo, string userName) Parameters directoryInfo DirectoryInfo userName string"
  },
  "consolegit/ConsoleGit.Commands.CheckoutCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.CheckoutCommand.html",
    "title": "Class CheckoutCommand | AtfTide",
    "keywords": "Class CheckoutCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public class CheckoutCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand CheckoutCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CheckoutCommand(CommandLineArgs) public CheckoutCommand(CommandLineArgs args) Parameters args CommandLineArgs Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success>"
  },
  "consolegit/ConsoleGit.Commands.CloneCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.CloneCommand.html",
    "title": "Class CloneCommand | AtfTide",
    "keywords": "Class CloneCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public class CloneCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand CloneCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CloneCommand(CommandLineArgs) public CloneCommand(CommandLineArgs args) Parameters args CommandLineArgs Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success>"
  },
  "consolegit/ConsoleGit.Commands.CommitCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.CommitCommand.html",
    "title": "Class CommitCommand | AtfTide",
    "keywords": "Class CommitCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Make a commit to a non-bare repository public class CommitCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand CommitCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommitCommand(CommandLineArgs) Make a commit to a non-bare repository public CommitCommand(CommandLineArgs args) Parameters args CommandLineArgs Arguments See Also https://github.com/libgit2/libgit2sharp/wiki/git-commit#make-a-commit-to-a-non-bare-repository Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success> See Also https://github.com/libgit2/libgit2sharp/wiki/git-commit#make-a-commit-to-a-non-bare-repository"
  },
  "consolegit/ConsoleGit.Commands.DownloadPackagesCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.DownloadPackagesCommand.html",
    "title": "Class DownloadPackagesCommand | AtfTide",
    "keywords": "Class DownloadPackagesCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Downloads packages defined in workspace settings from Creatio. public class DownloadPackagesCommand : ICommand, IDisposable Inheritance object DownloadPackagesCommand Implements ICommand IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Examples Using command: var args = new CommandLineArgs { CreatioUrl = \"https://creatio.example.com\" }; using var command = new DownloadPackagesCommand(args); var result = await command.Execute(); Remarks Parallel package downloads Automatic retries Auth cookie management Constructors DownloadPackagesCommand(IHttpClientFactory, IOptions<CommandLineArgs>) Initializes download command with configuration and HTTP client. public DownloadPackagesCommand(IHttpClientFactory factory, IOptions<CommandLineArgs> args) Parameters factory IHttpClientFactory HttpClientFactory to create HttpClient args IOptions<CommandLineArgs> Command line arguments containing URLs and credentials Remarks Creates shared HttpClient for downloads Sets up output directory under repo path Configures auth cookies and headers Exceptions ArgumentNullException Args is null Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Execute() Downloads packages defined in workspace settings asynchronously with error handling and retries. public ErrorOr<Success> Execute() Returns ErrorOr<Success> Success or list of errors encountered during package downloads. Remarks Parallel downloads based on processor count 3 retry attempts with exponential backoff Thread-safe error collection Exceptions FileNotFoundException Workspace settings file not found."
  },
  "consolegit/ConsoleGit.Commands.ErrorCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.ErrorCommand.html",
    "title": "Class ErrorCommand | AtfTide",
    "keywords": "Class ErrorCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public sealed class ErrorCommand : ICommand, IDisposable Inheritance object ErrorCommand Implements ICommand IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ErrorCommand(CommandLineArgs) public ErrorCommand(CommandLineArgs args) Parameters args CommandLineArgs Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Execute() public ErrorOr<Success> Execute() Returns ErrorOr<Success>"
  },
  "consolegit/ConsoleGit.Commands.ICommand.html": {
    "href": "consolegit/ConsoleGit.Commands.ICommand.html",
    "title": "Interface ICommand | AtfTide",
    "keywords": "Interface ICommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public interface ICommand : IDisposable Inherited Members IDisposable.Dispose() Methods Execute() ErrorOr<Success> Execute() Returns ErrorOr<Success>"
  },
  "consolegit/ConsoleGit.Commands.PullCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.PullCommand.html",
    "title": "Class PullCommand | AtfTide",
    "keywords": "Class PullCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll public class PullCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand PullCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PullCommand(CommandLineArgs) public PullCommand(CommandLineArgs args) Parameters args CommandLineArgs Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success>"
  },
  "consolegit/ConsoleGit.Commands.PushCommand.html": {
    "href": "consolegit/ConsoleGit.Commands.PushCommand.html",
    "title": "Class PushCommand | AtfTide",
    "keywords": "Class PushCommand Namespace ConsoleGit.Commands Assembly ConsoleGit.dll Pushes the specified branch to the remote repository. public class PushCommand : BaseRepositoryCommand, ICommand, IDisposable Inheritance object BaseRepositoryCommand PushCommand Implements ICommand IDisposable Inherited Members BaseRepositoryCommand.Args BaseRepositoryCommand.InitializedRepository BaseRepositoryCommand.GrantDeleteAccess(DirectoryInfo, string) BaseRepositoryCommand.CleanRepositoryDirectory() BaseRepositoryCommand.Dispose(bool) BaseRepositoryCommand.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PushCommand(CommandLineArgs) Pushes the specified branch to the remote repository. public PushCommand(CommandLineArgs args) Parameters args CommandLineArgs Arguments See Also https://github.com/libgit2/libgit2sharp/wiki/git-branch Methods Execute() public override ErrorOr<Success> Execute() Returns ErrorOr<Success> See Also https://github.com/libgit2/libgit2sharp/wiki/git-branch"
  },
  "consolegit/ConsoleGit.Commands.html": {
    "href": "consolegit/ConsoleGit.Commands.html",
    "title": "Namespace ConsoleGit.Commands | AtfTide",
    "keywords": "Namespace ConsoleGit.Commands Classes AddAllCommand Stage all working directory changes BaseRepositoryCommand CheckoutCommand CloneCommand CommitCommand Make a commit to a non-bare repository DownloadPackagesCommand Downloads packages defined in workspace settings from Creatio. ErrorCommand PullCommand PushCommand Pushes the specified branch to the remote repository. Interfaces ICommand"
  },
  "consolegit/ConsoleGit.ConfiguredHttpClient.MyHandler.html": {
    "href": "consolegit/ConsoleGit.ConfiguredHttpClient.MyHandler.html",
    "title": "Class MyHandler | AtfTide",
    "keywords": "Class MyHandler Namespace ConsoleGit.ConfiguredHttpClient Assembly ConsoleGit.dll public class MyHandler : DelegatingHandler, IDisposable Inheritance object HttpMessageHandler DelegatingHandler MyHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.Send(HttpRequestMessage, CancellationToken) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SendAsync(HttpRequestMessage, CancellationToken) Sends an HTTP request to the inner handler to send to the server as an asynchronous operation. protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters request HttpRequestMessage The HTTP request message to send to the server. cancellationToken CancellationToken A cancellation token to cancel operation. Returns Task<HttpResponseMessage> The task object representing the asynchronous operation. Exceptions ArgumentNullException The request was null. OperationCanceledException The cancellation token was canceled. This exception is stored into the returned task."
  },
  "consolegit/ConsoleGit.ConfiguredHttpClient.html": {
    "href": "consolegit/ConsoleGit.ConfiguredHttpClient.html",
    "title": "Namespace ConsoleGit.ConfiguredHttpClient | AtfTide",
    "keywords": "Namespace ConsoleGit.ConfiguredHttpClient Classes MyHandler"
  },
  "consolegit/ConsoleGit.Dto.AppJsonSerializerContext.html": {
    "href": "consolegit/ConsoleGit.Dto.AppJsonSerializerContext.html",
    "title": "Class AppJsonSerializerContext | AtfTide",
    "keywords": "Class AppJsonSerializerContext Namespace ConsoleGit.Dto Assembly ConsoleGit.dll [JsonSerializable(typeof(string[]))] [JsonSerializable(typeof(JsonElement))] [JsonSerializable(typeof(WorkspaceSettings))] public class AppJsonSerializerContext : JsonSerializerContext, IJsonTypeInfoResolver Inheritance object JsonSerializerContext AppJsonSerializerContext Implements IJsonTypeInfoResolver Inherited Members JsonSerializerContext.Options object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppJsonSerializerContext() public AppJsonSerializerContext() AppJsonSerializerContext(JsonSerializerOptions) Creates an instance of JsonSerializerContext and binds it with the indicated JsonSerializerOptions. public AppJsonSerializerContext(JsonSerializerOptions options) Parameters options JsonSerializerOptions The run time provided options for the context instance. Properties Default The default JsonSerializerContext associated with a default JsonSerializerOptions instance. public static AppJsonSerializerContext Default { get; } Property Value AppJsonSerializerContext GeneratedSerializerOptions The source-generated options associated with this context. protected override JsonSerializerOptions? GeneratedSerializerOptions { get; } Property Value JsonSerializerOptions JsonElement Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<JsonElement> JsonElement { get; } Property Value JsonTypeInfo<JsonElement> String Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string> String { get; } Property Value JsonTypeInfo<string> StringArray Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<string[]> StringArray { get; } Property Value JsonTypeInfo<string[]> WorkspaceSettings Defines the source generated JSON serialization contract metadata for a given type. public JsonTypeInfo<WorkspaceSettings> WorkspaceSettings { get; } Property Value JsonTypeInfo<WorkspaceSettings> Methods GetTypeInfo(Type) Gets metadata for the specified type. public override JsonTypeInfo? GetTypeInfo(Type type) Parameters type Type The type to fetch metadata for. Returns JsonTypeInfo The metadata for the specified type, or null if the context has no metadata for the type."
  },
  "consolegit/ConsoleGit.Dto.WorkspaceSettings.html": {
    "href": "consolegit/ConsoleGit.Dto.WorkspaceSettings.html",
    "title": "Class WorkspaceSettings | AtfTide",
    "keywords": "Class WorkspaceSettings Namespace ConsoleGit.Dto Assembly ConsoleGit.dll public record WorkspaceSettings : IEquatable<WorkspaceSettings> Inheritance object WorkspaceSettings Implements IEquatable<WorkspaceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WorkspaceSettings(string[], string) public WorkspaceSettings(string[] Packages, string ApplicationVersion) Parameters Packages string[] ApplicationVersion string Properties ApplicationVersion [JsonPropertyName(\"ApplicationVersion\")] public string ApplicationVersion { get; init; } Property Value string Packages [JsonPropertyName(\"Packages\")] public string[] Packages { get; init; } Property Value string[]"
  },
  "consolegit/ConsoleGit.Dto.html": {
    "href": "consolegit/ConsoleGit.Dto.html",
    "title": "Namespace ConsoleGit.Dto | AtfTide",
    "keywords": "Namespace ConsoleGit.Dto Classes AppJsonSerializerContext WorkspaceSettings"
  },
  "consolegit/ConsoleGit.html": {
    "href": "consolegit/ConsoleGit.html",
    "title": "Namespace ConsoleGit | AtfTide",
    "keywords": "Namespace ConsoleGit Classes CommandLineArgs"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | AtfTide",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | AtfTide",
    "keywords": "Introduction"
  },
  "gitabstractions/GitAbstraction.ExToErrorParser.html": {
    "href": "gitabstractions/GitAbstraction.ExToErrorParser.html",
    "title": "Class ExToErrorParser | AtfTide",
    "keywords": "Class ExToErrorParser Namespace GitAbstraction Assembly GitAbstraction.dll public static class ExToErrorParser Inheritance object ExToErrorParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToError(Exception) public static Error ToError(this Exception e) Parameters e Exception Returns Error"
  },
  "gitabstractions/GitAbstraction.GitRepository.html": {
    "href": "gitabstractions/GitAbstraction.GitRepository.html",
    "title": "Class GitRepository | AtfTide",
    "keywords": "Class GitRepository Namespace GitAbstraction Assembly GitAbstraction.dll public sealed class GitRepository : IDisposable Inheritance object GitRepository Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties RepoDirectory public IDirectoryInfo RepoDirectory { get; } Property Value IDirectoryInfo Methods AddAll() Stage all working directory changes Adds all files to the staging area. public ErrorOr<Success> AddAll() Returns ErrorOr<Success> Remarks git add --all . See Also libgit2sharp Wiki git add AddFile(string) Stage (add) a file in a repository that is checked out to the file system: public ErrorOr<Success> AddFile(string filePath) Parameters filePath string Filepath to a file with changes, relative to .git directory Returns ErrorOr<Success> See Also libgit2sharp Wiki git add CheckoutBranch(string) Checkout to existing branch by name public ErrorOr<Success> CheckoutBranch(string branchName) Parameters branchName string Branch name to checkout Returns ErrorOr<Success> See Also libgit2sharp Wiki git checkout <code>branch</code> Clone() Clones the repository to the specified directory. public ErrorOr<string> Clone() Returns ErrorOr<string> An ErrorOr.ErrorOr<TValue> containing the path to the cloned repository or an error. See Also libgit2sharp Wiki Clone Commit(string, string, string) Make a commit to a non-bare repository public ErrorOr<Commit> Commit(string name, string email, string message) Parameters name string Committer name email string Committer email message string Commit message Returns ErrorOr<Commit> Commit(string, string, string) See Also libgit2sharp Wiki git commit CreateBranch(string) Creates a new branch pointing at the current HEAD. public ErrorOr<Branch> CreateBranch(string branchName) Parameters branchName string The name of the new branch. Returns ErrorOr<Branch> An ErrorOr.ErrorOr<TValue> indicating success or failure. See Also libgit2sharp Wiki CreateBranchAndPublish(string) public ErrorOr<Success> CreateBranchAndPublish(string branchName) Parameters branchName string Returns ErrorOr<Success> DeleteBranch(string) public ErrorOr<Success> DeleteBranch(string branchName) Parameters branchName string Returns ErrorOr<Success> Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ~GitRepository() protected ~GitRepository() GetCommits() public ErrorOr<IEnumerable<Commit>> GetCommits() Returns ErrorOr<IEnumerable<Commit>> GetInstance(string, string, Uri, string) Gets an instance of the GitRepository class. public static GitRepository GetInstance(string username, string password, Uri gitUrl, string repoDirectory) Parameters username string The username for the repository credentials. password string The password for the repository credentials. gitUrl Uri The URL of the Git repository. repoDirectory string The directory where the repository will be cloned. Returns GitRepository A new instance of the GitRepository class. ListLocalBranches() Lists all local branches in the repository. public ErrorOr<IEnumerable<Branch>> ListLocalBranches() Returns ErrorOr<IEnumerable<Branch>> See Also libgit2sharp Wiki listing-branches PublishBranch(Branch) public ErrorOr<Success> PublishBranch(Branch branch) Parameters branch Branch Returns ErrorOr<Success> Pull() Pulls the latest changes from the remote repository and merges them into the local repository. public ErrorOr<MergeResult> Pull() Returns ErrorOr<MergeResult> An ErrorOr.ErrorOr<TValue> containing the result of the merge or an error. See Also libgit2sharp Wiki git-pull Push(Branch) Pushes the specified branch to the remote repository. public ErrorOr<Success> Push(Branch branch) Parameters branch Branch The branch to push. Returns ErrorOr<Success> An ErrorOr.ErrorOr<TValue> indicating success or failure. See Also libgit2sharp Wiki git-push Push(string) Pushes the specified branch to the remote repository. public ErrorOr<Success> Push(string branchName) Parameters branchName string The branch to push. Returns ErrorOr<Success> An ErrorOr.ErrorOr<TValue> indicating success or failure. See Also libgit2sharp Wiki git-push"
  },
  "gitabstractions/GitAbstraction.html": {
    "href": "gitabstractions/GitAbstraction.html",
    "title": "Namespace GitAbstraction | AtfTide",
    "keywords": "Namespace GitAbstraction Classes ExToErrorParser GitRepository"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | AtfTide",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image. md file link text"
  }
}