### YamlMime:ManagedReference
items:
- uid: ConsoleGit.Services.EventModel
  commentId: T:ConsoleGit.Services.EventModel
  id: EventModel
  parent: ConsoleGit.Services
  children:
  - ConsoleGit.Services.EventModel.#ctor(ConsoleGit.Services.MessageType,System.String)
  - ConsoleGit.Services.EventModel.CommandName
  - ConsoleGit.Services.EventModel.Content
  - ConsoleGit.Services.EventModel.Sender
  - ConsoleGit.Services.EventModel.ToJson
  langs:
  - csharp
  - vb
  name: EventModel
  nameWithType: EventModel
  fullName: ConsoleGit.Services.EventModel
  type: Class
  source:
    remote:
      path: ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
      branch: main
      repo: https://github.com/Advance-Technologies-Foundation/T.I.D.E..git
    id: EventModel
    path: ../ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
    startLine: 48
  assemblies:
  - ConsoleGit
  namespace: ConsoleGit.Services
  syntax:
    content: 'public record EventModel : IEquatable<EventModel>'
    content.vb: Public Class EventModel Implements IEquatable(Of EventModel)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{ConsoleGit.Services.EventModel}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ConsoleGit.Services.EventModel.Sender
  commentId: P:ConsoleGit.Services.EventModel.Sender
  id: Sender
  parent: ConsoleGit.Services.EventModel
  langs:
  - csharp
  - vb
  name: Sender
  nameWithType: EventModel.Sender
  fullName: ConsoleGit.Services.EventModel.Sender
  type: Property
  source:
    remote:
      path: ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
      branch: main
      repo: https://github.com/Advance-Technologies-Foundation/T.I.D.E..git
    id: Sender
    path: ../ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
    startLine: 50
  assemblies:
  - ConsoleGit
  namespace: ConsoleGit.Services
  syntax:
    content: >-
      [JsonPropertyName("Sender")]

      public string Sender { get; init; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("Sender")>

      Public Property Sender As String
  overload: ConsoleGit.Services.EventModel.Sender*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sender
- uid: ConsoleGit.Services.EventModel.Content
  commentId: P:ConsoleGit.Services.EventModel.Content
  id: Content
  parent: ConsoleGit.Services.EventModel
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: EventModel.Content
  fullName: ConsoleGit.Services.EventModel.Content
  type: Property
  source:
    remote:
      path: ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
      branch: main
      repo: https://github.com/Advance-Technologies-Foundation/T.I.D.E..git
    id: Content
    path: ../ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
    startLine: 53
  assemblies:
  - ConsoleGit
  namespace: ConsoleGit.Services
  syntax:
    content: >-
      [JsonPropertyName("Content")]

      public string Content { get; init; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("Content")>

      Public Property Content As String
  overload: ConsoleGit.Services.EventModel.Content*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Content
- uid: ConsoleGit.Services.EventModel.CommandName
  commentId: P:ConsoleGit.Services.EventModel.CommandName
  id: CommandName
  parent: ConsoleGit.Services.EventModel
  langs:
  - csharp
  - vb
  name: CommandName
  nameWithType: EventModel.CommandName
  fullName: ConsoleGit.Services.EventModel.CommandName
  type: Property
  source:
    remote:
      path: ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
      branch: main
      repo: https://github.com/Advance-Technologies-Foundation/T.I.D.E..git
    id: CommandName
    path: ../ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
    startLine: 56
  assemblies:
  - ConsoleGit
  namespace: ConsoleGit.Services
  syntax:
    content: >-
      [JsonPropertyName("CommandName")]

      public string CommandName { get; init; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("CommandName")>

      Public Property CommandName As String
  overload: ConsoleGit.Services.EventModel.CommandName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CommandName
- uid: ConsoleGit.Services.EventModel.#ctor(ConsoleGit.Services.MessageType,System.String)
  commentId: M:ConsoleGit.Services.EventModel.#ctor(ConsoleGit.Services.MessageType,System.String)
  id: '#ctor(ConsoleGit.Services.MessageType,System.String)'
  parent: ConsoleGit.Services.EventModel
  langs:
  - csharp
  - vb
  name: EventModel(MessageType, string)
  nameWithType: EventModel.EventModel(MessageType, string)
  fullName: ConsoleGit.Services.EventModel.EventModel(ConsoleGit.Services.MessageType, string)
  type: Constructor
  source:
    remote:
      path: ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
      branch: main
      repo: https://github.com/Advance-Technologies-Foundation/T.I.D.E..git
    id: .ctor
    path: ../ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
    startLine: 59
  assemblies:
  - ConsoleGit
  namespace: ConsoleGit.Services
  syntax:
    content: public EventModel(MessageType messageType, string message)
    parameters:
    - id: messageType
      type: ConsoleGit.Services.MessageType
    - id: message
      type: System.String
    content.vb: Public Sub New(messageType As MessageType, message As String)
  overload: ConsoleGit.Services.EventModel.#ctor*
  nameWithType.vb: EventModel.New(MessageType, String)
  fullName.vb: ConsoleGit.Services.EventModel.New(ConsoleGit.Services.MessageType, String)
  name.vb: New(MessageType, String)
- uid: ConsoleGit.Services.EventModel.ToJson
  commentId: M:ConsoleGit.Services.EventModel.ToJson
  id: ToJson
  parent: ConsoleGit.Services.EventModel
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: EventModel.ToJson()
  fullName: ConsoleGit.Services.EventModel.ToJson()
  type: Method
  source:
    remote:
      path: ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
      branch: main
      repo: https://github.com/Advance-Technologies-Foundation/T.I.D.E..git
    id: ToJson
    path: ../ConsoleGit/ConsoleGit/Services/WebSocketLogger.cs
    startLine: 64
  assemblies:
  - ConsoleGit
  namespace: ConsoleGit.Services
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: ConsoleGit.Services.EventModel.ToJson*
references:
- uid: ConsoleGit.Services
  commentId: N:ConsoleGit.Services
  href: ConsoleGit.html
  name: ConsoleGit.Services
  nameWithType: ConsoleGit.Services
  fullName: ConsoleGit.Services
  spec.csharp:
  - uid: ConsoleGit
    name: ConsoleGit
    href: ConsoleGit.html
  - name: .
  - uid: ConsoleGit.Services
    name: Services
    href: ConsoleGit.Services.html
  spec.vb:
  - uid: ConsoleGit
    name: ConsoleGit
    href: ConsoleGit.html
  - name: .
  - uid: ConsoleGit.Services
    name: Services
    href: ConsoleGit.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{ConsoleGit.Services.EventModel}
  commentId: T:System.IEquatable{ConsoleGit.Services.EventModel}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<EventModel>
  nameWithType: IEquatable<EventModel>
  fullName: System.IEquatable<ConsoleGit.Services.EventModel>
  nameWithType.vb: IEquatable(Of EventModel)
  fullName.vb: System.IEquatable(Of ConsoleGit.Services.EventModel)
  name.vb: IEquatable(Of EventModel)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ConsoleGit.Services.EventModel
    name: EventModel
    href: ConsoleGit.Services.EventModel.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ConsoleGit.Services.EventModel
    name: EventModel
    href: ConsoleGit.Services.EventModel.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ConsoleGit.Services.EventModel.Sender*
  commentId: Overload:ConsoleGit.Services.EventModel.Sender
  href: ConsoleGit.Services.EventModel.html#ConsoleGit_Services_EventModel_Sender
  name: Sender
  nameWithType: EventModel.Sender
  fullName: ConsoleGit.Services.EventModel.Sender
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ConsoleGit.Services.EventModel.Content*
  commentId: Overload:ConsoleGit.Services.EventModel.Content
  href: ConsoleGit.Services.EventModel.html#ConsoleGit_Services_EventModel_Content
  name: Content
  nameWithType: EventModel.Content
  fullName: ConsoleGit.Services.EventModel.Content
- uid: ConsoleGit.Services.EventModel.CommandName*
  commentId: Overload:ConsoleGit.Services.EventModel.CommandName
  href: ConsoleGit.Services.EventModel.html#ConsoleGit_Services_EventModel_CommandName
  name: CommandName
  nameWithType: EventModel.CommandName
  fullName: ConsoleGit.Services.EventModel.CommandName
- uid: ConsoleGit.Services.EventModel.#ctor*
  commentId: Overload:ConsoleGit.Services.EventModel.#ctor
  href: ConsoleGit.Services.EventModel.html#ConsoleGit_Services_EventModel__ctor_ConsoleGit_Services_MessageType_System_String_
  name: EventModel
  nameWithType: EventModel.EventModel
  fullName: ConsoleGit.Services.EventModel.EventModel
  nameWithType.vb: EventModel.New
  fullName.vb: ConsoleGit.Services.EventModel.New
  name.vb: New
- uid: ConsoleGit.Services.MessageType
  commentId: T:ConsoleGit.Services.MessageType
  parent: ConsoleGit.Services
  href: ConsoleGit.Services.MessageType.html
  name: MessageType
  nameWithType: MessageType
  fullName: ConsoleGit.Services.MessageType
- uid: ConsoleGit.Services.EventModel.ToJson*
  commentId: Overload:ConsoleGit.Services.EventModel.ToJson
  href: ConsoleGit.Services.EventModel.html#ConsoleGit_Services_EventModel_ToJson
  name: ToJson
  nameWithType: EventModel.ToJson
  fullName: ConsoleGit.Services.EventModel.ToJson
